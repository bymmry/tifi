{"version":3,"sources":["webpack:///static/js/1.99d82fbdb041b110d219.js","webpack:///./src/components/Search.vue","webpack:///./src/components/Search.vue?f37c","webpack:///./src/components/MicPopup.vue?6f75","webpack:///./~/.1.3.4@msr/MediaStreamRecorder.js","webpack:///./src/components/MicPopup.vue","webpack:///./src/components/Search.vue?0342","webpack:///./src/components/MicPopup.vue?2e01","webpack:///./src/components/Search.vue?ff0d","webpack:///./src/components/MicPopup.vue?25fb","webpack:///MicPopup.vue","webpack:///Search.vue"],"names":["webpackJsonp","647","module","exports","__webpack_require__","Component","655","push","i","version","sources","names","mappings","file","sourcesContent","sourceRoot","659","666","global","MediaStreamRecorder","mediaStream","this","start","timeSlice","Recorder","MediaRecorder","MediaRecorderWrapper","IsChrome","IsOpera","IsEdge","mimeType","indexOf","WhammyRecorder","StereoAudioRecorder","GifRecorder","recorderType","mediaRecorder","blobs","self","ondataavailable","data","onstop","onStartedDrawingNonBlankFrames","mergeProps","clearOldRecordedFrames","stop","blob","console","log","error","warn","save","fileName","ConcatenateBlobs","type","concatenatedBlob","invokeSaveAsDialog","pause","resume","disableLogs","MultiStreamRecorder","isMediaRecorder","isMediaRecorderCompatible","stream","fireOnDataAvailableEvent","recordingInterval","audioRecorder","videoRecorder","prop","audioVideoBlobs","audio","video","onDataAvailableEventFired","mergein","mergeto","t","e","fileExtension","split","splitted","fileFullName","Math","round","random","navigator","msSaveOrOpenBlob","msSaveBlob","hyperlink","document","createElement","href","URL","createObjectURL","target","download","mozGetUserMedia","onclick","body","documentElement","removeChild","appendChild","evt","MouseEvent","view","window","bubbles","cancelable","dispatchEvent","revokeObjectURL","bytesToSize","bytes","sizes","parseInt","floor","pow","toPrecision","isOpera","opera","userAgent","isChrome","chrome","InstallTrigger","verOffset","ix","nAgt","appVersion","fullVersion","parseFloat","majorVersion","substring","isNaN","isMediaStreamActive","active","ended","__disableLogs","getVideoTracks","length","getAudioTracks","MediaStream","addTrack","dontFireOnDataAvailableEvent","recorderHints","canRecordMimeType","ignoreMutedMedia","firedOnDataAvailableOnce","size","getNativeBlob","Blob","onerror","name","state","setTimeout","requestData","callback","record","clearRecordedData","looper","StereoAudioRecorderHelper","timeout","setInterval","clearTimeout","root","interleave","leftChannel","rightChannel","result","Float32Array","inputIndex","index","mergeBuffers","channelBuffer","recordingLength","offset","lng","buffer","set","writeUTFBytes","string","setUint8","charCodeAt","convertoFloat32ToInt16","l","buf","Int16Array","deviceSampleRate","ObjectStore","AudioContextConstructor","AudioContext","sampleRate","scriptprocessornode","volume","audioInput","context","leftchannel","rightchannel","recording","isPCM","numChannels","audioChannels","isPaused","requestDataInvoked","internalLeftChannel","slice","internalRightChannel","internalRecordingLength","leftBuffer","interleaved","debug","ArrayBuffer","DataView","setUint32","setUint16","setInt16","disconnect","VolumeGainNode","createGain","AudioInput","createMediaStreamSource","connect","bufferSize","createJavaScriptNode","createScriptProcessor","onaudioprocess","left","inputBuffer","getChannelData","right","destination","WhammyRecorderHelper","drawFrames","lastTime","Date","getTime","isStopDrawing","duration","isHTMLObject","paused","play","drawImage","canvas","width","height","whammy","frames","image","toDataURL","isOnStartedDrawingNonBlankFramesInvoked","isBlankFrame","frame","_pixTolerance","_frameTolerance","localCanvas","matchPixCount","endPixCheck","maxPixCount","context2d","getContext","sampleColor","r","g","b","maxColorDifference","sqrt","pixTolerance","frameTolerance","Image","src","imageData","getImageData","pix","currentColor","dropBlackFrames","_frames","_framesToCheck","resultFrames","checkUntilNotBlack","endCheckFrame","doNotCheckNext","f","concat","HTMLVideoElement","videoWidth","clientWidth","videoHeight","clientHeight","cloneNode","muted","Whammy","Video","speed","quality","internalFrames","compile","whammyBlob","doneRecording","endTime","now","gifBlob","Uint8Array","gifEncoder","bin","GIFEncoder","drawVideoFrame","time","lastAnimationFrame","requestAnimationFrame","undefined","lastFrameTime","imageWidth","imageHeight","addFrame","setRepeat","setDelay","frameRate","setQuality","startTime","cancelAnimationFrame","autoplay","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","browserFakeUserAgent","that","getUserMedia","captureStream","mozCaptureStream","location","protocol","hash","screen","webkitAudioContext","mozAudioContext","webkitURL","webkitGetUserMedia","webkitMediaStream","prototype","getTracks","tracks","forEach","track","kind","toString","WhammyVideo","processInWebWorker","_function","worker","Worker","whammyInWebWorker","ArrayToWebM","info","checkFrames","EBML","id","doubleToString","frameNumber","clusterTimecode","clusterFrames","clusterDuration","cluster","getClusterData","generateEBML","clusterCounter","map","webp","block","makeSimpleBlock","discardable","invisible","keyframe","lacing","trackNum","timecode","postMessage","numToBuffer","num","parts","reverse","strToBuffer","str","bitsToBuffer","bits","Array","join","substr","json","ebml","len","byteLength","zeroes","ceil","sizeToString","padded","flags","String","fromCharCode","parseWebP","riff","VP8","RIFF","WEBP","frameStart","c","tmp","getStrLength","unpadded","parseRIFF","chunks","call","Float64Array","webm","atob","add","test","webWorker","onmessage","event","readAsArrayBuffer","concatenateBuffers","reader","FileReader","onload","buffers","Uint16Array","lastOffset","reusableByteLength","apply","667","673","render","_vm","_h","$createElement","_c","_self","staticClass","_v","attrs","span","directives","rawName","value","expression","placeholder","domProps","on","keyup","$event","_k","keyCode","search","input","composing","keywords","nativeOn","click","micPopup","enter-active-class","leave-active-class","close","closeMic","_e","staticStyle","line-height","_l","item","key","margin","color","searchDetil","_s","activeType","resultShow","count","min-height","padding","code","class","background","margin-bottom","cursor","wyPlayMusic","artists","album","row","gutter","col","picUrl","$store","commit","path","font-size","artist","formatTime","publishTime","rowItem","img1v1Url","coverImgUrl","trackCount","playCount","cover","artistName","formatTimeMi","justify-content","total","current","currPage","defaultPageSize","pageSize","pageChange","staticRenderFns","678","percent","micPercent","stroke-color","stroke-width","trail-width","startMic","micText","stopPropagation","playMusic","margin-top","vertical-align","fill","overflow","viewBox","xmlns","p-id","d","688","content","locals","692","702","__webpack_exports__","Object","defineProperty","__WEBPACK_IMPORTED_MODULE_0_iview__","__WEBPACK_IMPORTED_MODULE_1__axios__","n","micToggle","methods","$emit","uploadToPythonServer","File","toISOString","replace","formData","FormData","append","audioRec","then","_this","onMediaSuccess","micSetInterval","clearInterval","onMediaError","mediaConstraints","successCallback","errorCallback","mediaDevices","catch","querySelector","url","music","alert","destroyed","709","__WEBPACK_IMPORTED_MODULE_1__wyApi__","__WEBPACK_IMPORTED_MODULE_2__MicPopup__","__WEBPACK_IMPORTED_MODULE_2__MicPopup___default","__WEBPACK_IMPORTED_MODULE_3_moment__","__WEBPACK_IMPORTED_MODULE_3_moment___default","a","locale","components","MicPopup","val","watch","musicData","mp3Url","wyID","format","minute","second","toFixed","fixedPlayLeft","playLeft","mounted"],"mappings":"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","file":"static/js/1.99d82fbdb041b110d219.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 647:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(688)\n\nvar Component = __webpack_require__(2)(\n  /* script */\n  __webpack_require__(709),\n  /* template */\n  __webpack_require__(673),\n  /* scopeId */\n  \"data-v-0e58c7f7\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 655:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(637)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".search-bg[data-v-0e58c7f7]{position:absolute;background:#f0f0f0;top:0;height:calc(150px + 9rem);z-index:-1;width:100%;left:0}.search-input[data-v-0e58c7f7]{background:#fff;width:100%;border:none;outline:none;height:50px;font-size:20px;padding:0 50px}.search-icon[data-v-0e58c7f7]{right:20px}.search-icon[data-v-0e58c7f7],.search-mic[data-v-0e58c7f7]{color:#bababa;font-size:24px;position:absolute;top:13px;cursor:pointer;z-index:1}.search-mic[data-v-0e58c7f7]{left:20px}.song-result-content[data-v-0e58c7f7]{line-height:40px}.song-result-content.active[data-v-0e58c7f7]{background:#f0f0f0}.album-result-content[data-v-0e58c7f7]{line-height:50px}.album-result-content.active[data-v-0e58c7f7]{background:#f0f0f0}\", \"\", {\"version\":3,\"sources\":[\"/Users/xiecp/tifi/views/src/components/Search.vue\"],\"names\":[],\"mappings\":\"AACA,4BACE,kBAAmB,AACnB,mBAAoB,AACpB,MAAO,AACP,0BAA2B,AAC3B,WAAY,AACZ,WAAY,AACZ,MAAO,CACR,AACD,+BACE,gBAAiB,AACjB,WAAY,AACZ,YAAa,AACb,aAAc,AACd,YAAa,AACb,eAAgB,AAChB,cAAgB,CACjB,AACD,8BAKE,UAAY,CAGb,AACD,2DARE,cAAe,AACf,eAAgB,AAChB,kBAAmB,AACnB,SAAU,AAEV,eAAgB,AAChB,SAAU,CAUX,AARD,6BAKE,SAAW,CAGZ,AACD,sCACE,gBAAiB,CAClB,AACD,6CACE,kBAAmB,CACpB,AACD,uCACE,gBAAiB,CAClB,AACD,8CACE,kBAAmB,CACpB\",\"file\":\"Search.vue\",\"sourcesContent\":[\"\\n.search-bg[data-v-0e58c7f7] {\\n  position: absolute;\\n  background: #f0f0f0;\\n  top: 0;\\n  height: calc(150px + 9rem);\\n  z-index: -1;\\n  width: 100%;\\n  left: 0\\n}\\n.search-input[data-v-0e58c7f7] {\\n  background: #fff;\\n  width: 100%;\\n  border: none;\\n  outline: none;\\n  height: 50px;\\n  font-size: 20px;\\n  padding: 0 50px;\\n}\\n.search-icon[data-v-0e58c7f7] {\\n  color: #bababa;\\n  font-size: 24px;\\n  position: absolute;\\n  top: 13px;\\n  right: 20px;\\n  cursor: pointer;\\n  z-index: 1\\n}\\n.search-mic[data-v-0e58c7f7] {\\n  color: #bababa;\\n  font-size: 24px;\\n  position: absolute;\\n  top: 13px;\\n  left: 20px;\\n  cursor: pointer;\\n  z-index: 1\\n}\\n.song-result-content[data-v-0e58c7f7] {\\n  line-height: 40px\\n}\\n.song-result-content.active[data-v-0e58c7f7] {\\n  background: #f0f0f0\\n}\\n.album-result-content[data-v-0e58c7f7] {\\n  line-height: 50px\\n}\\n.album-result-content.active[data-v-0e58c7f7] {\\n  background: #f0f0f0\\n}\\n\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 659:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(637)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".mic-popup[data-v-369f38b4]{position:absolute;padding-top:80px;height:400px;width:100%;background:#fff;top:110%;z-index:1}.search-mic-big[data-v-369f38b4]{font-size:150px}.result-div[data-v-369f38b4]{position:absolute;top:-33%;left:-10%;height:320px;width:320px;border-radius:50%;background:#fff;font-size:16px;padding:50px;z-index:1}.result-img[data-v-369f38b4]{width:120px;height:120px;border-radius:50%}\", \"\", {\"version\":3,\"sources\":[\"/Users/xiecp/tifi/views/src/components/MicPopup.vue\"],\"names\":[],\"mappings\":\"AACA,4BACE,kBAAmB,AACnB,iBAAkB,AAClB,aAAc,AACd,WAAY,AACZ,gBAAiB,AACjB,SAAU,AACV,SAAU,CACX,AACD,iCACE,eAAgB,CACjB,AACD,6BACE,kBAAmB,AACnB,SAAU,AACV,UAAW,AACX,aAAc,AACd,YAAa,AACb,kBAAmB,AACnB,gBAAiB,AACjB,eAAgB,AAChB,aAAc,AACd,SAAU,CACX,AACD,6BACE,YAAa,AACb,aAAc,AACd,iBAAkB,CACnB\",\"file\":\"MicPopup.vue\",\"sourcesContent\":[\"\\n.mic-popup[data-v-369f38b4] {\\n  position: absolute;\\n  padding-top: 80px;\\n  height: 400px;\\n  width: 100%;\\n  background: #fff;\\n  top: 110%;\\n  z-index: 1\\n}\\n.search-mic-big[data-v-369f38b4] {\\n  font-size: 150px\\n}\\n.result-div[data-v-369f38b4] {\\n  position: absolute;\\n  top: -33%;\\n  left: -10%;\\n  height: 320px;\\n  width: 320px;\\n  border-radius: 50%;\\n  background: #fff;\\n  font-size: 16px;\\n  padding: 50px;\\n  z-index: 1\\n}\\n.result-img[data-v-369f38b4] {\\n  width: 120px;\\n  height: 120px;\\n  border-radius: 50%\\n}\\n\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 666:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// Last time updated: 2016-07-03 8:51:35 AM UTC\n\n// links:\n// Open-Sourced: https://github.com/streamproc/MediaStreamRecorder\n// https://cdn.WebRTC-Experiment.com/MediaStreamRecorder.js\n// https://www.WebRTC-Experiment.com/MediaStreamRecorder.js\n// npm install msr\n\n//------------------------------------\n\n// Browsers Support::\n// Chrome (all versions) [ audio/video separately ]\n// Firefox ( >= 29 ) [ audio/video in single webm/mp4 container or only audio in ogg ]\n// Opera (all versions) [ same as chrome ]\n// Android (Chrome) [ only video ]\n// Android (Opera) [ only video ]\n// Android (Firefox) [ only video ]\n// Microsoft Edge (Only Audio & Gif)\n\n//------------------------------------\n// Muaz Khan     - www.MuazKhan.com\n// MIT License   - www.WebRTC-Experiment.com/licence\n//------------------------------------\n\n// ______________________\n// MediaStreamRecorder.js\n\nfunction MediaStreamRecorder(mediaStream) {\n    if (!mediaStream) {\n        throw 'MediaStream is mandatory.';\n    }\n\n    // void start(optional long timeSlice)\n    // timestamp to fire \"ondataavailable\"\n    this.start = function(timeSlice) {\n        var Recorder;\n\n        if (typeof MediaRecorder !== 'undefined') {\n            Recorder = MediaRecorderWrapper;\n        } else if (IsChrome || IsOpera || IsEdge) {\n            if (this.mimeType.indexOf('video') !== -1) {\n                Recorder = WhammyRecorder;\n            } else if (this.mimeType.indexOf('audio') !== -1) {\n                Recorder = StereoAudioRecorder;\n            }\n        }\n\n        // video recorder (in GIF format)\n        if (this.mimeType === 'image/gif') {\n            Recorder = GifRecorder;\n        }\n\n        // audio/wav is supported only via StereoAudioRecorder\n        // audio/pcm (int16) is supported only via StereoAudioRecorder\n        if (this.mimeType === 'audio/wav' || this.mimeType === 'audio/pcm') {\n            Recorder = StereoAudioRecorder;\n        }\n\n        // allows forcing StereoAudioRecorder.js on Edge/Firefox\n        if (this.recorderType) {\n            Recorder = this.recorderType;\n        }\n\n        mediaRecorder = new Recorder(mediaStream);\n        mediaRecorder.blobs = [];\n\n        var self = this;\n        mediaRecorder.ondataavailable = function(data) {\n            mediaRecorder.blobs.push(data);\n            self.ondataavailable(data);\n        };\n        mediaRecorder.onstop = this.onstop;\n        mediaRecorder.onStartedDrawingNonBlankFrames = this.onStartedDrawingNonBlankFrames;\n\n        // Merge all data-types except \"function\"\n        mediaRecorder = mergeProps(mediaRecorder, this);\n\n        mediaRecorder.start(timeSlice);\n    };\n\n    this.onStartedDrawingNonBlankFrames = function() {};\n    this.clearOldRecordedFrames = function() {\n        if (!mediaRecorder) {\n            return;\n        }\n\n        mediaRecorder.clearOldRecordedFrames();\n    };\n\n    this.stop = function() {\n        if (mediaRecorder) {\n            mediaRecorder.stop();\n        }\n    };\n\n    this.ondataavailable = function(blob) {\n        console.log('ondataavailable..', blob);\n    };\n\n    this.onstop = function(error) {\n        console.warn('stopped..', error);\n    };\n\n    this.save = function(file, fileName) {\n        if (!file) {\n            if (!mediaRecorder) {\n                return;\n            }\n\n            ConcatenateBlobs(mediaRecorder.blobs, mediaRecorder.blobs[0].type, function(concatenatedBlob) {\n                invokeSaveAsDialog(concatenatedBlob);\n            });\n            return;\n        }\n        invokeSaveAsDialog(file, fileName);\n    };\n\n    this.pause = function() {\n        if (!mediaRecorder) {\n            return;\n        }\n        mediaRecorder.pause();\n        console.log('Paused recording.', this.mimeType || mediaRecorder.mimeType);\n    };\n\n    this.resume = function() {\n        if (!mediaRecorder) {\n            return;\n        }\n        mediaRecorder.resume();\n        console.log('Resumed recording.', this.mimeType || mediaRecorder.mimeType);\n    };\n\n    // StereoAudioRecorder || WhammyRecorder || MediaRecorderWrapper || GifRecorder\n    this.recorderType = null;\n\n    // video/webm or audio/webm or audio/ogg or audio/wav\n    this.mimeType = 'video/webm';\n\n    // logs are enabled by default\n    this.disableLogs = false;\n\n    // Reference to \"MediaRecorder.js\"\n    var mediaRecorder;\n}\n\n// ______________________\n// MultiStreamRecorder.js\n\nfunction MultiStreamRecorder(mediaStream) {\n    if (!mediaStream) {\n        throw 'MediaStream is mandatory.';\n    }\n\n    var self = this;\n    var isMediaRecorder = isMediaRecorderCompatible();\n\n    this.stream = mediaStream;\n\n    // void start(optional long timeSlice)\n    // timestamp to fire \"ondataavailable\"\n    this.start = function(timeSlice) {\n        audioRecorder = new MediaStreamRecorder(mediaStream);\n        videoRecorder = new MediaStreamRecorder(mediaStream);\n\n        audioRecorder.mimeType = 'audio/ogg';\n        videoRecorder.mimeType = 'video/webm';\n\n        for (var prop in this) {\n            if (typeof this[prop] !== 'function') {\n                audioRecorder[prop] = videoRecorder[prop] = this[prop];\n            }\n        }\n\n        audioRecorder.ondataavailable = function(blob) {\n            if (!audioVideoBlobs[recordingInterval]) {\n                audioVideoBlobs[recordingInterval] = {};\n            }\n\n            audioVideoBlobs[recordingInterval].audio = blob;\n\n            if (audioVideoBlobs[recordingInterval].video && !audioVideoBlobs[recordingInterval].onDataAvailableEventFired) {\n                audioVideoBlobs[recordingInterval].onDataAvailableEventFired = true;\n                fireOnDataAvailableEvent(audioVideoBlobs[recordingInterval]);\n            }\n        };\n\n        videoRecorder.ondataavailable = function(blob) {\n            if (isMediaRecorder) {\n                return self.ondataavailable({\n                    video: blob,\n                    audio: blob\n                });\n            }\n\n            if (!audioVideoBlobs[recordingInterval]) {\n                audioVideoBlobs[recordingInterval] = {};\n            }\n\n            audioVideoBlobs[recordingInterval].video = blob;\n\n            if (audioVideoBlobs[recordingInterval].audio && !audioVideoBlobs[recordingInterval].onDataAvailableEventFired) {\n                audioVideoBlobs[recordingInterval].onDataAvailableEventFired = true;\n                fireOnDataAvailableEvent(audioVideoBlobs[recordingInterval]);\n            }\n        };\n\n        function fireOnDataAvailableEvent(blobs) {\n            recordingInterval++;\n            self.ondataavailable(blobs);\n        }\n\n        videoRecorder.onstop = audioRecorder.onstop = function(error) {\n            self.onstop(error);\n        };\n\n        if (!isMediaRecorder) {\n            // to make sure both audio/video are synced.\n            videoRecorder.onStartedDrawingNonBlankFrames = function() {\n                videoRecorder.clearOldRecordedFrames();\n                audioRecorder.start(timeSlice);\n            };\n            videoRecorder.start(timeSlice);\n        } else {\n            videoRecorder.start(timeSlice);\n        }\n    };\n\n    this.stop = function() {\n        if (audioRecorder) {\n            audioRecorder.stop();\n        }\n        if (videoRecorder) {\n            videoRecorder.stop();\n        }\n    };\n\n    this.ondataavailable = function(blob) {\n        console.log('ondataavailable..', blob);\n    };\n\n    this.onstop = function(error) {\n        console.warn('stopped..', error);\n    };\n\n    this.pause = function() {\n        if (audioRecorder) {\n            audioRecorder.pause();\n        }\n        if (videoRecorder) {\n            videoRecorder.pause();\n        }\n    };\n\n    this.resume = function() {\n        if (audioRecorder) {\n            audioRecorder.resume();\n        }\n        if (videoRecorder) {\n            videoRecorder.resume();\n        }\n    };\n\n    var audioRecorder;\n    var videoRecorder;\n\n    var audioVideoBlobs = {};\n    var recordingInterval = 0;\n}\n\nif (typeof MediaStreamRecorder !== 'undefined') {\n    MediaStreamRecorder.MultiStreamRecorder = MultiStreamRecorder;\n}\n\n// _____________________________\n// Cross-Browser-Declarations.js\n\nvar browserFakeUserAgent = 'Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45';\n\n(function(that) {\n    if (typeof window !== 'undefined') {\n        return;\n    }\n\n    if (typeof window === 'undefined' && typeof global !== 'undefined') {\n        global.navigator = {\n            userAgent: browserFakeUserAgent,\n            getUserMedia: function() {}\n        };\n\n        /*global window:true */\n        that.window = global;\n    } else if (typeof window === 'undefined') {\n        // window = this;\n    }\n\n    if (typeof document === 'undefined') {\n        /*global document:true */\n        that.document = {};\n\n        document.createElement = document.captureStream = document.mozCaptureStream = function() {\n            return {};\n        };\n    }\n\n    if (typeof location === 'undefined') {\n        /*global location:true */\n        that.location = {\n            protocol: 'file:',\n            href: '',\n            hash: ''\n        };\n    }\n\n    if (typeof screen === 'undefined') {\n        /*global screen:true */\n        that.screen = {\n            width: 0,\n            height: 0\n        };\n    }\n})(typeof global !== 'undefined' ? global : window);\n\n// WebAudio API representer\nvar AudioContext = window.AudioContext;\n\nif (typeof AudioContext === 'undefined') {\n    if (typeof webkitAudioContext !== 'undefined') {\n        /*global AudioContext:true */\n        AudioContext = webkitAudioContext;\n    }\n\n    if (typeof mozAudioContext !== 'undefined') {\n        /*global AudioContext:true */\n        AudioContext = mozAudioContext;\n    }\n}\n\nif (typeof window === 'undefined') {\n    /*jshint -W020 */\n    window = {};\n}\n\n// WebAudio API representer\nvar AudioContext = window.AudioContext;\n\nif (typeof AudioContext === 'undefined') {\n    if (typeof webkitAudioContext !== 'undefined') {\n        /*global AudioContext:true */\n        AudioContext = webkitAudioContext;\n    }\n\n    if (typeof mozAudioContext !== 'undefined') {\n        /*global AudioContext:true */\n        AudioContext = mozAudioContext;\n    }\n}\n\n/*jshint -W079 */\nvar URL = window.URL;\n\nif (typeof URL === 'undefined' && typeof webkitURL !== 'undefined') {\n    /*global URL:true */\n    URL = webkitURL;\n}\n\nif (typeof navigator !== 'undefined') {\n    if (typeof navigator.webkitGetUserMedia !== 'undefined') {\n        navigator.getUserMedia = navigator.webkitGetUserMedia;\n    }\n\n    if (typeof navigator.mozGetUserMedia !== 'undefined') {\n        navigator.getUserMedia = navigator.mozGetUserMedia;\n    }\n} else {\n    navigator = {\n        getUserMedia: function() {},\n        userAgent: browserFakeUserAgent\n    };\n}\n\nvar IsEdge = navigator.userAgent.indexOf('Edge') !== -1 && (!!navigator.msSaveBlob || !!navigator.msSaveOrOpenBlob);\n\nvar IsOpera = false;\nif (typeof opera !== 'undefined' && navigator.userAgent && navigator.userAgent.indexOf('OPR/') !== -1) {\n    IsOpera = true;\n}\nvar IsChrome = !IsEdge && !IsEdge && !!navigator.webkitGetUserMedia;\n\nvar MediaStream = window.MediaStream;\n\nif (typeof MediaStream === 'undefined' && typeof webkitMediaStream !== 'undefined') {\n    MediaStream = webkitMediaStream;\n}\n\n/*global MediaStream:true */\nif (typeof MediaStream !== 'undefined') {\n    if (!('getVideoTracks' in MediaStream.prototype)) {\n        MediaStream.prototype.getVideoTracks = function() {\n            if (!this.getTracks) {\n                return [];\n            }\n\n            var tracks = [];\n            this.getTracks.forEach(function(track) {\n                if (track.kind.toString().indexOf('video') !== -1) {\n                    tracks.push(track);\n                }\n            });\n            return tracks;\n        };\n\n        MediaStream.prototype.getAudioTracks = function() {\n            if (!this.getTracks) {\n                return [];\n            }\n\n            var tracks = [];\n            this.getTracks.forEach(function(track) {\n                if (track.kind.toString().indexOf('audio') !== -1) {\n                    tracks.push(track);\n                }\n            });\n            return tracks;\n        };\n    }\n\n    if (!('stop' in MediaStream.prototype)) {\n        MediaStream.prototype.stop = function() {\n            this.getAudioTracks().forEach(function(track) {\n                if (!!track.stop) {\n                    track.stop();\n                }\n            });\n\n            this.getVideoTracks().forEach(function(track) {\n                if (!!track.stop) {\n                    track.stop();\n                }\n            });\n        };\n    }\n}\n\nif (typeof location !== 'undefined') {\n    if (location.href.indexOf('file:') === 0) {\n        console.error('Please load this HTML file on HTTP or HTTPS.');\n    }\n}\n\n// Merge all other data-types except \"function\"\n\nfunction mergeProps(mergein, mergeto) {\n    for (var t in mergeto) {\n        if (typeof mergeto[t] !== 'function') {\n            mergein[t] = mergeto[t];\n        }\n    }\n    return mergein;\n}\n\n// \"dropFirstFrame\" has been added by Graham Roth\n// https://github.com/gsroth\n\nfunction dropFirstFrame(arr) {\n    arr.shift();\n    return arr;\n}\n\n/**\n * @param {Blob} file - File or Blob object. This parameter is required.\n * @param {string} fileName - Optional file name e.g. \"Recorded-Video.webm\"\n * @example\n * invokeSaveAsDialog(blob or file, [optional] fileName);\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n */\nfunction invokeSaveAsDialog(file, fileName) {\n    if (!file) {\n        throw 'Blob object is required.';\n    }\n\n    if (!file.type) {\n        try {\n            file.type = 'video/webm';\n        } catch (e) {}\n    }\n\n    var fileExtension = (file.type || 'video/webm').split('/')[1];\n\n    if (fileName && fileName.indexOf('.') !== -1) {\n        var splitted = fileName.split('.');\n        fileName = splitted[0];\n        fileExtension = splitted[1];\n    }\n\n    var fileFullName = (fileName || (Math.round(Math.random() * 9999999999) + 888888888)) + '.' + fileExtension;\n\n    if (typeof navigator.msSaveOrOpenBlob !== 'undefined') {\n        return navigator.msSaveOrOpenBlob(file, fileFullName);\n    } else if (typeof navigator.msSaveBlob !== 'undefined') {\n        return navigator.msSaveBlob(file, fileFullName);\n    }\n\n    var hyperlink = document.createElement('a');\n    hyperlink.href = URL.createObjectURL(file);\n    hyperlink.target = '_blank';\n    hyperlink.download = fileFullName;\n\n    if (!!navigator.mozGetUserMedia) {\n        hyperlink.onclick = function() {\n            (document.body || document.documentElement).removeChild(hyperlink);\n        };\n        (document.body || document.documentElement).appendChild(hyperlink);\n    }\n\n    var evt = new MouseEvent('click', {\n        view: window,\n        bubbles: true,\n        cancelable: true\n    });\n\n    hyperlink.dispatchEvent(evt);\n\n    if (!navigator.mozGetUserMedia) {\n        URL.revokeObjectURL(hyperlink.href);\n    }\n}\n\nfunction bytesToSize(bytes) {\n    var k = 1000;\n    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    if (bytes === 0) {\n        return '0 Bytes';\n    }\n    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(k)), 10);\n    return (bytes / Math.pow(k, i)).toPrecision(3) + ' ' + sizes[i];\n}\n\n// ______________ (used to handle stuff like http://goo.gl/xmE5eg) issue #129\n// ObjectStore.js\nvar ObjectStore = {\n    AudioContext: AudioContext\n};\n\nfunction isMediaRecorderCompatible() {\n    var isOpera = !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0;\n    var isChrome = !!window.chrome && !isOpera;\n    var isFirefox = typeof window.InstallTrigger !== 'undefined';\n\n    if (isFirefox) {\n        return true;\n    }\n\n    if (!isChrome) {\n        return false;\n    }\n\n    var nVer = navigator.appVersion;\n    var nAgt = navigator.userAgent;\n    var fullVersion = '' + parseFloat(navigator.appVersion);\n    var majorVersion = parseInt(navigator.appVersion, 10);\n    var nameOffset, verOffset, ix;\n\n    if (isChrome) {\n        verOffset = nAgt.indexOf('Chrome');\n        fullVersion = nAgt.substring(verOffset + 7);\n    }\n\n    // trim the fullVersion string at semicolon/space if present\n    if ((ix = fullVersion.indexOf(';')) !== -1) {\n        fullVersion = fullVersion.substring(0, ix);\n    }\n\n    if ((ix = fullVersion.indexOf(' ')) !== -1) {\n        fullVersion = fullVersion.substring(0, ix);\n    }\n\n    majorVersion = parseInt('' + fullVersion, 10);\n\n    if (isNaN(majorVersion)) {\n        fullVersion = '' + parseFloat(navigator.appVersion);\n        majorVersion = parseInt(navigator.appVersion, 10);\n    }\n\n    return majorVersion >= 49;\n}\n\n// ______________ (used to handle stuff like http://goo.gl/xmE5eg) issue #129\n// ObjectStore.js\nvar ObjectStore = {\n    AudioContext: window.AudioContext || window.webkitAudioContext\n};\n\n// ==================\n// MediaRecorder.js\n\n/**\n * Implementation of https://dvcs.w3.org/hg/dap/raw-file/default/media-stream-capture/MediaRecorder.html\n * The MediaRecorder accepts a mediaStream as input source passed from UA. When recorder starts,\n * a MediaEncoder will be created and accept the mediaStream as input source.\n * Encoder will get the raw data by track data changes, encode it by selected MIME Type, then store the encoded in EncodedBufferCache object.\n * The encoded data will be extracted on every timeslice passed from Start function call or by RequestData function.\n * Thread model:\n * When the recorder starts, it creates a \"Media Encoder\" thread to read data from MediaEncoder object and store buffer in EncodedBufferCache object.\n * Also extract the encoded data and create blobs on every timeslice passed from start function or RequestData function called by UA.\n */\n\nfunction MediaRecorderWrapper(mediaStream) {\n    var self = this;\n\n    /**\n     * This method records MediaStream.\n     * @method\n     * @memberof MediaStreamRecorder\n     * @example\n     * recorder.record();\n     */\n    this.start = function(timeSlice, __disableLogs) {\n        if (!self.mimeType) {\n            self.mimeType = 'video/webm';\n        }\n\n        if (self.mimeType.indexOf('audio') !== -1) {\n            if (mediaStream.getVideoTracks().length && mediaStream.getAudioTracks().length) {\n                var stream;\n                if (!!navigator.mozGetUserMedia) {\n                    stream = new MediaStream();\n                    stream.addTrack(mediaStream.getAudioTracks()[0]);\n                } else {\n                    // webkitMediaStream\n                    stream = new MediaStream(mediaStream.getAudioTracks());\n                }\n                mediaStream = stream;\n            }\n        }\n\n        if (self.mimeType.indexOf('audio') !== -1) {\n            self.mimeType = IsChrome ? 'audio/webm' : 'audio/ogg';\n        }\n\n        self.dontFireOnDataAvailableEvent = false;\n\n        var recorderHints = {\n            mimeType: self.mimeType\n        };\n\n        if (!self.disableLogs && !__disableLogs) {\n            console.log('Passing following params over MediaRecorder API.', recorderHints);\n        }\n\n        if (mediaRecorder) {\n            // mandatory to make sure Firefox doesn't fails to record streams 3-4 times without reloading the page.\n            mediaRecorder = null;\n        }\n\n        if (IsChrome && !isMediaRecorderCompatible()) {\n            // to support video-only recording on stable\n            recorderHints = 'video/vp8';\n        }\n\n        // http://dxr.mozilla.org/mozilla-central/source/content/media/MediaRecorder.cpp\n        // https://wiki.mozilla.org/Gecko:MediaRecorder\n        // https://dvcs.w3.org/hg/dap/raw-file/default/media-stream-capture/MediaRecorder.html\n\n        // starting a recording session; which will initiate \"Reading Thread\"\n        // \"Reading Thread\" are used to prevent main-thread blocking scenarios\n        try {\n            mediaRecorder = new MediaRecorder(mediaStream, recorderHints);\n        } catch (e) {\n            // if someone passed NON_supported mimeType\n            // or if Firefox on Android\n            mediaRecorder = new MediaRecorder(mediaStream);\n        }\n\n        if ('canRecordMimeType' in mediaRecorder && mediaRecorder.canRecordMimeType(self.mimeType) === false) {\n            if (!self.disableLogs) {\n                console.warn('MediaRecorder API seems unable to record mimeType:', self.mimeType);\n            }\n        }\n\n        // i.e. stop recording when <video> is paused by the user; and auto restart recording \n        // when video is resumed. E.g. yourStream.getVideoTracks()[0].muted = true; // it will auto-stop recording.\n        mediaRecorder.ignoreMutedMedia = self.ignoreMutedMedia || false;\n\n        var firedOnDataAvailableOnce = false;\n\n        // Dispatching OnDataAvailable Handler\n        mediaRecorder.ondataavailable = function(e) {\n            if (self.dontFireOnDataAvailableEvent) {\n                return;\n            }\n\n            // how to fix FF-corrupt-webm issues?\n            // should we leave this?          e.data.size < 26800\n            if (!e.data || !e.data.size || e.data.size < 26800 || firedOnDataAvailableOnce) {\n                return;\n            }\n\n            firedOnDataAvailableOnce = true;\n\n            var blob = self.getNativeBlob ? e.data : new Blob([e.data], {\n                type: self.mimeType || 'video/webm'\n            });\n\n            self.ondataavailable(blob);\n\n            self.dontFireOnDataAvailableEvent = true;\n\n            if (!!mediaRecorder) {\n                mediaRecorder.stop();\n                mediaRecorder = null;\n            }\n\n            // record next interval\n            self.start(timeSlice, '__disableLogs');\n        };\n\n        mediaRecorder.onerror = function(error) {\n            if (!self.disableLogs) {\n                if (error.name === 'InvalidState') {\n                    console.error('The MediaRecorder is not in a state in which the proposed operation is allowed to be executed.');\n                } else if (error.name === 'OutOfMemory') {\n                    console.error('The UA has exhaused the available memory. User agents SHOULD provide as much additional information as possible in the message attribute.');\n                } else if (error.name === 'IllegalStreamModification') {\n                    console.error('A modification to the stream has occurred that makes it impossible to continue recording. An example would be the addition of a Track while recording is occurring. User agents SHOULD provide as much additional information as possible in the message attribute.');\n                } else if (error.name === 'OtherRecordingError') {\n                    console.error('Used for an fatal error other than those listed above. User agents SHOULD provide as much additional information as possible in the message attribute.');\n                } else if (error.name === 'GenericError') {\n                    console.error('The UA cannot provide the codec or recording option that has been requested.', error);\n                } else {\n                    console.error('MediaRecorder Error', error);\n                }\n            }\n\n            // When the stream is \"ended\" set recording to 'inactive' \n            // and stop gathering data. Callers should not rely on \n            // exactness of the timeSlice value, especially \n            // if the timeSlice value is small. Callers should \n            // consider timeSlice as a minimum value\n\n            if (!!mediaRecorder && mediaRecorder.state !== 'inactive' && mediaRecorder.state !== 'stopped') {\n                mediaRecorder.stop();\n            }\n        };\n\n        // void start(optional long mTimeSlice)\n        // The interval of passing encoded data from EncodedBufferCache to onDataAvailable\n        // handler. \"mTimeSlice < 0\" means Session object does not push encoded data to\n        // onDataAvailable, instead, it passive wait the client side pull encoded data\n        // by calling requestData API.\n        try {\n            mediaRecorder.start(3.6e+6);\n        } catch (e) {\n            mediaRecorder = null;\n        }\n\n        setTimeout(function() {\n            if (!mediaRecorder) {\n                return;\n            }\n\n            if (mediaRecorder.state === 'recording') {\n                // \"stop\" method auto invokes \"requestData\"!\n                mediaRecorder.requestData();\n                // mediaRecorder.stop();\n            }\n        }, timeSlice);\n\n        // Start recording. If timeSlice has been provided, mediaRecorder will\n        // raise a dataavailable event containing the Blob of collected data on every timeSlice milliseconds.\n        // If timeSlice isn't provided, UA should call the RequestData to obtain the Blob data, also set the mTimeSlice to zero.\n    };\n\n    /**\n     * This method stops recording MediaStream.\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\n     * @method\n     * @memberof MediaStreamRecorder\n     * @example\n     * recorder.stop(function(blob) {\n     *     video.src = URL.createObjectURL(blob);\n     * });\n     */\n    this.stop = function(callback) {\n        if (!mediaRecorder) {\n            return;\n        }\n\n        // mediaRecorder.state === 'recording' means that media recorder is associated with \"session\"\n        // mediaRecorder.state === 'stopped' means that media recorder is detached from the \"session\" ... in this case; \"session\" will also be deleted.\n\n        if (mediaRecorder.state === 'recording') {\n            // \"stop\" method auto invokes \"requestData\"!\n            mediaRecorder.requestData();\n\n            setTimeout(function() {\n                self.dontFireOnDataAvailableEvent = true;\n                if (!!mediaRecorder && mediaRecorder.state === 'recording') {\n                    mediaRecorder.stop();\n                }\n                mediaRecorder = null;\n            }, 2000);\n        }\n    };\n\n    /**\n     * This method pauses the recording process.\n     * @method\n     * @memberof MediaStreamRecorder\n     * @example\n     * recorder.pause();\n     */\n    this.pause = function() {\n        if (!mediaRecorder) {\n            return;\n        }\n\n        if (mediaRecorder.state === 'recording') {\n            mediaRecorder.pause();\n        }\n    };\n\n    /**\n     * The recorded blobs are passed over this event.\n     * @event\n     * @memberof MediaStreamRecorder\n     * @example\n     * recorder.ondataavailable = function(data) {};\n     */\n    this.ondataavailable = function(blob) {\n        console.log('recorded-blob', blob);\n    };\n\n    /**\n     * This method resumes the recording process.\n     * @method\n     * @memberof MediaStreamRecorder\n     * @example\n     * recorder.resume();\n     */\n    this.resume = function() {\n        if (this.dontFireOnDataAvailableEvent) {\n            this.dontFireOnDataAvailableEvent = false;\n\n            var disableLogs = self.disableLogs;\n            self.disableLogs = true;\n            this.record();\n            self.disableLogs = disableLogs;\n            return;\n        }\n\n        if (!mediaRecorder) {\n            return;\n        }\n\n        if (mediaRecorder.state === 'paused') {\n            mediaRecorder.resume();\n        }\n    };\n\n    /**\n     * This method resets currently recorded data.\n     * @method\n     * @memberof MediaStreamRecorder\n     * @example\n     * recorder.clearRecordedData();\n     */\n    this.clearRecordedData = function() {\n        if (!mediaRecorder) {\n            return;\n        }\n\n        this.pause();\n\n        this.dontFireOnDataAvailableEvent = true;\n        this.stop();\n    };\n\n    // Reference to \"MediaRecorder\" object\n    var mediaRecorder;\n\n    function isMediaStreamActive() {\n        if ('active' in mediaStream) {\n            if (!mediaStream.active) {\n                return false;\n            }\n        } else if ('ended' in mediaStream) { // old hack\n            if (mediaStream.ended) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    // this method checks if media stream is stopped\n    // or any track is ended.\n    (function looper() {\n        if (!mediaRecorder) {\n            return;\n        }\n\n        if (isMediaStreamActive() === false) {\n            self.stop();\n            return;\n        }\n\n        setTimeout(looper, 1000); // check every second\n    })();\n}\n\nif (typeof MediaStreamRecorder !== 'undefined') {\n    MediaStreamRecorder.MediaRecorderWrapper = MediaRecorderWrapper;\n}\n\n// ======================\n// StereoAudioRecorder.js\n\nfunction StereoAudioRecorder(mediaStream) {\n    // void start(optional long timeSlice)\n    // timestamp to fire \"ondataavailable\"\n    this.start = function(timeSlice) {\n        timeSlice = timeSlice || 1000;\n\n        mediaRecorder = new StereoAudioRecorderHelper(mediaStream, this);\n\n        mediaRecorder.record();\n\n        timeout = setInterval(function() {\n            mediaRecorder.requestData();\n        }, timeSlice);\n    };\n\n    this.stop = function() {\n        if (mediaRecorder) {\n            mediaRecorder.stop();\n            clearTimeout(timeout);\n        }\n    };\n\n    this.pause = function() {\n        if (!mediaRecorder) {\n            return;\n        }\n\n        mediaRecorder.pause();\n    };\n\n    this.resume = function() {\n        if (!mediaRecorder) {\n            return;\n        }\n\n        mediaRecorder.resume();\n    };\n\n    this.ondataavailable = function() {};\n\n    // Reference to \"StereoAudioRecorder\" object\n    var mediaRecorder;\n    var timeout;\n}\n\nif (typeof MediaStreamRecorder !== 'undefined') {\n    MediaStreamRecorder.StereoAudioRecorder = StereoAudioRecorder;\n}\n\n// ============================\n// StereoAudioRecorderHelper.js\n\n// source code from: http://typedarray.org/wp-content/projects/WebAudioRecorder/script.js\n\nfunction StereoAudioRecorderHelper(mediaStream, root) {\n\n    // variables    \n    var deviceSampleRate = 44100; // range: 22050 to 96000\n\n    if (!ObjectStore.AudioContextConstructor) {\n        ObjectStore.AudioContextConstructor = new ObjectStore.AudioContext();\n    }\n\n    // check device sample rate\n    deviceSampleRate = ObjectStore.AudioContextConstructor.sampleRate;\n\n    var leftchannel = [];\n    var rightchannel = [];\n    var scriptprocessornode;\n    var recording = false;\n    var recordingLength = 0;\n    var volume;\n    var audioInput;\n    var sampleRate = root.sampleRate || deviceSampleRate;\n\n    var mimeType = root.mimeType || 'audio/wav';\n    var isPCM = mimeType.indexOf('audio/pcm') > -1;\n\n    var context;\n\n    var numChannels = root.audioChannels || 2;\n\n    this.record = function() {\n        recording = true;\n        // reset the buffers for the new recording\n        leftchannel.length = rightchannel.length = 0;\n        recordingLength = 0;\n    };\n\n    this.requestData = function() {\n        if (isPaused) {\n            return;\n        }\n\n        if (recordingLength === 0) {\n            requestDataInvoked = false;\n            return;\n        }\n\n        requestDataInvoked = true;\n        // clone stuff\n        var internalLeftChannel = leftchannel.slice(0);\n        var internalRightChannel = rightchannel.slice(0);\n        var internalRecordingLength = recordingLength;\n\n        // reset the buffers for the new recording\n        leftchannel.length = rightchannel.length = [];\n        recordingLength = 0;\n        requestDataInvoked = false;\n\n        // we flat the left and right channels down\n        var leftBuffer = mergeBuffers(internalLeftChannel, internalRecordingLength);\n\n        var interleaved = leftBuffer;\n\n        // we interleave both channels together\n        if (numChannels === 2) {\n            var rightBuffer = mergeBuffers(internalRightChannel, internalRecordingLength); // bug fixed via #70,#71\n            interleaved = interleave(leftBuffer, rightBuffer);\n        }\n\n        if (isPCM) {\n            // our final binary blob\n            var blob = new Blob([convertoFloat32ToInt16(interleaved)], {\n                type: 'audio/pcm'\n            });\n\n            console.debug('audio recorded blob size:', bytesToSize(blob.size));\n            root.ondataavailable(blob);\n            return;\n        }\n\n        // we create our wav file\n        var buffer = new ArrayBuffer(44 + interleaved.length * 2);\n        var view = new DataView(buffer);\n\n        // RIFF chunk descriptor\n        writeUTFBytes(view, 0, 'RIFF');\n\n        // -8 (via #97)\n        view.setUint32(4, 44 + interleaved.length * 2 - 8, true);\n\n        writeUTFBytes(view, 8, 'WAVE');\n        // FMT sub-chunk\n        writeUTFBytes(view, 12, 'fmt ');\n        view.setUint32(16, 16, true);\n        view.setUint16(20, 1, true);\n        // stereo (2 channels)\n        view.setUint16(22, numChannels, true);\n        view.setUint32(24, sampleRate, true);\n        view.setUint32(28, sampleRate * numChannels * 2, true); // numChannels * 2 (via #71)\n        view.setUint16(32, numChannels * 2, true);\n        view.setUint16(34, 16, true);\n        // data sub-chunk\n        writeUTFBytes(view, 36, 'data');\n        view.setUint32(40, interleaved.length * 2, true);\n\n        // write the PCM samples\n        var lng = interleaved.length;\n        var index = 44;\n        var volume = 1;\n        for (var i = 0; i < lng; i++) {\n            view.setInt16(index, interleaved[i] * (0x7FFF * volume), true);\n            index += 2;\n        }\n\n        // our final binary blob\n        var blob = new Blob([view], {\n            type: 'audio/wav'\n        });\n\n        console.debug('audio recorded blob size:', bytesToSize(blob.size));\n\n        root.ondataavailable(blob);\n    };\n\n    this.stop = function() {\n        // we stop recording\n        recording = false;\n        this.requestData();\n\n        audioInput.disconnect();\n    };\n\n    function interleave(leftChannel, rightChannel) {\n        var length = leftChannel.length + rightChannel.length;\n        var result = new Float32Array(length);\n\n        var inputIndex = 0;\n\n        for (var index = 0; index < length;) {\n            result[index++] = leftChannel[inputIndex];\n            result[index++] = rightChannel[inputIndex];\n            inputIndex++;\n        }\n        return result;\n    }\n\n    function mergeBuffers(channelBuffer, recordingLength) {\n        var result = new Float32Array(recordingLength);\n        var offset = 0;\n        var lng = channelBuffer.length;\n        for (var i = 0; i < lng; i++) {\n            var buffer = channelBuffer[i];\n            result.set(buffer, offset);\n            offset += buffer.length;\n        }\n        return result;\n    }\n\n    function writeUTFBytes(view, offset, string) {\n        var lng = string.length;\n        for (var i = 0; i < lng; i++) {\n            view.setUint8(offset + i, string.charCodeAt(i));\n        }\n    }\n\n    function convertoFloat32ToInt16(buffer) {\n        var l = buffer.length;\n        var buf = new Int16Array(l)\n\n        while (l--) {\n            buf[l] = buffer[l] * 0xFFFF; //convert to 16 bit\n        }\n        return buf.buffer\n    }\n\n    // creates the audio context\n    var context = ObjectStore.AudioContextConstructor;\n\n    // creates a gain node\n    ObjectStore.VolumeGainNode = context.createGain();\n\n    var volume = ObjectStore.VolumeGainNode;\n\n    // creates an audio node from the microphone incoming stream\n    ObjectStore.AudioInput = context.createMediaStreamSource(mediaStream);\n\n    // creates an audio node from the microphone incoming stream\n    var audioInput = ObjectStore.AudioInput;\n\n    // connect the stream to the gain node\n    audioInput.connect(volume);\n\n    /* From the spec: This value controls how frequently the audioprocess event is\n    dispatched and how many sample-frames need to be processed each call.\n    Lower values for buffer size will result in a lower (better) latency.\n    Higher values will be necessary to avoid audio breakup and glitches \n    Legal values are 256, 512, 1024, 2048, 4096, 8192, and 16384.*/\n    var bufferSize = root.bufferSize || 2048;\n    if (root.bufferSize === 0) {\n        bufferSize = 0;\n    }\n\n    if (context.createJavaScriptNode) {\n        scriptprocessornode = context.createJavaScriptNode(bufferSize, numChannels, numChannels);\n    } else if (context.createScriptProcessor) {\n        scriptprocessornode = context.createScriptProcessor(bufferSize, numChannels, numChannels);\n    } else {\n        throw 'WebAudio API has no support on this browser.';\n    }\n\n    bufferSize = scriptprocessornode.bufferSize;\n\n    console.debug('using audio buffer-size:', bufferSize);\n\n    var requestDataInvoked = false;\n\n    // sometimes \"scriptprocessornode\" disconnects from he destination-node\n    // and there is no exception thrown in this case.\n    // and obviously no further \"ondataavailable\" events will be emitted.\n    // below global-scope variable is added to debug such unexpected but \"rare\" cases.\n    window.scriptprocessornode = scriptprocessornode;\n\n    if (numChannels === 1) {\n        console.debug('All right-channels are skipped.');\n    }\n\n    var isPaused = false;\n\n    this.pause = function() {\n        isPaused = true;\n    };\n\n    this.resume = function() {\n        isPaused = false;\n    };\n\n    // http://webaudio.github.io/web-audio-api/#the-scriptprocessornode-interface\n    scriptprocessornode.onaudioprocess = function(e) {\n        if (!recording || requestDataInvoked || isPaused) {\n            return;\n        }\n\n        var left = e.inputBuffer.getChannelData(0);\n        leftchannel.push(new Float32Array(left));\n\n        if (numChannels === 2) {\n            var right = e.inputBuffer.getChannelData(1);\n            rightchannel.push(new Float32Array(right));\n        }\n        recordingLength += bufferSize;\n    };\n\n    volume.connect(scriptprocessornode);\n    scriptprocessornode.connect(context.destination);\n}\n\nif (typeof MediaStreamRecorder !== 'undefined') {\n    MediaStreamRecorder.StereoAudioRecorderHelper = StereoAudioRecorderHelper;\n}\n\n// ===================\n// WhammyRecorder.js\n\nfunction WhammyRecorder(mediaStream) {\n    // void start(optional long timeSlice)\n    // timestamp to fire \"ondataavailable\"\n    this.start = function(timeSlice) {\n        timeSlice = timeSlice || 1000;\n\n        mediaRecorder = new WhammyRecorderHelper(mediaStream, this);\n\n        for (var prop in this) {\n            if (typeof this[prop] !== 'function') {\n                mediaRecorder[prop] = this[prop];\n            }\n        }\n\n        mediaRecorder.record();\n\n        timeout = setInterval(function() {\n            mediaRecorder.requestData();\n        }, timeSlice);\n    };\n\n    this.stop = function() {\n        if (mediaRecorder) {\n            mediaRecorder.stop();\n            clearTimeout(timeout);\n        }\n    };\n\n    this.clearOldRecordedFrames = function() {\n        if (mediaRecorder) {\n            mediaRecorder.clearOldRecordedFrames();\n        }\n    };\n\n    this.pause = function() {\n        if (!mediaRecorder) {\n            return;\n        }\n\n        mediaRecorder.pause();\n    };\n\n    this.resume = function() {\n        if (!mediaRecorder) {\n            return;\n        }\n\n        mediaRecorder.resume();\n    };\n\n    this.ondataavailable = function() {};\n\n    // Reference to \"WhammyRecorder\" object\n    var mediaRecorder;\n    var timeout;\n}\n\nif (typeof MediaStreamRecorder !== 'undefined') {\n    MediaStreamRecorder.WhammyRecorder = WhammyRecorder;\n}\n\n// ==========================\n// WhammyRecorderHelper.js\n\nfunction WhammyRecorderHelper(mediaStream, root) {\n    this.record = function(timeSlice) {\n        if (!this.width) {\n            this.width = 320;\n        }\n        if (!this.height) {\n            this.height = 240;\n        }\n\n        if (this.video && this.video instanceof HTMLVideoElement) {\n            if (!this.width) {\n                this.width = video.videoWidth || video.clientWidth || 320;\n            }\n            if (!this.height) {\n                this.height = video.videoHeight || video.clientHeight || 240;\n            }\n        }\n\n        if (!this.video) {\n            this.video = {\n                width: this.width,\n                height: this.height\n            };\n        }\n\n        if (!this.canvas || !this.canvas.width || !this.canvas.height) {\n            this.canvas = {\n                width: this.width,\n                height: this.height\n            };\n        }\n\n        canvas.width = this.canvas.width;\n        canvas.height = this.canvas.height;\n\n        // setting defaults\n        if (this.video && this.video instanceof HTMLVideoElement) {\n            this.isHTMLObject = true;\n            video = this.video.cloneNode();\n        } else {\n            video = document.createElement('video');\n            video.src = URL.createObjectURL(mediaStream);\n\n            video.width = this.video.width;\n            video.height = this.video.height;\n        }\n\n        video.muted = true;\n        video.play();\n\n        lastTime = new Date().getTime();\n        whammy = new Whammy.Video(root.speed, root.quality);\n\n        console.log('canvas resolutions', canvas.width, '*', canvas.height);\n        console.log('video width/height', video.width || canvas.width, '*', video.height || canvas.height);\n\n        drawFrames();\n    };\n\n    this.clearOldRecordedFrames = function() {\n        whammy.frames = [];\n    };\n\n    var requestDataInvoked = false;\n    this.requestData = function() {\n        if (isPaused) {\n            return;\n        }\n\n        if (!whammy.frames.length) {\n            requestDataInvoked = false;\n            return;\n        }\n\n        requestDataInvoked = true;\n        // clone stuff\n        var internalFrames = whammy.frames.slice(0);\n\n        // reset the frames for the new recording\n\n        whammy.frames = dropBlackFrames(internalFrames, -1);\n\n        whammy.compile(function(whammyBlob) {\n            root.ondataavailable(whammyBlob);\n            console.debug('video recorded blob size:', bytesToSize(whammyBlob.size));\n        });\n\n        whammy.frames = [];\n\n        requestDataInvoked = false;\n    };\n\n    var isOnStartedDrawingNonBlankFramesInvoked = false;\n\n    function drawFrames() {\n        if (isPaused) {\n            lastTime = new Date().getTime();\n            setTimeout(drawFrames, 500);\n            return;\n        }\n\n        if (isStopDrawing) {\n            return;\n        }\n\n        if (requestDataInvoked) {\n            return setTimeout(drawFrames, 100);\n        }\n\n        var duration = new Date().getTime() - lastTime;\n        if (!duration) {\n            return drawFrames();\n        }\n\n        // via webrtc-experiment#206, by Jack i.e. @Seymourr\n        lastTime = new Date().getTime();\n\n        if (!self.isHTMLObject && video.paused) {\n            video.play(); // Android\n        }\n\n        context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n        if (!isStopDrawing) {\n            whammy.frames.push({\n                duration: duration,\n                image: canvas.toDataURL('image/webp')\n            });\n        }\n\n        if (!isOnStartedDrawingNonBlankFramesInvoked && !isBlankFrame(whammy.frames[whammy.frames.length - 1])) {\n            isOnStartedDrawingNonBlankFramesInvoked = true;\n            root.onStartedDrawingNonBlankFrames();\n        }\n\n        setTimeout(drawFrames, 10);\n    }\n\n    var isStopDrawing = false;\n\n    this.stop = function() {\n        isStopDrawing = true;\n        this.requestData();\n    };\n\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n\n    var video;\n    var lastTime;\n    var whammy;\n\n    var self = this;\n\n    function isBlankFrame(frame, _pixTolerance, _frameTolerance) {\n        var localCanvas = document.createElement('canvas');\n        localCanvas.width = canvas.width;\n        localCanvas.height = canvas.height;\n        var context2d = localCanvas.getContext('2d');\n\n        var sampleColor = {\n            r: 0,\n            g: 0,\n            b: 0\n        };\n        var maxColorDifference = Math.sqrt(\n            Math.pow(255, 2) +\n            Math.pow(255, 2) +\n            Math.pow(255, 2)\n        );\n        var pixTolerance = _pixTolerance && _pixTolerance >= 0 && _pixTolerance <= 1 ? _pixTolerance : 0;\n        var frameTolerance = _frameTolerance && _frameTolerance >= 0 && _frameTolerance <= 1 ? _frameTolerance : 0;\n\n        var matchPixCount, endPixCheck, maxPixCount;\n\n        var image = new Image();\n        image.src = frame.image;\n        context2d.drawImage(image, 0, 0, canvas.width, canvas.height);\n        var imageData = context2d.getImageData(0, 0, canvas.width, canvas.height);\n        matchPixCount = 0;\n        endPixCheck = imageData.data.length;\n        maxPixCount = imageData.data.length / 4;\n\n        for (var pix = 0; pix < endPixCheck; pix += 4) {\n            var currentColor = {\n                r: imageData.data[pix],\n                g: imageData.data[pix + 1],\n                b: imageData.data[pix + 2]\n            };\n            var colorDifference = Math.sqrt(\n                Math.pow(currentColor.r - sampleColor.r, 2) +\n                Math.pow(currentColor.g - sampleColor.g, 2) +\n                Math.pow(currentColor.b - sampleColor.b, 2)\n            );\n            // difference in color it is difference in color vectors (r1,g1,b1) <=> (r2,g2,b2)\n            if (colorDifference <= maxColorDifference * pixTolerance) {\n                matchPixCount++;\n            }\n        }\n\n        if (maxPixCount - matchPixCount <= maxPixCount * frameTolerance) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    function dropBlackFrames(_frames, _framesToCheck, _pixTolerance, _frameTolerance) {\n        var localCanvas = document.createElement('canvas');\n        localCanvas.width = canvas.width;\n        localCanvas.height = canvas.height;\n        var context2d = localCanvas.getContext('2d');\n        var resultFrames = [];\n\n        var checkUntilNotBlack = _framesToCheck === -1;\n        var endCheckFrame = (_framesToCheck && _framesToCheck > 0 && _framesToCheck <= _frames.length) ?\n            _framesToCheck : _frames.length;\n        var sampleColor = {\n            r: 0,\n            g: 0,\n            b: 0\n        };\n        var maxColorDifference = Math.sqrt(\n            Math.pow(255, 2) +\n            Math.pow(255, 2) +\n            Math.pow(255, 2)\n        );\n        var pixTolerance = _pixTolerance && _pixTolerance >= 0 && _pixTolerance <= 1 ? _pixTolerance : 0;\n        var frameTolerance = _frameTolerance && _frameTolerance >= 0 && _frameTolerance <= 1 ? _frameTolerance : 0;\n        var doNotCheckNext = false;\n\n        for (var f = 0; f < endCheckFrame; f++) {\n            var matchPixCount, endPixCheck, maxPixCount;\n\n            if (!doNotCheckNext) {\n                var image = new Image();\n                image.src = _frames[f].image;\n                context2d.drawImage(image, 0, 0, canvas.width, canvas.height);\n                var imageData = context2d.getImageData(0, 0, canvas.width, canvas.height);\n                matchPixCount = 0;\n                endPixCheck = imageData.data.length;\n                maxPixCount = imageData.data.length / 4;\n\n                for (var pix = 0; pix < endPixCheck; pix += 4) {\n                    var currentColor = {\n                        r: imageData.data[pix],\n                        g: imageData.data[pix + 1],\n                        b: imageData.data[pix + 2]\n                    };\n                    var colorDifference = Math.sqrt(\n                        Math.pow(currentColor.r - sampleColor.r, 2) +\n                        Math.pow(currentColor.g - sampleColor.g, 2) +\n                        Math.pow(currentColor.b - sampleColor.b, 2)\n                    );\n                    // difference in color it is difference in color vectors (r1,g1,b1) <=> (r2,g2,b2)\n                    if (colorDifference <= maxColorDifference * pixTolerance) {\n                        matchPixCount++;\n                    }\n                }\n            }\n\n            if (!doNotCheckNext && maxPixCount - matchPixCount <= maxPixCount * frameTolerance) {\n                // console.log('removed black frame : ' + f + ' ; frame duration ' + _frames[f].duration);\n            } else {\n                // console.log('frame is passed : ' + f);\n                if (checkUntilNotBlack) {\n                    doNotCheckNext = true;\n                }\n                resultFrames.push(_frames[f]);\n            }\n        }\n\n        resultFrames = resultFrames.concat(_frames.slice(endCheckFrame));\n\n        if (resultFrames.length <= 0) {\n            // at least one last frame should be available for next manipulation\n            // if total duration of all frames will be < 1000 than ffmpeg doesn't work well...\n            resultFrames.push(_frames[_frames.length - 1]);\n        }\n\n        return resultFrames;\n    }\n\n    var isPaused = false;\n\n    this.pause = function() {\n        isPaused = true;\n    };\n\n    this.resume = function() {\n        isPaused = false;\n    };\n}\n\nif (typeof MediaStreamRecorder !== 'undefined') {\n    MediaStreamRecorder.WhammyRecorderHelper = WhammyRecorderHelper;\n}\n\n// --------------\n// GifRecorder.js\n\nfunction GifRecorder(mediaStream) {\n    if (typeof GIFEncoder === 'undefined') {\n        throw 'Please link: https://cdn.webrtc-experiment.com/gif-recorder.js';\n    }\n\n    // void start(optional long timeSlice)\n    // timestamp to fire \"ondataavailable\"\n    this.start = function(timeSlice) {\n        timeSlice = timeSlice || 1000;\n\n        var imageWidth = this.videoWidth || 320;\n        var imageHeight = this.videoHeight || 240;\n\n        canvas.width = video.width = imageWidth;\n        canvas.height = video.height = imageHeight;\n\n        // external library to record as GIF images\n        gifEncoder = new GIFEncoder();\n\n        // void setRepeat(int iter)\n        // Sets the number of times the set of GIF frames should be played.\n        // Default is 1; 0 means play indefinitely.\n        gifEncoder.setRepeat(0);\n\n        // void setFrameRate(Number fps)\n        // Sets frame rate in frames per second.\n        // Equivalent to setDelay(1000/fps).\n        // Using \"setDelay\" instead of \"setFrameRate\"\n        gifEncoder.setDelay(this.frameRate || this.speed || 200);\n\n        // void setQuality(int quality)\n        // Sets quality of color quantization (conversion of images to the\n        // maximum 256 colors allowed by the GIF specification).\n        // Lower values (minimum = 1) produce better colors,\n        // but slow processing significantly. 10 is the default,\n        // and produces good color mapping at reasonable speeds.\n        // Values greater than 20 do not yield significant improvements in speed.\n        gifEncoder.setQuality(this.quality || 1);\n\n        // Boolean start()\n        // This writes the GIF Header and returns false if it fails.\n        gifEncoder.start();\n\n        startTime = Date.now();\n\n        function drawVideoFrame(time) {\n            if (isPaused) {\n                setTimeout(drawVideoFrame, 500, time);\n                return;\n            }\n\n            lastAnimationFrame = requestAnimationFrame(drawVideoFrame);\n\n            if (typeof lastFrameTime === undefined) {\n                lastFrameTime = time;\n            }\n\n            // ~10 fps\n            if (time - lastFrameTime < 90) {\n                return;\n            }\n\n            if (video.paused) {\n                video.play(); // Android\n            }\n\n            context.drawImage(video, 0, 0, imageWidth, imageHeight);\n\n            gifEncoder.addFrame(context);\n\n            // console.log('Recording...' + Math.round((Date.now() - startTime) / 1000) + 's');\n            // console.log(\"fps: \", 1000 / (time - lastFrameTime));\n\n            lastFrameTime = time;\n        }\n\n        lastAnimationFrame = requestAnimationFrame(drawVideoFrame);\n\n        timeout = setTimeout(doneRecording, timeSlice);\n    };\n\n    function doneRecording() {\n        endTime = Date.now();\n\n        var gifBlob = new Blob([new Uint8Array(gifEncoder.stream().bin)], {\n            type: 'image/gif'\n        });\n        self.ondataavailable(gifBlob);\n\n        // todo: find a way to clear old recorded blobs\n        gifEncoder.stream().bin = [];\n    }\n\n    this.stop = function() {\n        if (lastAnimationFrame) {\n            cancelAnimationFrame(lastAnimationFrame);\n            clearTimeout(timeout);\n            doneRecording();\n        }\n    };\n\n    var isPaused = false;\n\n    this.pause = function() {\n        isPaused = true;\n    };\n\n    this.resume = function() {\n        isPaused = false;\n    };\n\n    this.ondataavailable = function() {};\n    this.onstop = function() {};\n\n    // Reference to itself\n    var self = this;\n\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n\n    var video = document.createElement('video');\n    video.muted = true;\n    video.autoplay = true;\n    video.src = URL.createObjectURL(mediaStream);\n    video.play();\n\n    var lastAnimationFrame = null;\n    var startTime, endTime, lastFrameTime;\n\n    var gifEncoder;\n    var timeout;\n}\n\nif (typeof MediaStreamRecorder !== 'undefined') {\n    MediaStreamRecorder.GifRecorder = GifRecorder;\n}\n\n// https://github.com/antimatter15/whammy/blob/master/LICENSE\n// _________\n// Whammy.js\n\n// todo: Firefox now supports webp for webm containers!\n// their MediaRecorder implementation works well!\n// should we provide an option to record via Whammy.js or MediaRecorder API is a better solution?\n\n/**\n * Whammy is a standalone class used by {@link RecordRTC} to bring video recording in Chrome. It is written by {@link https://github.com/antimatter15|antimatter15}\n * @summary A real time javascript webm encoder based on a canvas hack.\n * @typedef Whammy\n * @class\n * @example\n * var recorder = new Whammy().Video(15);\n * recorder.add(context || canvas || dataURL);\n * var output = recorder.compile();\n */\n\nvar Whammy = (function() {\n    // a more abstract-ish API\n\n    function WhammyVideo(duration, quality) {\n        this.frames = [];\n        if (!duration) {\n            duration = 1;\n        }\n        this.duration = 1000 / duration;\n        this.quality = quality || 0.8;\n    }\n\n    /**\n     * Pass Canvas or Context or image/webp(string) to {@link Whammy} encoder.\n     * @method\n     * @memberof Whammy\n     * @example\n     * recorder = new Whammy().Video(0.8, 100);\n     * recorder.add(canvas || context || 'image/webp');\n     * @param {string} frame - Canvas || Context || image/webp\n     * @param {number} duration - Stick a duration (in milliseconds)\n     */\n    WhammyVideo.prototype.add = function(frame, duration) {\n        if ('canvas' in frame) { //CanvasRenderingContext2D\n            frame = frame.canvas;\n        }\n\n        if ('toDataURL' in frame) {\n            frame = frame.toDataURL('image/webp', this.quality);\n        }\n\n        if (!(/^data:image\\/webp;base64,/ig).test(frame)) {\n            throw 'Input must be formatted properly as a base64 encoded DataURI of type image/webp';\n        }\n        this.frames.push({\n            image: frame,\n            duration: duration || this.duration\n        });\n    };\n\n    function processInWebWorker(_function) {\n        var blob = URL.createObjectURL(new Blob([_function.toString(),\n            'this.onmessage =  function (e) {' + _function.name + '(e.data);}'\n        ], {\n            type: 'application/javascript'\n        }));\n\n        var worker = new Worker(blob);\n        URL.revokeObjectURL(blob);\n        return worker;\n    }\n\n    function whammyInWebWorker(frames) {\n        function ArrayToWebM(frames) {\n            var info = checkFrames(frames);\n            if (!info) {\n                return [];\n            }\n\n            var clusterMaxDuration = 30000;\n\n            var EBML = [{\n                'id': 0x1a45dfa3, // EBML\n                'data': [{\n                    'data': 1,\n                    'id': 0x4286 // EBMLVersion\n                }, {\n                    'data': 1,\n                    'id': 0x42f7 // EBMLReadVersion\n                }, {\n                    'data': 4,\n                    'id': 0x42f2 // EBMLMaxIDLength\n                }, {\n                    'data': 8,\n                    'id': 0x42f3 // EBMLMaxSizeLength\n                }, {\n                    'data': 'webm',\n                    'id': 0x4282 // DocType\n                }, {\n                    'data': 2,\n                    'id': 0x4287 // DocTypeVersion\n                }, {\n                    'data': 2,\n                    'id': 0x4285 // DocTypeReadVersion\n                }]\n            }, {\n                'id': 0x18538067, // Segment\n                'data': [{\n                    'id': 0x1549a966, // Info\n                    'data': [{\n                        'data': 1e6, //do things in millisecs (num of nanosecs for duration scale)\n                        'id': 0x2ad7b1 // TimecodeScale\n                    }, {\n                        'data': 'whammy',\n                        'id': 0x4d80 // MuxingApp\n                    }, {\n                        'data': 'whammy',\n                        'id': 0x5741 // WritingApp\n                    }, {\n                        'data': doubleToString(info.duration),\n                        'id': 0x4489 // Duration\n                    }]\n                }, {\n                    'id': 0x1654ae6b, // Tracks\n                    'data': [{\n                        'id': 0xae, // TrackEntry\n                        'data': [{\n                            'data': 1,\n                            'id': 0xd7 // TrackNumber\n                        }, {\n                            'data': 1,\n                            'id': 0x73c5 // TrackUID\n                        }, {\n                            'data': 0,\n                            'id': 0x9c // FlagLacing\n                        }, {\n                            'data': 'und',\n                            'id': 0x22b59c // Language\n                        }, {\n                            'data': 'V_VP8',\n                            'id': 0x86 // CodecID\n                        }, {\n                            'data': 'VP8',\n                            'id': 0x258688 // CodecName\n                        }, {\n                            'data': 1,\n                            'id': 0x83 // TrackType\n                        }, {\n                            'id': 0xe0, // Video\n                            'data': [{\n                                'data': info.width,\n                                'id': 0xb0 // PixelWidth\n                            }, {\n                                'data': info.height,\n                                'id': 0xba // PixelHeight\n                            }]\n                        }]\n                    }]\n                }]\n            }];\n\n            //Generate clusters (max duration)\n            var frameNumber = 0;\n            var clusterTimecode = 0;\n            while (frameNumber < frames.length) {\n\n                var clusterFrames = [];\n                var clusterDuration = 0;\n                do {\n                    clusterFrames.push(frames[frameNumber]);\n                    clusterDuration += frames[frameNumber].duration;\n                    frameNumber++;\n                } while (frameNumber < frames.length && clusterDuration < clusterMaxDuration);\n\n                var clusterCounter = 0;\n                var cluster = {\n                    'id': 0x1f43b675, // Cluster\n                    'data': getClusterData(clusterTimecode, clusterCounter, clusterFrames)\n                }; //Add cluster to segment\n                EBML[1].data.push(cluster);\n                clusterTimecode += clusterDuration;\n            }\n\n            return generateEBML(EBML);\n        }\n\n        function getClusterData(clusterTimecode, clusterCounter, clusterFrames) {\n            return [{\n                'data': clusterTimecode,\n                'id': 0xe7 // Timecode\n            }].concat(clusterFrames.map(function(webp) {\n                var block = makeSimpleBlock({\n                    discardable: 0,\n                    frame: webp.data.slice(4),\n                    invisible: 0,\n                    keyframe: 1,\n                    lacing: 0,\n                    trackNum: 1,\n                    timecode: Math.round(clusterCounter)\n                });\n                clusterCounter += webp.duration;\n                return {\n                    data: block,\n                    id: 0xa3\n                };\n            }));\n        }\n\n        // sums the lengths of all the frames and gets the duration\n\n        function checkFrames(frames) {\n            if (!frames[0]) {\n                postMessage({\n                    error: 'Something went wrong. Maybe WebP format is not supported in the current browser.'\n                });\n                return;\n            }\n\n            var width = frames[0].width,\n                height = frames[0].height,\n                duration = frames[0].duration;\n\n            for (var i = 1; i < frames.length; i++) {\n                duration += frames[i].duration;\n            }\n            return {\n                duration: duration,\n                width: width,\n                height: height\n            };\n        }\n\n        function numToBuffer(num) {\n            var parts = [];\n            while (num > 0) {\n                parts.push(num & 0xff);\n                num = num >> 8;\n            }\n            return new Uint8Array(parts.reverse());\n        }\n\n        function strToBuffer(str) {\n            return new Uint8Array(str.split('').map(function(e) {\n                return e.charCodeAt(0);\n            }));\n        }\n\n        function bitsToBuffer(bits) {\n            var data = [];\n            var pad = (bits.length % 8) ? (new Array(1 + 8 - (bits.length % 8))).join('0') : '';\n            bits = pad + bits;\n            for (var i = 0; i < bits.length; i += 8) {\n                data.push(parseInt(bits.substr(i, 8), 2));\n            }\n            return new Uint8Array(data);\n        }\n\n        function generateEBML(json) {\n            var ebml = [];\n            for (var i = 0; i < json.length; i++) {\n                var data = json[i].data;\n\n                if (typeof data === 'object') {\n                    data = generateEBML(data);\n                }\n\n                if (typeof data === 'number') {\n                    data = bitsToBuffer(data.toString(2));\n                }\n\n                if (typeof data === 'string') {\n                    data = strToBuffer(data);\n                }\n\n                var len = data.size || data.byteLength || data.length;\n                var zeroes = Math.ceil(Math.ceil(Math.log(len) / Math.log(2)) / 8);\n                var sizeToString = len.toString(2);\n                var padded = (new Array((zeroes * 7 + 7 + 1) - sizeToString.length)).join('0') + sizeToString;\n                var size = (new Array(zeroes)).join('0') + '1' + padded;\n\n                ebml.push(numToBuffer(json[i].id));\n                ebml.push(bitsToBuffer(size));\n                ebml.push(data);\n            }\n\n            return new Blob(ebml, {\n                type: 'video/webm'\n            });\n        }\n\n        function toBinStrOld(bits) {\n            var data = '';\n            var pad = (bits.length % 8) ? (new Array(1 + 8 - (bits.length % 8))).join('0') : '';\n            bits = pad + bits;\n            for (var i = 0; i < bits.length; i += 8) {\n                data += String.fromCharCode(parseInt(bits.substr(i, 8), 2));\n            }\n            return data;\n        }\n\n        function makeSimpleBlock(data) {\n            var flags = 0;\n\n            if (data.keyframe) {\n                flags |= 128;\n            }\n\n            if (data.invisible) {\n                flags |= 8;\n            }\n\n            if (data.lacing) {\n                flags |= (data.lacing << 1);\n            }\n\n            if (data.discardable) {\n                flags |= 1;\n            }\n\n            if (data.trackNum > 127) {\n                throw 'TrackNumber > 127 not supported';\n            }\n\n            var out = [data.trackNum | 0x80, data.timecode >> 8, data.timecode & 0xff, flags].map(function(e) {\n                return String.fromCharCode(e);\n            }).join('') + data.frame;\n\n            return out;\n        }\n\n        function parseWebP(riff) {\n            var VP8 = riff.RIFF[0].WEBP[0];\n\n            var frameStart = VP8.indexOf('\\x9d\\x01\\x2a'); // A VP8 keyframe starts with the 0x9d012a header\n            for (var i = 0, c = []; i < 4; i++) {\n                c[i] = VP8.charCodeAt(frameStart + 3 + i);\n            }\n\n            var width, height, tmp;\n\n            //the code below is literally copied verbatim from the bitstream spec\n            tmp = (c[1] << 8) | c[0];\n            width = tmp & 0x3FFF;\n            tmp = (c[3] << 8) | c[2];\n            height = tmp & 0x3FFF;\n            return {\n                width: width,\n                height: height,\n                data: VP8,\n                riff: riff\n            };\n        }\n\n        function getStrLength(string, offset) {\n            return parseInt(string.substr(offset + 4, 4).split('').map(function(i) {\n                var unpadded = i.charCodeAt(0).toString(2);\n                return (new Array(8 - unpadded.length + 1)).join('0') + unpadded;\n            }).join(''), 2);\n        }\n\n        function parseRIFF(string) {\n            var offset = 0;\n            var chunks = {};\n\n            while (offset < string.length) {\n                var id = string.substr(offset, 4);\n                var len = getStrLength(string, offset);\n                var data = string.substr(offset + 4 + 4, len);\n                offset += 4 + 4 + len;\n                chunks[id] = chunks[id] || [];\n\n                if (id === 'RIFF' || id === 'LIST') {\n                    chunks[id].push(parseRIFF(data));\n                } else {\n                    chunks[id].push(data);\n                }\n            }\n            return chunks;\n        }\n\n        function doubleToString(num) {\n            return [].slice.call(\n                new Uint8Array((new Float64Array([num])).buffer), 0).map(function(e) {\n                return String.fromCharCode(e);\n            }).reverse().join('');\n        }\n\n        var webm = new ArrayToWebM(frames.map(function(frame) {\n            var webp = parseWebP(parseRIFF(atob(frame.image.slice(23))));\n            webp.duration = frame.duration;\n            return webp;\n        }));\n\n        postMessage(webm);\n    }\n\n    /**\n     * Encodes frames in WebM container. It uses WebWorkinvoke to invoke 'ArrayToWebM' method.\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\n     * @method\n     * @memberof Whammy\n     * @example\n     * recorder = new Whammy().Video(0.8, 100);\n     * recorder.compile(function(blob) {\n     *    // blob.size - blob.type\n     * });\n     */\n    WhammyVideo.prototype.compile = function(callback) {\n        var webWorker = processInWebWorker(whammyInWebWorker);\n\n        webWorker.onmessage = function(event) {\n            if (event.data.error) {\n                console.error(event.data.error);\n                return;\n            }\n            callback(event.data);\n        };\n\n        webWorker.postMessage(this.frames);\n    };\n\n    return {\n        /**\n         * A more abstract-ish API.\n         * @method\n         * @memberof Whammy\n         * @example\n         * recorder = new Whammy().Video(0.8, 100);\n         * @param {?number} speed - 0.8\n         * @param {?number} quality - 100\n         */\n        Video: WhammyVideo\n    };\n})();\n\nif (typeof MediaStreamRecorder !== 'undefined') {\n    MediaStreamRecorder.Whammy = Whammy;\n}\n\n// Last time updated at Nov 18, 2014, 08:32:23\n\n// Latest file can be found here: https://cdn.webrtc-experiment.com/ConcatenateBlobs.js\n\n// Muaz Khan    - www.MuazKhan.com\n// MIT License  - www.WebRTC-Experiment.com/licence\n// Source Code  - https://github.com/muaz-khan/ConcatenateBlobs\n// Demo         - https://www.WebRTC-Experiment.com/ConcatenateBlobs/\n\n// ___________________\n// ConcatenateBlobs.js\n\n// Simply pass array of blobs.\n// This javascript library will concatenate all blobs in single \"Blob\" object.\n\n(function() {\n    window.ConcatenateBlobs = function(blobs, type, callback) {\n        var buffers = [];\n\n        var index = 0;\n\n        function readAsArrayBuffer() {\n            if (!blobs[index]) {\n                return concatenateBuffers();\n            }\n            var reader = new FileReader();\n            reader.onload = function(event) {\n                buffers.push(event.target.result);\n                index++;\n                readAsArrayBuffer();\n            };\n            reader.readAsArrayBuffer(blobs[index]);\n        }\n\n        readAsArrayBuffer();\n\n        function concatenateBuffers() {\n            var byteLength = 0;\n            buffers.forEach(function(buffer) {\n                byteLength += buffer.byteLength;\n            });\n\n            var tmp = new Uint16Array(byteLength);\n            var lastOffset = 0;\n            buffers.forEach(function(buffer) {\n                // BYTES_PER_ELEMENT == 2 for Uint16Array\n                var reusableByteLength = buffer.byteLength;\n                if (reusableByteLength % 2 != 0) {\n                    buffer = buffer.slice(0, reusableByteLength - 1)\n                }\n                tmp.set(new Uint16Array(buffer), lastOffset);\n                lastOffset += reusableByteLength;\n            });\n\n            var blob = new Blob([tmp.buffer], {\n                type: type\n            });\n\n            callback(blob);\n        }\n    };\n})();\n\n// https://github.com/streamproc/MediaStreamRecorder/issues/42\nif (true /* && !!module.exports*/ ) {\n    module.exports = MediaStreamRecorder;\n}\n\nif (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n        return MediaStreamRecorder;\n    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))\n\n/***/ }),\n\n/***/ 667:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(692)\n\nvar Component = __webpack_require__(2)(\n  /* script */\n  __webpack_require__(702),\n  /* template */\n  __webpack_require__(678),\n  /* scopeId */\n  \"data-v-369f38b4\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 673:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', [_c('div', {\n    staticClass: \"search-bg\"\n  }), _vm._v(\" \"), _c('i-row', [_c('i-col', {\n    attrs: {\n      \"span\": \"18\",\n      \"offset\": \"3\"\n    }\n  }, [_c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.keywords),\n      expression: \"keywords\"\n    }],\n    staticClass: \"min-card search-input\",\n    attrs: {\n      \"type\": \"text\",\n      \"placeholder\": \"今天想听点什么...\"\n    },\n    domProps: {\n      \"value\": (_vm.keywords)\n    },\n    on: {\n      \"keyup\": function($event) {\n        if (!('button' in $event) && _vm._k($event.keyCode, \"enter\", 13)) { return null; }\n        _vm.search($event)\n      },\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.keywords = $event.target.value\n      }\n    }\n  }), _vm._v(\" \"), _c('i-icon', {\n    staticClass: \"search-mic\",\n    attrs: {\n      \"type\": \"mic-a\"\n    },\n    nativeOn: {\n      \"click\": function($event) {\n        _vm.micPopup = !_vm.micPopup\n      }\n    }\n  }), _vm._v(\" \"), _c('i-icon', {\n    staticClass: \"search-icon\",\n    attrs: {\n      \"type\": \"search\"\n    },\n    nativeOn: {\n      \"click\": function($event) {\n        _vm.search($event)\n      }\n    }\n  }), _vm._v(\" \"), _c('transition', {\n    attrs: {\n      \"enter-active-class\": \"animated slideInUp\",\n      \"leave-active-class\": \"animated slideOutDown\"\n    }\n  }, [(_vm.micPopup) ? _c('mic-popup', {\n    on: {\n      \"close\": _vm.closeMic\n    }\n  }) : _vm._e()], 1)], 1)], 1), _vm._v(\" \"), _c('br'), _c('br'), _c('br'), _vm._v(\" \"), _c('i-row', [_c('i-col', {\n    attrs: {\n      \"span\": \"24\"\n    }\n  }, [_c('div', {\n    staticClass: \"min-card card text-center\",\n    staticStyle: {\n      \"line-height\": \"60px\",\n      \"height\": \"60px\"\n    }\n  }, [_vm._l((_vm.type), function(item, index) {\n    return (item.color) ? _c('tag', {\n      key: index,\n      staticStyle: {\n        \"margin\": \"0 1rem\"\n      },\n      attrs: {\n        \"color\": item.color,\n        \"type\": \"dot\"\n      },\n      nativeOn: {\n        \"click\": function($event) {\n          _vm.searchDetil(index)\n        }\n      }\n    }, [_vm._v(\"\\n          \" + _vm._s(item.str) + _vm._s(index == _vm.activeType && _vm.resultShow ? '(' + _vm.result.count + ')个结果' : '') + \"\\n        \")]) : _vm._e()\n  }), _vm._v(\" \"), _vm._l((_vm.type), function(item, index) {\n    return (index == 4) ? _c('tag', {\n      key: index,\n      staticStyle: {\n        \"margin\": \"0 1rem\"\n      },\n      attrs: {\n        \"type\": \"dot\"\n      },\n      nativeOn: {\n        \"click\": function($event) {\n          _vm.searchDetil(index)\n        }\n      }\n    }, [_vm._v(\"\\n          \" + _vm._s(item.str) + _vm._s(index == _vm.activeType && _vm.resultShow ? '(' + _vm.result.count + ')个结果' : '') + \"\\n        \")]) : _vm._e()\n  })], 2)])], 1), _vm._v(\" \"), _c('br'), _c('br'), _vm._v(\" \"), _c('div', {\n    staticClass: \"card\",\n    staticStyle: {\n      \"min-height\": \"400px\",\n      \"padding\": \"50px\"\n    }\n  }, [(_vm.type[_vm.activeType].code === 1 && _vm.resultShow) ? _c('div', [_vm._l((_vm.result.data), function(item, index) {\n    return _c('div', {\n      staticClass: \"song-result-content text-center\",\n      class: {\n        'active': index % 2 == 0\n      }\n    }, [(index == 0) ? _c('i-row', {\n      staticStyle: {\n        \"background\": \"#fff\"\n      }\n    }, [_c('i-col', {\n      attrs: {\n        \"span\": \"24\"\n      }\n    }, [_c('i-row', [_c('i-col', {\n      attrs: {\n        \"span\": \"2\"\n      }\n    }, [_vm._v(\"\\n                 \\n              \")]), _vm._v(\" \"), _c('i-col', {\n      attrs: {\n        \"span\": \"4\"\n      }\n    }, [_vm._v(\"\\n                歌手名\\n              \")]), _vm._v(\" \"), _c('i-col', {\n      attrs: {\n        \"span\": \"10\"\n      }\n    }, [_vm._v(\"\\n                歌曲名\\n              \")]), _vm._v(\" \"), _c('i-col', {\n      attrs: {\n        \"span\": \"8\"\n      }\n    }, [_vm._v(\"\\n                所属专辑\\n              \")])], 1), _vm._v(\" \"), _c('div', {\n      staticClass: \"dir\",\n      staticStyle: {\n        \"margin-bottom\": \"0\"\n      }\n    })], 1)], 1) : _vm._e(), _vm._v(\" \"), _c('i-row', [_c('i-col', {\n      attrs: {\n        \"span\": \"2\"\n      }\n    }, [_c('i-icon', {\n      staticStyle: {\n        \"cursor\": \"pointer\"\n      },\n      attrs: {\n        \"type\": \"play\"\n      },\n      nativeOn: {\n        \"click\": function($event) {\n          _vm.wyPlayMusic(item)\n        }\n      }\n    })], 1), _vm._v(\" \"), _c('i-col', {\n      attrs: {\n        \"span\": \"4\"\n      }\n    }, [_vm._v(\"\\n            \" + _vm._s(item.artists[0].name) + \"\\n            \")]), _vm._v(\" \"), _c('i-col', {\n      attrs: {\n        \"span\": \"10\"\n      }\n    }, [_vm._v(\"\\n            \" + _vm._s(item.name) + \"\\n            \")]), _vm._v(\" \"), _c('i-col', {\n      attrs: {\n        \"span\": \"8\"\n      }\n    }, [_vm._v(\"\\n            \" + _vm._s(item.album.name) + \"\\n            \")])], 1)], 1)\n  }), _vm._v(\" \"), _c('br'), _c('br')], 2) : _vm._e(), _vm._v(\" \"), (_vm.type[_vm.activeType].code === 10 && _vm.resultShow) ? _c('div', [_c('i-row', [_c('i-col', {\n    attrs: {\n      \"span\": \"22\",\n      \"offset\": \"1\"\n    }\n  }, _vm._l((_vm.result.data), function(item, row) {\n    return _c('i-row', {\n      key: row,\n      staticClass: \"text-center\",\n      attrs: {\n        \"gutter\": 64\n      }\n    }, _vm._l((_vm.result.data), function(item, col) {\n      return (row * 4 <= col && col < (row + 1) * 4) ? _c('i-col', {\n        key: col,\n        attrs: {\n          \"span\": \"6\"\n        }\n      }, [_c('div', {\n        staticStyle: {\n          \"height\": \"150px\",\n          \"margin-bottom\": \".5rem\"\n        }\n      }, [_c('img', {\n        staticClass: \"card card-hover\",\n        staticStyle: {\n          \"height\": \"150px\",\n          \"width\": \"100%\"\n        },\n        attrs: {\n          \"src\": item.picUrl\n        },\n        on: {\n          \"click\": function($event) {\n            _vm.$store.commit('router', {\n              path: '/album',\n              id: item.id\n            })\n          }\n        }\n      })]), _vm._v(\" \"), _c('div', {\n        staticStyle: {\n          \"font-size\": \"13px\"\n        }\n      }, [_vm._v(_vm._s(item.name))]), _vm._v(\" \"), _c('div', {\n        staticStyle: {\n          \"font-size\": \"12px\",\n          \"color\": \"#bbb\"\n        }\n      }, [_vm._v(_vm._s(item.artist.name) + \" - \" + _vm._s(_vm.formatTime(item.publishTime)))]), _vm._v(\" \"), _c('br')]) : _vm._e()\n    }))\n  }))], 1), _vm._v(\" \"), _c('br'), _c('br')], 1) : _vm._e(), _vm._v(\" \"), (_vm.type[_vm.activeType].code === 100 && _vm.resultShow) ? _c('div', [_c('i-row', [_c('i-col', {\n    attrs: {\n      \"span\": \"22\",\n      \"offset\": \"1\"\n    }\n  }, _vm._l((_vm.result.data), function(rowItem, row) {\n    return _c('i-row', {\n      key: row,\n      staticClass: \"album-result-content text-center\",\n      attrs: {\n        \"gutter\": 64\n      }\n    }, _vm._l((_vm.result.data), function(item, col) {\n      return (row * 4 <= col && col < (row + 1) * 4) ? _c('i-col', {\n        key: col,\n        attrs: {\n          \"span\": \"6\"\n        }\n      }, [_c('div', {\n        staticClass: \"cursor\",\n        staticStyle: {\n          \"height\": \"150px\"\n        }\n      }, [_c('img', {\n        staticClass: \"card card-hover\",\n        staticStyle: {\n          \"height\": \"150px\",\n          \"width\": \"100%\"\n        },\n        attrs: {\n          \"src\": item.img1v1Url\n        },\n        on: {\n          \"click\": function($event) {\n            _vm.$store.commit('router', {\n              path: '/artist',\n              id: item.id\n            })\n          }\n        }\n      })]), _vm._v(\" \"), _c('div', [_vm._v(_vm._s(item.name))])]) : _vm._e()\n    }))\n  }))], 1), _vm._v(\" \"), _c('br'), _c('br')], 1) : _vm._e(), _vm._v(\" \"), (_vm.type[_vm.activeType].code === 1000 && _vm.resultShow) ? _c('div', [_c('i-row', [_c('i-col', {\n    attrs: {\n      \"span\": \"22\",\n      \"offset\": \"1\"\n    }\n  }, _vm._l((_vm.result.data), function(item, row) {\n    return _c('i-row', {\n      key: row,\n      staticClass: \"text-center\",\n      attrs: {\n        \"gutter\": 64\n      }\n    }, _vm._l((_vm.result.data), function(item, col) {\n      return (row * 4 <= col && col < (row + 1) * 4) ? _c('i-col', {\n        key: col,\n        attrs: {\n          \"span\": \"6\"\n        }\n      }, [_c('div', {\n        staticStyle: {\n          \"height\": \"150px\",\n          \"margin-bottom\": \".5rem\"\n        }\n      }, [_c('img', {\n        staticClass: \"card card-hover\",\n        staticStyle: {\n          \"height\": \"150px\",\n          \"width\": \"100%\"\n        },\n        attrs: {\n          \"src\": item.coverImgUrl\n        },\n        on: {\n          \"click\": function($event) {\n            _vm.$store.commit('router', {\n              path: '/playlist',\n              id: item.id\n            })\n          }\n        }\n      })]), _vm._v(\" \"), _c('div', {\n        staticStyle: {\n          \"font-size\": \"13px\"\n        }\n      }, [_vm._v(_vm._s(item.name))]), _vm._v(\" \"), _c('div', {\n        staticStyle: {\n          \"font-size\": \"12px\",\n          \"color\": \"#bbb\"\n        }\n      }, [_vm._v(\"\\n                \" + _vm._s(item.trackCount) + \"首 - \" + _vm._s(item.playCount) + \"次播放\\n              \")]), _vm._v(\" \"), _c('br')]) : _vm._e()\n    }))\n  }))], 1), _vm._v(\" \"), _c('br'), _c('br')], 1) : _vm._e(), _vm._v(\" \"), (_vm.type[_vm.activeType].code === 1004 && _vm.resultShow) ? _c('div', [_vm._l((_vm.result.data), function(item, row) {\n    return _c('i-row', {\n      key: row,\n      staticClass: \"text-center\",\n      attrs: {\n        \"gutter\": 64\n      }\n    }, _vm._l((_vm.result.data), function(item, col) {\n      return (row * 4 <= col && col < (row + 1) * 4) ? _c('i-col', {\n        key: col,\n        attrs: {\n          \"span\": \"6\"\n        }\n      }, [_c('div', {\n        staticStyle: {\n          \"height\": \"100px\",\n          \"margin-bottom\": \".5rem\"\n        }\n      }, [_c('img', {\n        staticClass: \"card card-hover\",\n        staticStyle: {\n          \"height\": \"100px\",\n          \"width\": \"100%\"\n        },\n        attrs: {\n          \"src\": item.cover\n        },\n        on: {\n          \"click\": function($event) {\n            _vm.$store.commit('router', {\n              id: item.id,\n              path: '/playMv'\n            })\n          }\n        }\n      })]), _vm._v(\" \"), _c('div', {\n        staticStyle: {\n          \"font-size\": \"13px\"\n        }\n      }, [_vm._v(_vm._s(item.name))]), _vm._v(\" \"), _c('div', {\n        staticStyle: {\n          \"font-size\": \"12px\",\n          \"color\": \"#bbb\"\n        }\n      }, [_vm._v(\"\\n            \" + _vm._s(item.artistName) + \" - \" + _vm._s(_vm.formatTimeMi(item.duration / 1000)) + \"\\n          \")]), _vm._v(\" \"), _c('br')]) : _vm._e()\n    }))\n  }), _vm._v(\" \"), _c('br'), _c('br')], 2) : _vm._e(), _vm._v(\" \"), (_vm.resultShow) ? _c('mu-pagination', {\n    staticStyle: {\n      \"justify-content\": \"center\"\n    },\n    attrs: {\n      \"total\": _vm.result.count,\n      \"current\": _vm.currPage,\n      \"defaultPageSize\": _vm.pageSize\n    },\n    on: {\n      \"pageChange\": _vm.pageChange\n    }\n  }) : _vm._e()], 1), _vm._v(\" \"), _c('div', {\n    staticStyle: {\n      \"height\": \"80px\"\n    }\n  })], 1)\n},staticRenderFns: []}\n\n/***/ }),\n\n/***/ 678:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"mic-popup card text-center\"\n  }, [_c('i-circle', {\n    attrs: {\n      \"percent\": _vm.micPercent,\n      \"size\": 250,\n      \"stroke-color\": \"#41464b\",\n      \"stroke-width\": 2,\n      \"trail-width\": 1\n    }\n  }, [_c('i-icon', {\n    staticClass: \"search-mic-big\",\n    attrs: {\n      \"type\": \"mic-a\"\n    }\n  }), _vm._v(\" \"), _c('br'), _c('br'), _vm._v(\" \"), _c('button', {\n    staticClass: \"c-btn card\",\n    on: {\n      \"click\": _vm.startMic\n    }\n  }, [_vm._v(_vm._s(_vm.micText))]), _vm._v(\" \"), _c('transition', {\n    attrs: {\n      \"enter-active-class\": \"animated slideInUp\",\n      \"leave-active-class\": \"animated slideOutDown\"\n    }\n  }, [(_vm.resultShow) ? _c('div', {\n    staticClass: \"result-div text-center card\"\n  }, [_c('img', {\n    staticClass: \"cursor result-img card3\",\n    attrs: {\n      \"src\": _vm.result.album.picUrl\n    },\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        _vm.playMusic(_vm.result)\n      }\n    }\n  }), _vm._v(\" \"), _c('div', {\n    staticClass: \"dir\"\n  }), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('div', {\n    staticClass: \"cursor\",\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        _vm.playMusic(_vm.result)\n      }\n    }\n  }, [_vm._v(\"\\n          \" + _vm._s(_vm.result.name) + \"\\n        \")]), _vm._v(\" \"), _c('div', {\n    staticStyle: {\n      \"font-size\": \"14px\",\n      \"margin\": \".7rem 0\"\n    }\n  }, [_vm._v(\"\\n          \" + _vm._s(_vm.result.artist.name) + \"\\n        \")]), _vm._v(\" \"), _c('div', {\n    staticStyle: {\n      \"font-size\": \"12px\"\n    }\n  }, [_vm._v(\"\\n          \" + _vm._s(_vm.result.album.name) + \"\\n        \")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"cursor\",\n    staticStyle: {\n      \"font-size\": \"10px\",\n      \"margin-top\": \"1rem\"\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.resultShow = false;\n        _vm.micText = '开始识别'\n      }\n    }\n  }, [_c('svg', {\n    staticClass: \"icon\",\n    staticStyle: {\n      \"width\": \"1em\",\n      \"height\": \"1em\",\n      \"vertical-align\": \"middle\",\n      \"fill\": \"currentColor\",\n      \"overflow\": \"hidden\"\n    },\n    attrs: {\n      \"t\": \"1494570290786\",\n      \"viewBox\": \"0 0 1024 1024\",\n      \"version\": \"1.1\",\n      \"xmlns\": \"http://www.w3.org/2000/svg\",\n      \"p-id\": \"3039\"\n    }\n  }, [_c('path', {\n    attrs: {\n      \"d\": \"M566.594 512.533l288.992-288.994c12.998-12.993 11.492-35.558-3.361-50.407-14.846-14.846-37.405-16.353-50.406-3.358l-288.991 288.994-288.99-288.994c-12.998-12.995-35.559-11.489-50.407 3.358-14.851 14.849-16.359 37.414-3.36 50.407l288.992 288.994-288.987 288.99c-12.995 12.99-11.496 35.56 3.355 50.407 14.842 14.846 37.416 16.349 50.407 3.36l288.99-288.992 288.993 288.992c12.988 12.989 35.564 11.486 50.406-3.36 14.852-14.847 16.35-37.416 3.355-50.408l-288.988-288.99z\",\n      \"p-id\": \"3040\"\n    }\n  })])])]) : _vm._e()])], 1), _vm._v(\" \"), _c('br'), _c('br'), _vm._v(\" \"), _c('div', {\n    staticClass: \"cursor\",\n    staticStyle: {\n      \"font-size\": \"14px\"\n    },\n    on: {\n      \"click\": _vm.close\n    }\n  }, [_c('svg', {\n    staticClass: \"icon\",\n    staticStyle: {\n      \"width\": \"1em\",\n      \"height\": \"1em\",\n      \"vertical-align\": \"middle\",\n      \"fill\": \"currentColor\",\n      \"overflow\": \"hidden\"\n    },\n    attrs: {\n      \"t\": \"1494570290786\",\n      \"viewBox\": \"0 0 1024 1024\",\n      \"version\": \"1.1\",\n      \"xmlns\": \"http://www.w3.org/2000/svg\",\n      \"p-id\": \"3039\"\n    }\n  }, [_c('path', {\n    attrs: {\n      \"d\": \"M566.594 512.533l288.992-288.994c12.998-12.993 11.492-35.558-3.361-50.407-14.846-14.846-37.405-16.353-50.406-3.358l-288.991 288.994-288.99-288.994c-12.998-12.995-35.559-11.489-50.407 3.358-14.851 14.849-16.359 37.414-3.36 50.407l288.992 288.994-288.987 288.99c-12.995 12.99-11.496 35.56 3.355 50.407 14.842 14.846 37.416 16.349 50.407 3.36l288.99-288.992 288.993 288.992c12.988 12.989 35.564 11.486 50.406-3.36 14.852-14.847 16.35-37.416 3.355-50.408l-288.988-288.99z\",\n      \"p-id\": \"3040\"\n    }\n  })])])], 1)\n},staticRenderFns: []}\n\n/***/ }),\n\n/***/ 688:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(655);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(638)(\"30c59cd4\", content, true);\n\n/***/ }),\n\n/***/ 692:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(659);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(638)(\"507fb7af\", content, true);\n\n/***/ }),\n\n/***/ 702:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_iview__ = __webpack_require__(25);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_iview___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_iview__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__axios__ = __webpack_require__(34);\n\n\nvar MediaStreamRecorder = __webpack_require__(666);\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  data: function data() {\n    return {\n      micToggle: false,\n      micPercent: 0,\n      micText: '开始识别',\n      resultShow: false,\n      result: {}\n    };\n  },\n\n  methods: {\n    close: function close() {\n      this.$emit('close', false);\n    },\n    startMic: function startMic() {\n      navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\n      if (navigator.getUserMedia) {\n        var captureUserMedia = function captureUserMedia(mediaConstraints, successCallback, errorCallback) {\n          navigator.mediaDevices.getUserMedia(mediaConstraints).then(successCallback).catch(errorCallback);\n        };\n\n        var uploadToPythonServer = function uploadToPythonServer(blob) {\n          var file = new File([blob], 'msr-' + new Date().toISOString().replace(/:|\\./g, '-') + '.wav', {\n            type: 'audio/wav'\n          });\n          var formData = new FormData();\n          formData.append('audioMic', file);\n          __WEBPACK_IMPORTED_MODULE_1__axios__[\"a\" /* default */].audioRec(formData).then(function (data) {\n            if (data.code == 200) {\n              console.log(data);\n              _this.result = data.result;\n              _this.resultShow = true;\n            } else {\n              _this.micText = '开始识别';\n            }\n          });\n        };\n\n        var makeXMLHttpRequest = function makeXMLHttpRequest(url, data, callback) {\n          var request = new XMLHttpRequest();\n          request.onreadystatechange = function () {\n            if (request.readyState == 4 && request.status == 200) {\n              callback();\n            }\n          };\n          request.open('POST', url);\n          request.send(data);\n        };\n\n        var onMediaSuccess = function onMediaSuccess(stream) {\n          mediaRecorder = new MediaStreamRecorder(stream);\n          mediaRecorder.mimeType = 'audio/wav';\n          var count = 0;\n          mediaRecorder.ondataavailable = function (blob) {\n            count++;\n            if (count == 1) {\n              console.log('正在录音', blob);\n              uploadToPythonServer(blob);\n            }\n          };\n          mediaRecorder.start(10000);\n\n          if (!_this.micToggle) {\n            _this.micToggle = true;\n            _this.micText = '正在识别';\n            var micSetInterval = setInterval(function () {\n              if (_this.micToggle) {\n                _this.micPercent++;\n              }\n            }, 100);\n            setTimeout(function () {\n              _this.micToggle = false;\n              _this.micText = '识别中...';\n              window.clearInterval(micSetInterval);\n              mediaRecorder.stop();\n            }, 10100);\n          }\n        };\n\n        var onMediaError = function onMediaError(e) {\n          console.error('media error', e);\n        };\n\n        var _this = this;\n\n        var mediaConstraints = {\n          audio: true\n        };\n\n        captureUserMedia(mediaConstraints, onMediaSuccess, onMediaError);\n        var mediaRecorder = void 0;\n        document.querySelector('#saveMic').onclick = function () {\n          mediaRecorder.save();\n        };\n      } else {\n        __WEBPACK_IMPORTED_MODULE_0_iview__[\"Message\"].error('您的浏览器不支持录音功能,请使用最新版用谷歌浏览器');\n      }\n    },\n    playMusic: function playMusic(item) {\n      this.$store.commit('playMusic', {\n        url: 'http://localhost:5000' + item.url,\n        artist: item.artist,\n        album: item.album,\n        music: item\n      });\n    },\n    test: function test() {\n      alert(1);\n    }\n  },\n  destroyed: function destroyed() {\n    console.log(1111);\n  }\n});\n\n/***/ }),\n\n/***/ 709:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__axios__ = __webpack_require__(34);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__wyApi__ = __webpack_require__(43);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__MicPopup__ = __webpack_require__(667);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__MicPopup___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__MicPopup__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_moment__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_moment__);\n\n\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_3_moment___default.a.locale('zh-cn');\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  components: {\n    MicPopup: __WEBPACK_IMPORTED_MODULE_2__MicPopup___default.a\n  },\n  data: function data() {\n    return {\n      micPopup: false,\n      micToggle: false,\n      micPercent: 0,\n      micText: '开始识别',\n      keywords: '',\n      activeType: 0,\n      type: [{\n        code: 1,\n        val: 'song',\n        str: '歌曲',\n        color: 'blue'\n      }, {\n        code: 10,\n        val: 'album',\n        str: '专辑',\n        color: 'green'\n      }, {\n        code: 100,\n        val: 'artist',\n        str: '歌手',\n        color: 'red'\n      }, {\n        code: 1000,\n        val: 'playlist',\n        str: '歌单',\n        color: 'yellow'\n      }, {\n        code: 1004,\n        val: 'mv',\n        str: 'MV'\n      }],\n      currPage: 1,\n      resultShow: false,\n      result: {\n        count: 10,\n        data: []\n      },\n      pageSize: 10\n    };\n  },\n\n  watch: {},\n  methods: {\n    closeMic: function closeMic(val) {\n      this.micPopup = false;\n    },\n    pageChange: function pageChange(val) {\n      this.currPage = val;\n      console.log(val);\n      this.search();\n    },\n    search: function search() {\n      var _this = this;\n\n      this.resultShow = false;\n      var keywords = this.keywords;\n      var type = this.type[this.activeType];\n      if (type.code == 10) {\n        this.pageSize = 12;\n      }\n      if (type.code == 100) {\n        this.pageSize = 12;\n      }\n      if (type.code == 1004) {\n        this.pageSize = 12;\n      }\n      var offset = (this.currPage - 1) * this.pageSize;\n      __WEBPACK_IMPORTED_MODULE_1__wyApi__[\"a\" /* default */].search(keywords, type.code, offset, this.pageSize).then(function (data) {\n        if (data.code === 200) {\n          _this.result['count'] = data.result[type.val + 'Count'];\n          _this.result['data'] = data.result[type.val + 's'];\n\n          _this.resultShow = true;\n        }\n      });\n    },\n    searchDetil: function searchDetil(index) {\n      this.activeType = index;\n      this.currPage = 1;\n      this.search();\n    },\n    wyPlayMusic: function wyPlayMusic(item) {\n      var musicData = {\n        url: item.mp3Url,\n        artist: {\n          name: item.artists[0].name\n        },\n        album: {\n          name: item.album.name,\n          picUrl: item.album.picUrl\n        },\n        music: {\n          name: item.name,\n          wyID: item.id,\n          url: item.mp3Url\n        }\n      };\n      this.$store.commit('playMusic', musicData);\n    },\n    formatTime: function formatTime(val) {\n      return __WEBPACK_IMPORTED_MODULE_3_moment___default()(val).format('YYYY 年');\n    },\n    formatTimeMi: function formatTimeMi(time) {\n      var minute = parseInt(time / 60);\n      if (minute < 10) {\n        minute = '0' + minute;\n      }\n      var second = (time - minute * 60).toFixed(0);\n      if (second < 10) {\n        second = '0' + second;\n      }\n      return minute + ':' + second;\n    },\n    fixedPlayLeft: function fixedPlayLeft(val) {\n      this.playLeft = val;\n    }\n  },\n  mounted: function mounted() {}\n});\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/1.99d82fbdb041b110d219.js","\n/* styles */\nrequire(\"!!../../node_modules/.2.1.0@extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/.11.3.4@vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-0e58c7f7\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/.11.3.4@vue-loader/lib/selector?type=styles&index=0!./Search.vue\")\n\nvar Component = require(\"!../../node_modules/.11.3.4@vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/.11.3.4@vue-loader/lib/selector?type=script&index=0!./Search.vue\"),\n  /* template */\n  require(\"!!../../node_modules/.11.3.4@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-0e58c7f7\\\"}!../../node_modules/.11.3.4@vue-loader/lib/selector?type=template&index=0!./Search.vue\"),\n  /* scopeId */\n  \"data-v-0e58c7f7\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Search.vue\n// module id = 647\n// module chunks = 1","exports = module.exports = require(\"../../node_modules/.0.28.1@css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".search-bg[data-v-0e58c7f7]{position:absolute;background:#f0f0f0;top:0;height:calc(150px + 9rem);z-index:-1;width:100%;left:0}.search-input[data-v-0e58c7f7]{background:#fff;width:100%;border:none;outline:none;height:50px;font-size:20px;padding:0 50px}.search-icon[data-v-0e58c7f7]{right:20px}.search-icon[data-v-0e58c7f7],.search-mic[data-v-0e58c7f7]{color:#bababa;font-size:24px;position:absolute;top:13px;cursor:pointer;z-index:1}.search-mic[data-v-0e58c7f7]{left:20px}.song-result-content[data-v-0e58c7f7]{line-height:40px}.song-result-content.active[data-v-0e58c7f7]{background:#f0f0f0}.album-result-content[data-v-0e58c7f7]{line-height:50px}.album-result-content.active[data-v-0e58c7f7]{background:#f0f0f0}\", \"\", {\"version\":3,\"sources\":[\"/Users/xiecp/tifi/views/src/components/Search.vue\"],\"names\":[],\"mappings\":\"AACA,4BACE,kBAAmB,AACnB,mBAAoB,AACpB,MAAO,AACP,0BAA2B,AAC3B,WAAY,AACZ,WAAY,AACZ,MAAO,CACR,AACD,+BACE,gBAAiB,AACjB,WAAY,AACZ,YAAa,AACb,aAAc,AACd,YAAa,AACb,eAAgB,AAChB,cAAgB,CACjB,AACD,8BAKE,UAAY,CAGb,AACD,2DARE,cAAe,AACf,eAAgB,AAChB,kBAAmB,AACnB,SAAU,AAEV,eAAgB,AAChB,SAAU,CAUX,AARD,6BAKE,SAAW,CAGZ,AACD,sCACE,gBAAiB,CAClB,AACD,6CACE,kBAAmB,CACpB,AACD,uCACE,gBAAiB,CAClB,AACD,8CACE,kBAAmB,CACpB\",\"file\":\"Search.vue\",\"sourcesContent\":[\"\\n.search-bg[data-v-0e58c7f7] {\\n  position: absolute;\\n  background: #f0f0f0;\\n  top: 0;\\n  height: calc(150px + 9rem);\\n  z-index: -1;\\n  width: 100%;\\n  left: 0\\n}\\n.search-input[data-v-0e58c7f7] {\\n  background: #fff;\\n  width: 100%;\\n  border: none;\\n  outline: none;\\n  height: 50px;\\n  font-size: 20px;\\n  padding: 0 50px;\\n}\\n.search-icon[data-v-0e58c7f7] {\\n  color: #bababa;\\n  font-size: 24px;\\n  position: absolute;\\n  top: 13px;\\n  right: 20px;\\n  cursor: pointer;\\n  z-index: 1\\n}\\n.search-mic[data-v-0e58c7f7] {\\n  color: #bababa;\\n  font-size: 24px;\\n  position: absolute;\\n  top: 13px;\\n  left: 20px;\\n  cursor: pointer;\\n  z-index: 1\\n}\\n.song-result-content[data-v-0e58c7f7] {\\n  line-height: 40px\\n}\\n.song-result-content.active[data-v-0e58c7f7] {\\n  background: #f0f0f0\\n}\\n.album-result-content[data-v-0e58c7f7] {\\n  line-height: 50px\\n}\\n.album-result-content.active[data-v-0e58c7f7] {\\n  background: #f0f0f0\\n}\\n\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.0.28.1@css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/.11.3.4@vue-loader/lib/style-compiler?{\"id\":\"data-v-0e58c7f7\",\"scoped\":true,\"hasInlineConfig\":false}!./~/.11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./src/components/Search.vue\n// module id = 655\n// module chunks = 1","exports = module.exports = require(\"../../node_modules/.0.28.1@css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".mic-popup[data-v-369f38b4]{position:absolute;padding-top:80px;height:400px;width:100%;background:#fff;top:110%;z-index:1}.search-mic-big[data-v-369f38b4]{font-size:150px}.result-div[data-v-369f38b4]{position:absolute;top:-33%;left:-10%;height:320px;width:320px;border-radius:50%;background:#fff;font-size:16px;padding:50px;z-index:1}.result-img[data-v-369f38b4]{width:120px;height:120px;border-radius:50%}\", \"\", {\"version\":3,\"sources\":[\"/Users/xiecp/tifi/views/src/components/MicPopup.vue\"],\"names\":[],\"mappings\":\"AACA,4BACE,kBAAmB,AACnB,iBAAkB,AAClB,aAAc,AACd,WAAY,AACZ,gBAAiB,AACjB,SAAU,AACV,SAAU,CACX,AACD,iCACE,eAAgB,CACjB,AACD,6BACE,kBAAmB,AACnB,SAAU,AACV,UAAW,AACX,aAAc,AACd,YAAa,AACb,kBAAmB,AACnB,gBAAiB,AACjB,eAAgB,AAChB,aAAc,AACd,SAAU,CACX,AACD,6BACE,YAAa,AACb,aAAc,AACd,iBAAkB,CACnB\",\"file\":\"MicPopup.vue\",\"sourcesContent\":[\"\\n.mic-popup[data-v-369f38b4] {\\n  position: absolute;\\n  padding-top: 80px;\\n  height: 400px;\\n  width: 100%;\\n  background: #fff;\\n  top: 110%;\\n  z-index: 1\\n}\\n.search-mic-big[data-v-369f38b4] {\\n  font-size: 150px\\n}\\n.result-div[data-v-369f38b4] {\\n  position: absolute;\\n  top: -33%;\\n  left: -10%;\\n  height: 320px;\\n  width: 320px;\\n  border-radius: 50%;\\n  background: #fff;\\n  font-size: 16px;\\n  padding: 50px;\\n  z-index: 1\\n}\\n.result-img[data-v-369f38b4] {\\n  width: 120px;\\n  height: 120px;\\n  border-radius: 50%\\n}\\n\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.0.28.1@css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/.11.3.4@vue-loader/lib/style-compiler?{\"id\":\"data-v-369f38b4\",\"scoped\":true,\"hasInlineConfig\":false}!./~/.11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./src/components/MicPopup.vue\n// module id = 659\n// module chunks = 1","// Last time updated: 2016-07-03 8:51:35 AM UTC\n\n// links:\n// Open-Sourced: https://github.com/streamproc/MediaStreamRecorder\n// https://cdn.WebRTC-Experiment.com/MediaStreamRecorder.js\n// https://www.WebRTC-Experiment.com/MediaStreamRecorder.js\n// npm install msr\n\n//------------------------------------\n\n// Browsers Support::\n// Chrome (all versions) [ audio/video separately ]\n// Firefox ( >= 29 ) [ audio/video in single webm/mp4 container or only audio in ogg ]\n// Opera (all versions) [ same as chrome ]\n// Android (Chrome) [ only video ]\n// Android (Opera) [ only video ]\n// Android (Firefox) [ only video ]\n// Microsoft Edge (Only Audio & Gif)\n\n//------------------------------------\n// Muaz Khan     - www.MuazKhan.com\n// MIT License   - www.WebRTC-Experiment.com/licence\n//------------------------------------\n\n// ______________________\n// MediaStreamRecorder.js\n\nfunction MediaStreamRecorder(mediaStream) {\n    if (!mediaStream) {\n        throw 'MediaStream is mandatory.';\n    }\n\n    // void start(optional long timeSlice)\n    // timestamp to fire \"ondataavailable\"\n    this.start = function(timeSlice) {\n        var Recorder;\n\n        if (typeof MediaRecorder !== 'undefined') {\n            Recorder = MediaRecorderWrapper;\n        } else if (IsChrome || IsOpera || IsEdge) {\n            if (this.mimeType.indexOf('video') !== -1) {\n                Recorder = WhammyRecorder;\n            } else if (this.mimeType.indexOf('audio') !== -1) {\n                Recorder = StereoAudioRecorder;\n            }\n        }\n\n        // video recorder (in GIF format)\n        if (this.mimeType === 'image/gif') {\n            Recorder = GifRecorder;\n        }\n\n        // audio/wav is supported only via StereoAudioRecorder\n        // audio/pcm (int16) is supported only via StereoAudioRecorder\n        if (this.mimeType === 'audio/wav' || this.mimeType === 'audio/pcm') {\n            Recorder = StereoAudioRecorder;\n        }\n\n        // allows forcing StereoAudioRecorder.js on Edge/Firefox\n        if (this.recorderType) {\n            Recorder = this.recorderType;\n        }\n\n        mediaRecorder = new Recorder(mediaStream);\n        mediaRecorder.blobs = [];\n\n        var self = this;\n        mediaRecorder.ondataavailable = function(data) {\n            mediaRecorder.blobs.push(data);\n            self.ondataavailable(data);\n        };\n        mediaRecorder.onstop = this.onstop;\n        mediaRecorder.onStartedDrawingNonBlankFrames = this.onStartedDrawingNonBlankFrames;\n\n        // Merge all data-types except \"function\"\n        mediaRecorder = mergeProps(mediaRecorder, this);\n\n        mediaRecorder.start(timeSlice);\n    };\n\n    this.onStartedDrawingNonBlankFrames = function() {};\n    this.clearOldRecordedFrames = function() {\n        if (!mediaRecorder) {\n            return;\n        }\n\n        mediaRecorder.clearOldRecordedFrames();\n    };\n\n    this.stop = function() {\n        if (mediaRecorder) {\n            mediaRecorder.stop();\n        }\n    };\n\n    this.ondataavailable = function(blob) {\n        console.log('ondataavailable..', blob);\n    };\n\n    this.onstop = function(error) {\n        console.warn('stopped..', error);\n    };\n\n    this.save = function(file, fileName) {\n        if (!file) {\n            if (!mediaRecorder) {\n                return;\n            }\n\n            ConcatenateBlobs(mediaRecorder.blobs, mediaRecorder.blobs[0].type, function(concatenatedBlob) {\n                invokeSaveAsDialog(concatenatedBlob);\n            });\n            return;\n        }\n        invokeSaveAsDialog(file, fileName);\n    };\n\n    this.pause = function() {\n        if (!mediaRecorder) {\n            return;\n        }\n        mediaRecorder.pause();\n        console.log('Paused recording.', this.mimeType || mediaRecorder.mimeType);\n    };\n\n    this.resume = function() {\n        if (!mediaRecorder) {\n            return;\n        }\n        mediaRecorder.resume();\n        console.log('Resumed recording.', this.mimeType || mediaRecorder.mimeType);\n    };\n\n    // StereoAudioRecorder || WhammyRecorder || MediaRecorderWrapper || GifRecorder\n    this.recorderType = null;\n\n    // video/webm or audio/webm or audio/ogg or audio/wav\n    this.mimeType = 'video/webm';\n\n    // logs are enabled by default\n    this.disableLogs = false;\n\n    // Reference to \"MediaRecorder.js\"\n    var mediaRecorder;\n}\n\n// ______________________\n// MultiStreamRecorder.js\n\nfunction MultiStreamRecorder(mediaStream) {\n    if (!mediaStream) {\n        throw 'MediaStream is mandatory.';\n    }\n\n    var self = this;\n    var isMediaRecorder = isMediaRecorderCompatible();\n\n    this.stream = mediaStream;\n\n    // void start(optional long timeSlice)\n    // timestamp to fire \"ondataavailable\"\n    this.start = function(timeSlice) {\n        audioRecorder = new MediaStreamRecorder(mediaStream);\n        videoRecorder = new MediaStreamRecorder(mediaStream);\n\n        audioRecorder.mimeType = 'audio/ogg';\n        videoRecorder.mimeType = 'video/webm';\n\n        for (var prop in this) {\n            if (typeof this[prop] !== 'function') {\n                audioRecorder[prop] = videoRecorder[prop] = this[prop];\n            }\n        }\n\n        audioRecorder.ondataavailable = function(blob) {\n            if (!audioVideoBlobs[recordingInterval]) {\n                audioVideoBlobs[recordingInterval] = {};\n            }\n\n            audioVideoBlobs[recordingInterval].audio = blob;\n\n            if (audioVideoBlobs[recordingInterval].video && !audioVideoBlobs[recordingInterval].onDataAvailableEventFired) {\n                audioVideoBlobs[recordingInterval].onDataAvailableEventFired = true;\n                fireOnDataAvailableEvent(audioVideoBlobs[recordingInterval]);\n            }\n        };\n\n        videoRecorder.ondataavailable = function(blob) {\n            if (isMediaRecorder) {\n                return self.ondataavailable({\n                    video: blob,\n                    audio: blob\n                });\n            }\n\n            if (!audioVideoBlobs[recordingInterval]) {\n                audioVideoBlobs[recordingInterval] = {};\n            }\n\n            audioVideoBlobs[recordingInterval].video = blob;\n\n            if (audioVideoBlobs[recordingInterval].audio && !audioVideoBlobs[recordingInterval].onDataAvailableEventFired) {\n                audioVideoBlobs[recordingInterval].onDataAvailableEventFired = true;\n                fireOnDataAvailableEvent(audioVideoBlobs[recordingInterval]);\n            }\n        };\n\n        function fireOnDataAvailableEvent(blobs) {\n            recordingInterval++;\n            self.ondataavailable(blobs);\n        }\n\n        videoRecorder.onstop = audioRecorder.onstop = function(error) {\n            self.onstop(error);\n        };\n\n        if (!isMediaRecorder) {\n            // to make sure both audio/video are synced.\n            videoRecorder.onStartedDrawingNonBlankFrames = function() {\n                videoRecorder.clearOldRecordedFrames();\n                audioRecorder.start(timeSlice);\n            };\n            videoRecorder.start(timeSlice);\n        } else {\n            videoRecorder.start(timeSlice);\n        }\n    };\n\n    this.stop = function() {\n        if (audioRecorder) {\n            audioRecorder.stop();\n        }\n        if (videoRecorder) {\n            videoRecorder.stop();\n        }\n    };\n\n    this.ondataavailable = function(blob) {\n        console.log('ondataavailable..', blob);\n    };\n\n    this.onstop = function(error) {\n        console.warn('stopped..', error);\n    };\n\n    this.pause = function() {\n        if (audioRecorder) {\n            audioRecorder.pause();\n        }\n        if (videoRecorder) {\n            videoRecorder.pause();\n        }\n    };\n\n    this.resume = function() {\n        if (audioRecorder) {\n            audioRecorder.resume();\n        }\n        if (videoRecorder) {\n            videoRecorder.resume();\n        }\n    };\n\n    var audioRecorder;\n    var videoRecorder;\n\n    var audioVideoBlobs = {};\n    var recordingInterval = 0;\n}\n\nif (typeof MediaStreamRecorder !== 'undefined') {\n    MediaStreamRecorder.MultiStreamRecorder = MultiStreamRecorder;\n}\n\n// _____________________________\n// Cross-Browser-Declarations.js\n\nvar browserFakeUserAgent = 'Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45';\n\n(function(that) {\n    if (typeof window !== 'undefined') {\n        return;\n    }\n\n    if (typeof window === 'undefined' && typeof global !== 'undefined') {\n        global.navigator = {\n            userAgent: browserFakeUserAgent,\n            getUserMedia: function() {}\n        };\n\n        /*global window:true */\n        that.window = global;\n    } else if (typeof window === 'undefined') {\n        // window = this;\n    }\n\n    if (typeof document === 'undefined') {\n        /*global document:true */\n        that.document = {};\n\n        document.createElement = document.captureStream = document.mozCaptureStream = function() {\n            return {};\n        };\n    }\n\n    if (typeof location === 'undefined') {\n        /*global location:true */\n        that.location = {\n            protocol: 'file:',\n            href: '',\n            hash: ''\n        };\n    }\n\n    if (typeof screen === 'undefined') {\n        /*global screen:true */\n        that.screen = {\n            width: 0,\n            height: 0\n        };\n    }\n})(typeof global !== 'undefined' ? global : window);\n\n// WebAudio API representer\nvar AudioContext = window.AudioContext;\n\nif (typeof AudioContext === 'undefined') {\n    if (typeof webkitAudioContext !== 'undefined') {\n        /*global AudioContext:true */\n        AudioContext = webkitAudioContext;\n    }\n\n    if (typeof mozAudioContext !== 'undefined') {\n        /*global AudioContext:true */\n        AudioContext = mozAudioContext;\n    }\n}\n\nif (typeof window === 'undefined') {\n    /*jshint -W020 */\n    window = {};\n}\n\n// WebAudio API representer\nvar AudioContext = window.AudioContext;\n\nif (typeof AudioContext === 'undefined') {\n    if (typeof webkitAudioContext !== 'undefined') {\n        /*global AudioContext:true */\n        AudioContext = webkitAudioContext;\n    }\n\n    if (typeof mozAudioContext !== 'undefined') {\n        /*global AudioContext:true */\n        AudioContext = mozAudioContext;\n    }\n}\n\n/*jshint -W079 */\nvar URL = window.URL;\n\nif (typeof URL === 'undefined' && typeof webkitURL !== 'undefined') {\n    /*global URL:true */\n    URL = webkitURL;\n}\n\nif (typeof navigator !== 'undefined') {\n    if (typeof navigator.webkitGetUserMedia !== 'undefined') {\n        navigator.getUserMedia = navigator.webkitGetUserMedia;\n    }\n\n    if (typeof navigator.mozGetUserMedia !== 'undefined') {\n        navigator.getUserMedia = navigator.mozGetUserMedia;\n    }\n} else {\n    navigator = {\n        getUserMedia: function() {},\n        userAgent: browserFakeUserAgent\n    };\n}\n\nvar IsEdge = navigator.userAgent.indexOf('Edge') !== -1 && (!!navigator.msSaveBlob || !!navigator.msSaveOrOpenBlob);\n\nvar IsOpera = false;\nif (typeof opera !== 'undefined' && navigator.userAgent && navigator.userAgent.indexOf('OPR/') !== -1) {\n    IsOpera = true;\n}\nvar IsChrome = !IsEdge && !IsEdge && !!navigator.webkitGetUserMedia;\n\nvar MediaStream = window.MediaStream;\n\nif (typeof MediaStream === 'undefined' && typeof webkitMediaStream !== 'undefined') {\n    MediaStream = webkitMediaStream;\n}\n\n/*global MediaStream:true */\nif (typeof MediaStream !== 'undefined') {\n    if (!('getVideoTracks' in MediaStream.prototype)) {\n        MediaStream.prototype.getVideoTracks = function() {\n            if (!this.getTracks) {\n                return [];\n            }\n\n            var tracks = [];\n            this.getTracks.forEach(function(track) {\n                if (track.kind.toString().indexOf('video') !== -1) {\n                    tracks.push(track);\n                }\n            });\n            return tracks;\n        };\n\n        MediaStream.prototype.getAudioTracks = function() {\n            if (!this.getTracks) {\n                return [];\n            }\n\n            var tracks = [];\n            this.getTracks.forEach(function(track) {\n                if (track.kind.toString().indexOf('audio') !== -1) {\n                    tracks.push(track);\n                }\n            });\n            return tracks;\n        };\n    }\n\n    if (!('stop' in MediaStream.prototype)) {\n        MediaStream.prototype.stop = function() {\n            this.getAudioTracks().forEach(function(track) {\n                if (!!track.stop) {\n                    track.stop();\n                }\n            });\n\n            this.getVideoTracks().forEach(function(track) {\n                if (!!track.stop) {\n                    track.stop();\n                }\n            });\n        };\n    }\n}\n\nif (typeof location !== 'undefined') {\n    if (location.href.indexOf('file:') === 0) {\n        console.error('Please load this HTML file on HTTP or HTTPS.');\n    }\n}\n\n// Merge all other data-types except \"function\"\n\nfunction mergeProps(mergein, mergeto) {\n    for (var t in mergeto) {\n        if (typeof mergeto[t] !== 'function') {\n            mergein[t] = mergeto[t];\n        }\n    }\n    return mergein;\n}\n\n// \"dropFirstFrame\" has been added by Graham Roth\n// https://github.com/gsroth\n\nfunction dropFirstFrame(arr) {\n    arr.shift();\n    return arr;\n}\n\n/**\n * @param {Blob} file - File or Blob object. This parameter is required.\n * @param {string} fileName - Optional file name e.g. \"Recorded-Video.webm\"\n * @example\n * invokeSaveAsDialog(blob or file, [optional] fileName);\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n */\nfunction invokeSaveAsDialog(file, fileName) {\n    if (!file) {\n        throw 'Blob object is required.';\n    }\n\n    if (!file.type) {\n        try {\n            file.type = 'video/webm';\n        } catch (e) {}\n    }\n\n    var fileExtension = (file.type || 'video/webm').split('/')[1];\n\n    if (fileName && fileName.indexOf('.') !== -1) {\n        var splitted = fileName.split('.');\n        fileName = splitted[0];\n        fileExtension = splitted[1];\n    }\n\n    var fileFullName = (fileName || (Math.round(Math.random() * 9999999999) + 888888888)) + '.' + fileExtension;\n\n    if (typeof navigator.msSaveOrOpenBlob !== 'undefined') {\n        return navigator.msSaveOrOpenBlob(file, fileFullName);\n    } else if (typeof navigator.msSaveBlob !== 'undefined') {\n        return navigator.msSaveBlob(file, fileFullName);\n    }\n\n    var hyperlink = document.createElement('a');\n    hyperlink.href = URL.createObjectURL(file);\n    hyperlink.target = '_blank';\n    hyperlink.download = fileFullName;\n\n    if (!!navigator.mozGetUserMedia) {\n        hyperlink.onclick = function() {\n            (document.body || document.documentElement).removeChild(hyperlink);\n        };\n        (document.body || document.documentElement).appendChild(hyperlink);\n    }\n\n    var evt = new MouseEvent('click', {\n        view: window,\n        bubbles: true,\n        cancelable: true\n    });\n\n    hyperlink.dispatchEvent(evt);\n\n    if (!navigator.mozGetUserMedia) {\n        URL.revokeObjectURL(hyperlink.href);\n    }\n}\n\nfunction bytesToSize(bytes) {\n    var k = 1000;\n    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    if (bytes === 0) {\n        return '0 Bytes';\n    }\n    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(k)), 10);\n    return (bytes / Math.pow(k, i)).toPrecision(3) + ' ' + sizes[i];\n}\n\n// ______________ (used to handle stuff like http://goo.gl/xmE5eg) issue #129\n// ObjectStore.js\nvar ObjectStore = {\n    AudioContext: AudioContext\n};\n\nfunction isMediaRecorderCompatible() {\n    var isOpera = !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0;\n    var isChrome = !!window.chrome && !isOpera;\n    var isFirefox = typeof window.InstallTrigger !== 'undefined';\n\n    if (isFirefox) {\n        return true;\n    }\n\n    if (!isChrome) {\n        return false;\n    }\n\n    var nVer = navigator.appVersion;\n    var nAgt = navigator.userAgent;\n    var fullVersion = '' + parseFloat(navigator.appVersion);\n    var majorVersion = parseInt(navigator.appVersion, 10);\n    var nameOffset, verOffset, ix;\n\n    if (isChrome) {\n        verOffset = nAgt.indexOf('Chrome');\n        fullVersion = nAgt.substring(verOffset + 7);\n    }\n\n    // trim the fullVersion string at semicolon/space if present\n    if ((ix = fullVersion.indexOf(';')) !== -1) {\n        fullVersion = fullVersion.substring(0, ix);\n    }\n\n    if ((ix = fullVersion.indexOf(' ')) !== -1) {\n        fullVersion = fullVersion.substring(0, ix);\n    }\n\n    majorVersion = parseInt('' + fullVersion, 10);\n\n    if (isNaN(majorVersion)) {\n        fullVersion = '' + parseFloat(navigator.appVersion);\n        majorVersion = parseInt(navigator.appVersion, 10);\n    }\n\n    return majorVersion >= 49;\n}\n\n// ______________ (used to handle stuff like http://goo.gl/xmE5eg) issue #129\n// ObjectStore.js\nvar ObjectStore = {\n    AudioContext: window.AudioContext || window.webkitAudioContext\n};\n\n// ==================\n// MediaRecorder.js\n\n/**\n * Implementation of https://dvcs.w3.org/hg/dap/raw-file/default/media-stream-capture/MediaRecorder.html\n * The MediaRecorder accepts a mediaStream as input source passed from UA. When recorder starts,\n * a MediaEncoder will be created and accept the mediaStream as input source.\n * Encoder will get the raw data by track data changes, encode it by selected MIME Type, then store the encoded in EncodedBufferCache object.\n * The encoded data will be extracted on every timeslice passed from Start function call or by RequestData function.\n * Thread model:\n * When the recorder starts, it creates a \"Media Encoder\" thread to read data from MediaEncoder object and store buffer in EncodedBufferCache object.\n * Also extract the encoded data and create blobs on every timeslice passed from start function or RequestData function called by UA.\n */\n\nfunction MediaRecorderWrapper(mediaStream) {\n    var self = this;\n\n    /**\n     * This method records MediaStream.\n     * @method\n     * @memberof MediaStreamRecorder\n     * @example\n     * recorder.record();\n     */\n    this.start = function(timeSlice, __disableLogs) {\n        if (!self.mimeType) {\n            self.mimeType = 'video/webm';\n        }\n\n        if (self.mimeType.indexOf('audio') !== -1) {\n            if (mediaStream.getVideoTracks().length && mediaStream.getAudioTracks().length) {\n                var stream;\n                if (!!navigator.mozGetUserMedia) {\n                    stream = new MediaStream();\n                    stream.addTrack(mediaStream.getAudioTracks()[0]);\n                } else {\n                    // webkitMediaStream\n                    stream = new MediaStream(mediaStream.getAudioTracks());\n                }\n                mediaStream = stream;\n            }\n        }\n\n        if (self.mimeType.indexOf('audio') !== -1) {\n            self.mimeType = IsChrome ? 'audio/webm' : 'audio/ogg';\n        }\n\n        self.dontFireOnDataAvailableEvent = false;\n\n        var recorderHints = {\n            mimeType: self.mimeType\n        };\n\n        if (!self.disableLogs && !__disableLogs) {\n            console.log('Passing following params over MediaRecorder API.', recorderHints);\n        }\n\n        if (mediaRecorder) {\n            // mandatory to make sure Firefox doesn't fails to record streams 3-4 times without reloading the page.\n            mediaRecorder = null;\n        }\n\n        if (IsChrome && !isMediaRecorderCompatible()) {\n            // to support video-only recording on stable\n            recorderHints = 'video/vp8';\n        }\n\n        // http://dxr.mozilla.org/mozilla-central/source/content/media/MediaRecorder.cpp\n        // https://wiki.mozilla.org/Gecko:MediaRecorder\n        // https://dvcs.w3.org/hg/dap/raw-file/default/media-stream-capture/MediaRecorder.html\n\n        // starting a recording session; which will initiate \"Reading Thread\"\n        // \"Reading Thread\" are used to prevent main-thread blocking scenarios\n        try {\n            mediaRecorder = new MediaRecorder(mediaStream, recorderHints);\n        } catch (e) {\n            // if someone passed NON_supported mimeType\n            // or if Firefox on Android\n            mediaRecorder = new MediaRecorder(mediaStream);\n        }\n\n        if ('canRecordMimeType' in mediaRecorder && mediaRecorder.canRecordMimeType(self.mimeType) === false) {\n            if (!self.disableLogs) {\n                console.warn('MediaRecorder API seems unable to record mimeType:', self.mimeType);\n            }\n        }\n\n        // i.e. stop recording when <video> is paused by the user; and auto restart recording \n        // when video is resumed. E.g. yourStream.getVideoTracks()[0].muted = true; // it will auto-stop recording.\n        mediaRecorder.ignoreMutedMedia = self.ignoreMutedMedia || false;\n\n        var firedOnDataAvailableOnce = false;\n\n        // Dispatching OnDataAvailable Handler\n        mediaRecorder.ondataavailable = function(e) {\n            if (self.dontFireOnDataAvailableEvent) {\n                return;\n            }\n\n            // how to fix FF-corrupt-webm issues?\n            // should we leave this?          e.data.size < 26800\n            if (!e.data || !e.data.size || e.data.size < 26800 || firedOnDataAvailableOnce) {\n                return;\n            }\n\n            firedOnDataAvailableOnce = true;\n\n            var blob = self.getNativeBlob ? e.data : new Blob([e.data], {\n                type: self.mimeType || 'video/webm'\n            });\n\n            self.ondataavailable(blob);\n\n            self.dontFireOnDataAvailableEvent = true;\n\n            if (!!mediaRecorder) {\n                mediaRecorder.stop();\n                mediaRecorder = null;\n            }\n\n            // record next interval\n            self.start(timeSlice, '__disableLogs');\n        };\n\n        mediaRecorder.onerror = function(error) {\n            if (!self.disableLogs) {\n                if (error.name === 'InvalidState') {\n                    console.error('The MediaRecorder is not in a state in which the proposed operation is allowed to be executed.');\n                } else if (error.name === 'OutOfMemory') {\n                    console.error('The UA has exhaused the available memory. User agents SHOULD provide as much additional information as possible in the message attribute.');\n                } else if (error.name === 'IllegalStreamModification') {\n                    console.error('A modification to the stream has occurred that makes it impossible to continue recording. An example would be the addition of a Track while recording is occurring. User agents SHOULD provide as much additional information as possible in the message attribute.');\n                } else if (error.name === 'OtherRecordingError') {\n                    console.error('Used for an fatal error other than those listed above. User agents SHOULD provide as much additional information as possible in the message attribute.');\n                } else if (error.name === 'GenericError') {\n                    console.error('The UA cannot provide the codec or recording option that has been requested.', error);\n                } else {\n                    console.error('MediaRecorder Error', error);\n                }\n            }\n\n            // When the stream is \"ended\" set recording to 'inactive' \n            // and stop gathering data. Callers should not rely on \n            // exactness of the timeSlice value, especially \n            // if the timeSlice value is small. Callers should \n            // consider timeSlice as a minimum value\n\n            if (!!mediaRecorder && mediaRecorder.state !== 'inactive' && mediaRecorder.state !== 'stopped') {\n                mediaRecorder.stop();\n            }\n        };\n\n        // void start(optional long mTimeSlice)\n        // The interval of passing encoded data from EncodedBufferCache to onDataAvailable\n        // handler. \"mTimeSlice < 0\" means Session object does not push encoded data to\n        // onDataAvailable, instead, it passive wait the client side pull encoded data\n        // by calling requestData API.\n        try {\n            mediaRecorder.start(3.6e+6);\n        } catch (e) {\n            mediaRecorder = null;\n        }\n\n        setTimeout(function() {\n            if (!mediaRecorder) {\n                return;\n            }\n\n            if (mediaRecorder.state === 'recording') {\n                // \"stop\" method auto invokes \"requestData\"!\n                mediaRecorder.requestData();\n                // mediaRecorder.stop();\n            }\n        }, timeSlice);\n\n        // Start recording. If timeSlice has been provided, mediaRecorder will\n        // raise a dataavailable event containing the Blob of collected data on every timeSlice milliseconds.\n        // If timeSlice isn't provided, UA should call the RequestData to obtain the Blob data, also set the mTimeSlice to zero.\n    };\n\n    /**\n     * This method stops recording MediaStream.\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\n     * @method\n     * @memberof MediaStreamRecorder\n     * @example\n     * recorder.stop(function(blob) {\n     *     video.src = URL.createObjectURL(blob);\n     * });\n     */\n    this.stop = function(callback) {\n        if (!mediaRecorder) {\n            return;\n        }\n\n        // mediaRecorder.state === 'recording' means that media recorder is associated with \"session\"\n        // mediaRecorder.state === 'stopped' means that media recorder is detached from the \"session\" ... in this case; \"session\" will also be deleted.\n\n        if (mediaRecorder.state === 'recording') {\n            // \"stop\" method auto invokes \"requestData\"!\n            mediaRecorder.requestData();\n\n            setTimeout(function() {\n                self.dontFireOnDataAvailableEvent = true;\n                if (!!mediaRecorder && mediaRecorder.state === 'recording') {\n                    mediaRecorder.stop();\n                }\n                mediaRecorder = null;\n            }, 2000);\n        }\n    };\n\n    /**\n     * This method pauses the recording process.\n     * @method\n     * @memberof MediaStreamRecorder\n     * @example\n     * recorder.pause();\n     */\n    this.pause = function() {\n        if (!mediaRecorder) {\n            return;\n        }\n\n        if (mediaRecorder.state === 'recording') {\n            mediaRecorder.pause();\n        }\n    };\n\n    /**\n     * The recorded blobs are passed over this event.\n     * @event\n     * @memberof MediaStreamRecorder\n     * @example\n     * recorder.ondataavailable = function(data) {};\n     */\n    this.ondataavailable = function(blob) {\n        console.log('recorded-blob', blob);\n    };\n\n    /**\n     * This method resumes the recording process.\n     * @method\n     * @memberof MediaStreamRecorder\n     * @example\n     * recorder.resume();\n     */\n    this.resume = function() {\n        if (this.dontFireOnDataAvailableEvent) {\n            this.dontFireOnDataAvailableEvent = false;\n\n            var disableLogs = self.disableLogs;\n            self.disableLogs = true;\n            this.record();\n            self.disableLogs = disableLogs;\n            return;\n        }\n\n        if (!mediaRecorder) {\n            return;\n        }\n\n        if (mediaRecorder.state === 'paused') {\n            mediaRecorder.resume();\n        }\n    };\n\n    /**\n     * This method resets currently recorded data.\n     * @method\n     * @memberof MediaStreamRecorder\n     * @example\n     * recorder.clearRecordedData();\n     */\n    this.clearRecordedData = function() {\n        if (!mediaRecorder) {\n            return;\n        }\n\n        this.pause();\n\n        this.dontFireOnDataAvailableEvent = true;\n        this.stop();\n    };\n\n    // Reference to \"MediaRecorder\" object\n    var mediaRecorder;\n\n    function isMediaStreamActive() {\n        if ('active' in mediaStream) {\n            if (!mediaStream.active) {\n                return false;\n            }\n        } else if ('ended' in mediaStream) { // old hack\n            if (mediaStream.ended) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    // this method checks if media stream is stopped\n    // or any track is ended.\n    (function looper() {\n        if (!mediaRecorder) {\n            return;\n        }\n\n        if (isMediaStreamActive() === false) {\n            self.stop();\n            return;\n        }\n\n        setTimeout(looper, 1000); // check every second\n    })();\n}\n\nif (typeof MediaStreamRecorder !== 'undefined') {\n    MediaStreamRecorder.MediaRecorderWrapper = MediaRecorderWrapper;\n}\n\n// ======================\n// StereoAudioRecorder.js\n\nfunction StereoAudioRecorder(mediaStream) {\n    // void start(optional long timeSlice)\n    // timestamp to fire \"ondataavailable\"\n    this.start = function(timeSlice) {\n        timeSlice = timeSlice || 1000;\n\n        mediaRecorder = new StereoAudioRecorderHelper(mediaStream, this);\n\n        mediaRecorder.record();\n\n        timeout = setInterval(function() {\n            mediaRecorder.requestData();\n        }, timeSlice);\n    };\n\n    this.stop = function() {\n        if (mediaRecorder) {\n            mediaRecorder.stop();\n            clearTimeout(timeout);\n        }\n    };\n\n    this.pause = function() {\n        if (!mediaRecorder) {\n            return;\n        }\n\n        mediaRecorder.pause();\n    };\n\n    this.resume = function() {\n        if (!mediaRecorder) {\n            return;\n        }\n\n        mediaRecorder.resume();\n    };\n\n    this.ondataavailable = function() {};\n\n    // Reference to \"StereoAudioRecorder\" object\n    var mediaRecorder;\n    var timeout;\n}\n\nif (typeof MediaStreamRecorder !== 'undefined') {\n    MediaStreamRecorder.StereoAudioRecorder = StereoAudioRecorder;\n}\n\n// ============================\n// StereoAudioRecorderHelper.js\n\n// source code from: http://typedarray.org/wp-content/projects/WebAudioRecorder/script.js\n\nfunction StereoAudioRecorderHelper(mediaStream, root) {\n\n    // variables    \n    var deviceSampleRate = 44100; // range: 22050 to 96000\n\n    if (!ObjectStore.AudioContextConstructor) {\n        ObjectStore.AudioContextConstructor = new ObjectStore.AudioContext();\n    }\n\n    // check device sample rate\n    deviceSampleRate = ObjectStore.AudioContextConstructor.sampleRate;\n\n    var leftchannel = [];\n    var rightchannel = [];\n    var scriptprocessornode;\n    var recording = false;\n    var recordingLength = 0;\n    var volume;\n    var audioInput;\n    var sampleRate = root.sampleRate || deviceSampleRate;\n\n    var mimeType = root.mimeType || 'audio/wav';\n    var isPCM = mimeType.indexOf('audio/pcm') > -1;\n\n    var context;\n\n    var numChannels = root.audioChannels || 2;\n\n    this.record = function() {\n        recording = true;\n        // reset the buffers for the new recording\n        leftchannel.length = rightchannel.length = 0;\n        recordingLength = 0;\n    };\n\n    this.requestData = function() {\n        if (isPaused) {\n            return;\n        }\n\n        if (recordingLength === 0) {\n            requestDataInvoked = false;\n            return;\n        }\n\n        requestDataInvoked = true;\n        // clone stuff\n        var internalLeftChannel = leftchannel.slice(0);\n        var internalRightChannel = rightchannel.slice(0);\n        var internalRecordingLength = recordingLength;\n\n        // reset the buffers for the new recording\n        leftchannel.length = rightchannel.length = [];\n        recordingLength = 0;\n        requestDataInvoked = false;\n\n        // we flat the left and right channels down\n        var leftBuffer = mergeBuffers(internalLeftChannel, internalRecordingLength);\n\n        var interleaved = leftBuffer;\n\n        // we interleave both channels together\n        if (numChannels === 2) {\n            var rightBuffer = mergeBuffers(internalRightChannel, internalRecordingLength); // bug fixed via #70,#71\n            interleaved = interleave(leftBuffer, rightBuffer);\n        }\n\n        if (isPCM) {\n            // our final binary blob\n            var blob = new Blob([convertoFloat32ToInt16(interleaved)], {\n                type: 'audio/pcm'\n            });\n\n            console.debug('audio recorded blob size:', bytesToSize(blob.size));\n            root.ondataavailable(blob);\n            return;\n        }\n\n        // we create our wav file\n        var buffer = new ArrayBuffer(44 + interleaved.length * 2);\n        var view = new DataView(buffer);\n\n        // RIFF chunk descriptor\n        writeUTFBytes(view, 0, 'RIFF');\n\n        // -8 (via #97)\n        view.setUint32(4, 44 + interleaved.length * 2 - 8, true);\n\n        writeUTFBytes(view, 8, 'WAVE');\n        // FMT sub-chunk\n        writeUTFBytes(view, 12, 'fmt ');\n        view.setUint32(16, 16, true);\n        view.setUint16(20, 1, true);\n        // stereo (2 channels)\n        view.setUint16(22, numChannels, true);\n        view.setUint32(24, sampleRate, true);\n        view.setUint32(28, sampleRate * numChannels * 2, true); // numChannels * 2 (via #71)\n        view.setUint16(32, numChannels * 2, true);\n        view.setUint16(34, 16, true);\n        // data sub-chunk\n        writeUTFBytes(view, 36, 'data');\n        view.setUint32(40, interleaved.length * 2, true);\n\n        // write the PCM samples\n        var lng = interleaved.length;\n        var index = 44;\n        var volume = 1;\n        for (var i = 0; i < lng; i++) {\n            view.setInt16(index, interleaved[i] * (0x7FFF * volume), true);\n            index += 2;\n        }\n\n        // our final binary blob\n        var blob = new Blob([view], {\n            type: 'audio/wav'\n        });\n\n        console.debug('audio recorded blob size:', bytesToSize(blob.size));\n\n        root.ondataavailable(blob);\n    };\n\n    this.stop = function() {\n        // we stop recording\n        recording = false;\n        this.requestData();\n\n        audioInput.disconnect();\n    };\n\n    function interleave(leftChannel, rightChannel) {\n        var length = leftChannel.length + rightChannel.length;\n        var result = new Float32Array(length);\n\n        var inputIndex = 0;\n\n        for (var index = 0; index < length;) {\n            result[index++] = leftChannel[inputIndex];\n            result[index++] = rightChannel[inputIndex];\n            inputIndex++;\n        }\n        return result;\n    }\n\n    function mergeBuffers(channelBuffer, recordingLength) {\n        var result = new Float32Array(recordingLength);\n        var offset = 0;\n        var lng = channelBuffer.length;\n        for (var i = 0; i < lng; i++) {\n            var buffer = channelBuffer[i];\n            result.set(buffer, offset);\n            offset += buffer.length;\n        }\n        return result;\n    }\n\n    function writeUTFBytes(view, offset, string) {\n        var lng = string.length;\n        for (var i = 0; i < lng; i++) {\n            view.setUint8(offset + i, string.charCodeAt(i));\n        }\n    }\n\n    function convertoFloat32ToInt16(buffer) {\n        var l = buffer.length;\n        var buf = new Int16Array(l)\n\n        while (l--) {\n            buf[l] = buffer[l] * 0xFFFF; //convert to 16 bit\n        }\n        return buf.buffer\n    }\n\n    // creates the audio context\n    var context = ObjectStore.AudioContextConstructor;\n\n    // creates a gain node\n    ObjectStore.VolumeGainNode = context.createGain();\n\n    var volume = ObjectStore.VolumeGainNode;\n\n    // creates an audio node from the microphone incoming stream\n    ObjectStore.AudioInput = context.createMediaStreamSource(mediaStream);\n\n    // creates an audio node from the microphone incoming stream\n    var audioInput = ObjectStore.AudioInput;\n\n    // connect the stream to the gain node\n    audioInput.connect(volume);\n\n    /* From the spec: This value controls how frequently the audioprocess event is\n    dispatched and how many sample-frames need to be processed each call.\n    Lower values for buffer size will result in a lower (better) latency.\n    Higher values will be necessary to avoid audio breakup and glitches \n    Legal values are 256, 512, 1024, 2048, 4096, 8192, and 16384.*/\n    var bufferSize = root.bufferSize || 2048;\n    if (root.bufferSize === 0) {\n        bufferSize = 0;\n    }\n\n    if (context.createJavaScriptNode) {\n        scriptprocessornode = context.createJavaScriptNode(bufferSize, numChannels, numChannels);\n    } else if (context.createScriptProcessor) {\n        scriptprocessornode = context.createScriptProcessor(bufferSize, numChannels, numChannels);\n    } else {\n        throw 'WebAudio API has no support on this browser.';\n    }\n\n    bufferSize = scriptprocessornode.bufferSize;\n\n    console.debug('using audio buffer-size:', bufferSize);\n\n    var requestDataInvoked = false;\n\n    // sometimes \"scriptprocessornode\" disconnects from he destination-node\n    // and there is no exception thrown in this case.\n    // and obviously no further \"ondataavailable\" events will be emitted.\n    // below global-scope variable is added to debug such unexpected but \"rare\" cases.\n    window.scriptprocessornode = scriptprocessornode;\n\n    if (numChannels === 1) {\n        console.debug('All right-channels are skipped.');\n    }\n\n    var isPaused = false;\n\n    this.pause = function() {\n        isPaused = true;\n    };\n\n    this.resume = function() {\n        isPaused = false;\n    };\n\n    // http://webaudio.github.io/web-audio-api/#the-scriptprocessornode-interface\n    scriptprocessornode.onaudioprocess = function(e) {\n        if (!recording || requestDataInvoked || isPaused) {\n            return;\n        }\n\n        var left = e.inputBuffer.getChannelData(0);\n        leftchannel.push(new Float32Array(left));\n\n        if (numChannels === 2) {\n            var right = e.inputBuffer.getChannelData(1);\n            rightchannel.push(new Float32Array(right));\n        }\n        recordingLength += bufferSize;\n    };\n\n    volume.connect(scriptprocessornode);\n    scriptprocessornode.connect(context.destination);\n}\n\nif (typeof MediaStreamRecorder !== 'undefined') {\n    MediaStreamRecorder.StereoAudioRecorderHelper = StereoAudioRecorderHelper;\n}\n\n// ===================\n// WhammyRecorder.js\n\nfunction WhammyRecorder(mediaStream) {\n    // void start(optional long timeSlice)\n    // timestamp to fire \"ondataavailable\"\n    this.start = function(timeSlice) {\n        timeSlice = timeSlice || 1000;\n\n        mediaRecorder = new WhammyRecorderHelper(mediaStream, this);\n\n        for (var prop in this) {\n            if (typeof this[prop] !== 'function') {\n                mediaRecorder[prop] = this[prop];\n            }\n        }\n\n        mediaRecorder.record();\n\n        timeout = setInterval(function() {\n            mediaRecorder.requestData();\n        }, timeSlice);\n    };\n\n    this.stop = function() {\n        if (mediaRecorder) {\n            mediaRecorder.stop();\n            clearTimeout(timeout);\n        }\n    };\n\n    this.clearOldRecordedFrames = function() {\n        if (mediaRecorder) {\n            mediaRecorder.clearOldRecordedFrames();\n        }\n    };\n\n    this.pause = function() {\n        if (!mediaRecorder) {\n            return;\n        }\n\n        mediaRecorder.pause();\n    };\n\n    this.resume = function() {\n        if (!mediaRecorder) {\n            return;\n        }\n\n        mediaRecorder.resume();\n    };\n\n    this.ondataavailable = function() {};\n\n    // Reference to \"WhammyRecorder\" object\n    var mediaRecorder;\n    var timeout;\n}\n\nif (typeof MediaStreamRecorder !== 'undefined') {\n    MediaStreamRecorder.WhammyRecorder = WhammyRecorder;\n}\n\n// ==========================\n// WhammyRecorderHelper.js\n\nfunction WhammyRecorderHelper(mediaStream, root) {\n    this.record = function(timeSlice) {\n        if (!this.width) {\n            this.width = 320;\n        }\n        if (!this.height) {\n            this.height = 240;\n        }\n\n        if (this.video && this.video instanceof HTMLVideoElement) {\n            if (!this.width) {\n                this.width = video.videoWidth || video.clientWidth || 320;\n            }\n            if (!this.height) {\n                this.height = video.videoHeight || video.clientHeight || 240;\n            }\n        }\n\n        if (!this.video) {\n            this.video = {\n                width: this.width,\n                height: this.height\n            };\n        }\n\n        if (!this.canvas || !this.canvas.width || !this.canvas.height) {\n            this.canvas = {\n                width: this.width,\n                height: this.height\n            };\n        }\n\n        canvas.width = this.canvas.width;\n        canvas.height = this.canvas.height;\n\n        // setting defaults\n        if (this.video && this.video instanceof HTMLVideoElement) {\n            this.isHTMLObject = true;\n            video = this.video.cloneNode();\n        } else {\n            video = document.createElement('video');\n            video.src = URL.createObjectURL(mediaStream);\n\n            video.width = this.video.width;\n            video.height = this.video.height;\n        }\n\n        video.muted = true;\n        video.play();\n\n        lastTime = new Date().getTime();\n        whammy = new Whammy.Video(root.speed, root.quality);\n\n        console.log('canvas resolutions', canvas.width, '*', canvas.height);\n        console.log('video width/height', video.width || canvas.width, '*', video.height || canvas.height);\n\n        drawFrames();\n    };\n\n    this.clearOldRecordedFrames = function() {\n        whammy.frames = [];\n    };\n\n    var requestDataInvoked = false;\n    this.requestData = function() {\n        if (isPaused) {\n            return;\n        }\n\n        if (!whammy.frames.length) {\n            requestDataInvoked = false;\n            return;\n        }\n\n        requestDataInvoked = true;\n        // clone stuff\n        var internalFrames = whammy.frames.slice(0);\n\n        // reset the frames for the new recording\n\n        whammy.frames = dropBlackFrames(internalFrames, -1);\n\n        whammy.compile(function(whammyBlob) {\n            root.ondataavailable(whammyBlob);\n            console.debug('video recorded blob size:', bytesToSize(whammyBlob.size));\n        });\n\n        whammy.frames = [];\n\n        requestDataInvoked = false;\n    };\n\n    var isOnStartedDrawingNonBlankFramesInvoked = false;\n\n    function drawFrames() {\n        if (isPaused) {\n            lastTime = new Date().getTime();\n            setTimeout(drawFrames, 500);\n            return;\n        }\n\n        if (isStopDrawing) {\n            return;\n        }\n\n        if (requestDataInvoked) {\n            return setTimeout(drawFrames, 100);\n        }\n\n        var duration = new Date().getTime() - lastTime;\n        if (!duration) {\n            return drawFrames();\n        }\n\n        // via webrtc-experiment#206, by Jack i.e. @Seymourr\n        lastTime = new Date().getTime();\n\n        if (!self.isHTMLObject && video.paused) {\n            video.play(); // Android\n        }\n\n        context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n        if (!isStopDrawing) {\n            whammy.frames.push({\n                duration: duration,\n                image: canvas.toDataURL('image/webp')\n            });\n        }\n\n        if (!isOnStartedDrawingNonBlankFramesInvoked && !isBlankFrame(whammy.frames[whammy.frames.length - 1])) {\n            isOnStartedDrawingNonBlankFramesInvoked = true;\n            root.onStartedDrawingNonBlankFrames();\n        }\n\n        setTimeout(drawFrames, 10);\n    }\n\n    var isStopDrawing = false;\n\n    this.stop = function() {\n        isStopDrawing = true;\n        this.requestData();\n    };\n\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n\n    var video;\n    var lastTime;\n    var whammy;\n\n    var self = this;\n\n    function isBlankFrame(frame, _pixTolerance, _frameTolerance) {\n        var localCanvas = document.createElement('canvas');\n        localCanvas.width = canvas.width;\n        localCanvas.height = canvas.height;\n        var context2d = localCanvas.getContext('2d');\n\n        var sampleColor = {\n            r: 0,\n            g: 0,\n            b: 0\n        };\n        var maxColorDifference = Math.sqrt(\n            Math.pow(255, 2) +\n            Math.pow(255, 2) +\n            Math.pow(255, 2)\n        );\n        var pixTolerance = _pixTolerance && _pixTolerance >= 0 && _pixTolerance <= 1 ? _pixTolerance : 0;\n        var frameTolerance = _frameTolerance && _frameTolerance >= 0 && _frameTolerance <= 1 ? _frameTolerance : 0;\n\n        var matchPixCount, endPixCheck, maxPixCount;\n\n        var image = new Image();\n        image.src = frame.image;\n        context2d.drawImage(image, 0, 0, canvas.width, canvas.height);\n        var imageData = context2d.getImageData(0, 0, canvas.width, canvas.height);\n        matchPixCount = 0;\n        endPixCheck = imageData.data.length;\n        maxPixCount = imageData.data.length / 4;\n\n        for (var pix = 0; pix < endPixCheck; pix += 4) {\n            var currentColor = {\n                r: imageData.data[pix],\n                g: imageData.data[pix + 1],\n                b: imageData.data[pix + 2]\n            };\n            var colorDifference = Math.sqrt(\n                Math.pow(currentColor.r - sampleColor.r, 2) +\n                Math.pow(currentColor.g - sampleColor.g, 2) +\n                Math.pow(currentColor.b - sampleColor.b, 2)\n            );\n            // difference in color it is difference in color vectors (r1,g1,b1) <=> (r2,g2,b2)\n            if (colorDifference <= maxColorDifference * pixTolerance) {\n                matchPixCount++;\n            }\n        }\n\n        if (maxPixCount - matchPixCount <= maxPixCount * frameTolerance) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    function dropBlackFrames(_frames, _framesToCheck, _pixTolerance, _frameTolerance) {\n        var localCanvas = document.createElement('canvas');\n        localCanvas.width = canvas.width;\n        localCanvas.height = canvas.height;\n        var context2d = localCanvas.getContext('2d');\n        var resultFrames = [];\n\n        var checkUntilNotBlack = _framesToCheck === -1;\n        var endCheckFrame = (_framesToCheck && _framesToCheck > 0 && _framesToCheck <= _frames.length) ?\n            _framesToCheck : _frames.length;\n        var sampleColor = {\n            r: 0,\n            g: 0,\n            b: 0\n        };\n        var maxColorDifference = Math.sqrt(\n            Math.pow(255, 2) +\n            Math.pow(255, 2) +\n            Math.pow(255, 2)\n        );\n        var pixTolerance = _pixTolerance && _pixTolerance >= 0 && _pixTolerance <= 1 ? _pixTolerance : 0;\n        var frameTolerance = _frameTolerance && _frameTolerance >= 0 && _frameTolerance <= 1 ? _frameTolerance : 0;\n        var doNotCheckNext = false;\n\n        for (var f = 0; f < endCheckFrame; f++) {\n            var matchPixCount, endPixCheck, maxPixCount;\n\n            if (!doNotCheckNext) {\n                var image = new Image();\n                image.src = _frames[f].image;\n                context2d.drawImage(image, 0, 0, canvas.width, canvas.height);\n                var imageData = context2d.getImageData(0, 0, canvas.width, canvas.height);\n                matchPixCount = 0;\n                endPixCheck = imageData.data.length;\n                maxPixCount = imageData.data.length / 4;\n\n                for (var pix = 0; pix < endPixCheck; pix += 4) {\n                    var currentColor = {\n                        r: imageData.data[pix],\n                        g: imageData.data[pix + 1],\n                        b: imageData.data[pix + 2]\n                    };\n                    var colorDifference = Math.sqrt(\n                        Math.pow(currentColor.r - sampleColor.r, 2) +\n                        Math.pow(currentColor.g - sampleColor.g, 2) +\n                        Math.pow(currentColor.b - sampleColor.b, 2)\n                    );\n                    // difference in color it is difference in color vectors (r1,g1,b1) <=> (r2,g2,b2)\n                    if (colorDifference <= maxColorDifference * pixTolerance) {\n                        matchPixCount++;\n                    }\n                }\n            }\n\n            if (!doNotCheckNext && maxPixCount - matchPixCount <= maxPixCount * frameTolerance) {\n                // console.log('removed black frame : ' + f + ' ; frame duration ' + _frames[f].duration);\n            } else {\n                // console.log('frame is passed : ' + f);\n                if (checkUntilNotBlack) {\n                    doNotCheckNext = true;\n                }\n                resultFrames.push(_frames[f]);\n            }\n        }\n\n        resultFrames = resultFrames.concat(_frames.slice(endCheckFrame));\n\n        if (resultFrames.length <= 0) {\n            // at least one last frame should be available for next manipulation\n            // if total duration of all frames will be < 1000 than ffmpeg doesn't work well...\n            resultFrames.push(_frames[_frames.length - 1]);\n        }\n\n        return resultFrames;\n    }\n\n    var isPaused = false;\n\n    this.pause = function() {\n        isPaused = true;\n    };\n\n    this.resume = function() {\n        isPaused = false;\n    };\n}\n\nif (typeof MediaStreamRecorder !== 'undefined') {\n    MediaStreamRecorder.WhammyRecorderHelper = WhammyRecorderHelper;\n}\n\n// --------------\n// GifRecorder.js\n\nfunction GifRecorder(mediaStream) {\n    if (typeof GIFEncoder === 'undefined') {\n        throw 'Please link: https://cdn.webrtc-experiment.com/gif-recorder.js';\n    }\n\n    // void start(optional long timeSlice)\n    // timestamp to fire \"ondataavailable\"\n    this.start = function(timeSlice) {\n        timeSlice = timeSlice || 1000;\n\n        var imageWidth = this.videoWidth || 320;\n        var imageHeight = this.videoHeight || 240;\n\n        canvas.width = video.width = imageWidth;\n        canvas.height = video.height = imageHeight;\n\n        // external library to record as GIF images\n        gifEncoder = new GIFEncoder();\n\n        // void setRepeat(int iter)\n        // Sets the number of times the set of GIF frames should be played.\n        // Default is 1; 0 means play indefinitely.\n        gifEncoder.setRepeat(0);\n\n        // void setFrameRate(Number fps)\n        // Sets frame rate in frames per second.\n        // Equivalent to setDelay(1000/fps).\n        // Using \"setDelay\" instead of \"setFrameRate\"\n        gifEncoder.setDelay(this.frameRate || this.speed || 200);\n\n        // void setQuality(int quality)\n        // Sets quality of color quantization (conversion of images to the\n        // maximum 256 colors allowed by the GIF specification).\n        // Lower values (minimum = 1) produce better colors,\n        // but slow processing significantly. 10 is the default,\n        // and produces good color mapping at reasonable speeds.\n        // Values greater than 20 do not yield significant improvements in speed.\n        gifEncoder.setQuality(this.quality || 1);\n\n        // Boolean start()\n        // This writes the GIF Header and returns false if it fails.\n        gifEncoder.start();\n\n        startTime = Date.now();\n\n        function drawVideoFrame(time) {\n            if (isPaused) {\n                setTimeout(drawVideoFrame, 500, time);\n                return;\n            }\n\n            lastAnimationFrame = requestAnimationFrame(drawVideoFrame);\n\n            if (typeof lastFrameTime === undefined) {\n                lastFrameTime = time;\n            }\n\n            // ~10 fps\n            if (time - lastFrameTime < 90) {\n                return;\n            }\n\n            if (video.paused) {\n                video.play(); // Android\n            }\n\n            context.drawImage(video, 0, 0, imageWidth, imageHeight);\n\n            gifEncoder.addFrame(context);\n\n            // console.log('Recording...' + Math.round((Date.now() - startTime) / 1000) + 's');\n            // console.log(\"fps: \", 1000 / (time - lastFrameTime));\n\n            lastFrameTime = time;\n        }\n\n        lastAnimationFrame = requestAnimationFrame(drawVideoFrame);\n\n        timeout = setTimeout(doneRecording, timeSlice);\n    };\n\n    function doneRecording() {\n        endTime = Date.now();\n\n        var gifBlob = new Blob([new Uint8Array(gifEncoder.stream().bin)], {\n            type: 'image/gif'\n        });\n        self.ondataavailable(gifBlob);\n\n        // todo: find a way to clear old recorded blobs\n        gifEncoder.stream().bin = [];\n    }\n\n    this.stop = function() {\n        if (lastAnimationFrame) {\n            cancelAnimationFrame(lastAnimationFrame);\n            clearTimeout(timeout);\n            doneRecording();\n        }\n    };\n\n    var isPaused = false;\n\n    this.pause = function() {\n        isPaused = true;\n    };\n\n    this.resume = function() {\n        isPaused = false;\n    };\n\n    this.ondataavailable = function() {};\n    this.onstop = function() {};\n\n    // Reference to itself\n    var self = this;\n\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n\n    var video = document.createElement('video');\n    video.muted = true;\n    video.autoplay = true;\n    video.src = URL.createObjectURL(mediaStream);\n    video.play();\n\n    var lastAnimationFrame = null;\n    var startTime, endTime, lastFrameTime;\n\n    var gifEncoder;\n    var timeout;\n}\n\nif (typeof MediaStreamRecorder !== 'undefined') {\n    MediaStreamRecorder.GifRecorder = GifRecorder;\n}\n\n// https://github.com/antimatter15/whammy/blob/master/LICENSE\n// _________\n// Whammy.js\n\n// todo: Firefox now supports webp for webm containers!\n// their MediaRecorder implementation works well!\n// should we provide an option to record via Whammy.js or MediaRecorder API is a better solution?\n\n/**\n * Whammy is a standalone class used by {@link RecordRTC} to bring video recording in Chrome. It is written by {@link https://github.com/antimatter15|antimatter15}\n * @summary A real time javascript webm encoder based on a canvas hack.\n * @typedef Whammy\n * @class\n * @example\n * var recorder = new Whammy().Video(15);\n * recorder.add(context || canvas || dataURL);\n * var output = recorder.compile();\n */\n\nvar Whammy = (function() {\n    // a more abstract-ish API\n\n    function WhammyVideo(duration, quality) {\n        this.frames = [];\n        if (!duration) {\n            duration = 1;\n        }\n        this.duration = 1000 / duration;\n        this.quality = quality || 0.8;\n    }\n\n    /**\n     * Pass Canvas or Context or image/webp(string) to {@link Whammy} encoder.\n     * @method\n     * @memberof Whammy\n     * @example\n     * recorder = new Whammy().Video(0.8, 100);\n     * recorder.add(canvas || context || 'image/webp');\n     * @param {string} frame - Canvas || Context || image/webp\n     * @param {number} duration - Stick a duration (in milliseconds)\n     */\n    WhammyVideo.prototype.add = function(frame, duration) {\n        if ('canvas' in frame) { //CanvasRenderingContext2D\n            frame = frame.canvas;\n        }\n\n        if ('toDataURL' in frame) {\n            frame = frame.toDataURL('image/webp', this.quality);\n        }\n\n        if (!(/^data:image\\/webp;base64,/ig).test(frame)) {\n            throw 'Input must be formatted properly as a base64 encoded DataURI of type image/webp';\n        }\n        this.frames.push({\n            image: frame,\n            duration: duration || this.duration\n        });\n    };\n\n    function processInWebWorker(_function) {\n        var blob = URL.createObjectURL(new Blob([_function.toString(),\n            'this.onmessage =  function (e) {' + _function.name + '(e.data);}'\n        ], {\n            type: 'application/javascript'\n        }));\n\n        var worker = new Worker(blob);\n        URL.revokeObjectURL(blob);\n        return worker;\n    }\n\n    function whammyInWebWorker(frames) {\n        function ArrayToWebM(frames) {\n            var info = checkFrames(frames);\n            if (!info) {\n                return [];\n            }\n\n            var clusterMaxDuration = 30000;\n\n            var EBML = [{\n                'id': 0x1a45dfa3, // EBML\n                'data': [{\n                    'data': 1,\n                    'id': 0x4286 // EBMLVersion\n                }, {\n                    'data': 1,\n                    'id': 0x42f7 // EBMLReadVersion\n                }, {\n                    'data': 4,\n                    'id': 0x42f2 // EBMLMaxIDLength\n                }, {\n                    'data': 8,\n                    'id': 0x42f3 // EBMLMaxSizeLength\n                }, {\n                    'data': 'webm',\n                    'id': 0x4282 // DocType\n                }, {\n                    'data': 2,\n                    'id': 0x4287 // DocTypeVersion\n                }, {\n                    'data': 2,\n                    'id': 0x4285 // DocTypeReadVersion\n                }]\n            }, {\n                'id': 0x18538067, // Segment\n                'data': [{\n                    'id': 0x1549a966, // Info\n                    'data': [{\n                        'data': 1e6, //do things in millisecs (num of nanosecs for duration scale)\n                        'id': 0x2ad7b1 // TimecodeScale\n                    }, {\n                        'data': 'whammy',\n                        'id': 0x4d80 // MuxingApp\n                    }, {\n                        'data': 'whammy',\n                        'id': 0x5741 // WritingApp\n                    }, {\n                        'data': doubleToString(info.duration),\n                        'id': 0x4489 // Duration\n                    }]\n                }, {\n                    'id': 0x1654ae6b, // Tracks\n                    'data': [{\n                        'id': 0xae, // TrackEntry\n                        'data': [{\n                            'data': 1,\n                            'id': 0xd7 // TrackNumber\n                        }, {\n                            'data': 1,\n                            'id': 0x73c5 // TrackUID\n                        }, {\n                            'data': 0,\n                            'id': 0x9c // FlagLacing\n                        }, {\n                            'data': 'und',\n                            'id': 0x22b59c // Language\n                        }, {\n                            'data': 'V_VP8',\n                            'id': 0x86 // CodecID\n                        }, {\n                            'data': 'VP8',\n                            'id': 0x258688 // CodecName\n                        }, {\n                            'data': 1,\n                            'id': 0x83 // TrackType\n                        }, {\n                            'id': 0xe0, // Video\n                            'data': [{\n                                'data': info.width,\n                                'id': 0xb0 // PixelWidth\n                            }, {\n                                'data': info.height,\n                                'id': 0xba // PixelHeight\n                            }]\n                        }]\n                    }]\n                }]\n            }];\n\n            //Generate clusters (max duration)\n            var frameNumber = 0;\n            var clusterTimecode = 0;\n            while (frameNumber < frames.length) {\n\n                var clusterFrames = [];\n                var clusterDuration = 0;\n                do {\n                    clusterFrames.push(frames[frameNumber]);\n                    clusterDuration += frames[frameNumber].duration;\n                    frameNumber++;\n                } while (frameNumber < frames.length && clusterDuration < clusterMaxDuration);\n\n                var clusterCounter = 0;\n                var cluster = {\n                    'id': 0x1f43b675, // Cluster\n                    'data': getClusterData(clusterTimecode, clusterCounter, clusterFrames)\n                }; //Add cluster to segment\n                EBML[1].data.push(cluster);\n                clusterTimecode += clusterDuration;\n            }\n\n            return generateEBML(EBML);\n        }\n\n        function getClusterData(clusterTimecode, clusterCounter, clusterFrames) {\n            return [{\n                'data': clusterTimecode,\n                'id': 0xe7 // Timecode\n            }].concat(clusterFrames.map(function(webp) {\n                var block = makeSimpleBlock({\n                    discardable: 0,\n                    frame: webp.data.slice(4),\n                    invisible: 0,\n                    keyframe: 1,\n                    lacing: 0,\n                    trackNum: 1,\n                    timecode: Math.round(clusterCounter)\n                });\n                clusterCounter += webp.duration;\n                return {\n                    data: block,\n                    id: 0xa3\n                };\n            }));\n        }\n\n        // sums the lengths of all the frames and gets the duration\n\n        function checkFrames(frames) {\n            if (!frames[0]) {\n                postMessage({\n                    error: 'Something went wrong. Maybe WebP format is not supported in the current browser.'\n                });\n                return;\n            }\n\n            var width = frames[0].width,\n                height = frames[0].height,\n                duration = frames[0].duration;\n\n            for (var i = 1; i < frames.length; i++) {\n                duration += frames[i].duration;\n            }\n            return {\n                duration: duration,\n                width: width,\n                height: height\n            };\n        }\n\n        function numToBuffer(num) {\n            var parts = [];\n            while (num > 0) {\n                parts.push(num & 0xff);\n                num = num >> 8;\n            }\n            return new Uint8Array(parts.reverse());\n        }\n\n        function strToBuffer(str) {\n            return new Uint8Array(str.split('').map(function(e) {\n                return e.charCodeAt(0);\n            }));\n        }\n\n        function bitsToBuffer(bits) {\n            var data = [];\n            var pad = (bits.length % 8) ? (new Array(1 + 8 - (bits.length % 8))).join('0') : '';\n            bits = pad + bits;\n            for (var i = 0; i < bits.length; i += 8) {\n                data.push(parseInt(bits.substr(i, 8), 2));\n            }\n            return new Uint8Array(data);\n        }\n\n        function generateEBML(json) {\n            var ebml = [];\n            for (var i = 0; i < json.length; i++) {\n                var data = json[i].data;\n\n                if (typeof data === 'object') {\n                    data = generateEBML(data);\n                }\n\n                if (typeof data === 'number') {\n                    data = bitsToBuffer(data.toString(2));\n                }\n\n                if (typeof data === 'string') {\n                    data = strToBuffer(data);\n                }\n\n                var len = data.size || data.byteLength || data.length;\n                var zeroes = Math.ceil(Math.ceil(Math.log(len) / Math.log(2)) / 8);\n                var sizeToString = len.toString(2);\n                var padded = (new Array((zeroes * 7 + 7 + 1) - sizeToString.length)).join('0') + sizeToString;\n                var size = (new Array(zeroes)).join('0') + '1' + padded;\n\n                ebml.push(numToBuffer(json[i].id));\n                ebml.push(bitsToBuffer(size));\n                ebml.push(data);\n            }\n\n            return new Blob(ebml, {\n                type: 'video/webm'\n            });\n        }\n\n        function toBinStrOld(bits) {\n            var data = '';\n            var pad = (bits.length % 8) ? (new Array(1 + 8 - (bits.length % 8))).join('0') : '';\n            bits = pad + bits;\n            for (var i = 0; i < bits.length; i += 8) {\n                data += String.fromCharCode(parseInt(bits.substr(i, 8), 2));\n            }\n            return data;\n        }\n\n        function makeSimpleBlock(data) {\n            var flags = 0;\n\n            if (data.keyframe) {\n                flags |= 128;\n            }\n\n            if (data.invisible) {\n                flags |= 8;\n            }\n\n            if (data.lacing) {\n                flags |= (data.lacing << 1);\n            }\n\n            if (data.discardable) {\n                flags |= 1;\n            }\n\n            if (data.trackNum > 127) {\n                throw 'TrackNumber > 127 not supported';\n            }\n\n            var out = [data.trackNum | 0x80, data.timecode >> 8, data.timecode & 0xff, flags].map(function(e) {\n                return String.fromCharCode(e);\n            }).join('') + data.frame;\n\n            return out;\n        }\n\n        function parseWebP(riff) {\n            var VP8 = riff.RIFF[0].WEBP[0];\n\n            var frameStart = VP8.indexOf('\\x9d\\x01\\x2a'); // A VP8 keyframe starts with the 0x9d012a header\n            for (var i = 0, c = []; i < 4; i++) {\n                c[i] = VP8.charCodeAt(frameStart + 3 + i);\n            }\n\n            var width, height, tmp;\n\n            //the code below is literally copied verbatim from the bitstream spec\n            tmp = (c[1] << 8) | c[0];\n            width = tmp & 0x3FFF;\n            tmp = (c[3] << 8) | c[2];\n            height = tmp & 0x3FFF;\n            return {\n                width: width,\n                height: height,\n                data: VP8,\n                riff: riff\n            };\n        }\n\n        function getStrLength(string, offset) {\n            return parseInt(string.substr(offset + 4, 4).split('').map(function(i) {\n                var unpadded = i.charCodeAt(0).toString(2);\n                return (new Array(8 - unpadded.length + 1)).join('0') + unpadded;\n            }).join(''), 2);\n        }\n\n        function parseRIFF(string) {\n            var offset = 0;\n            var chunks = {};\n\n            while (offset < string.length) {\n                var id = string.substr(offset, 4);\n                var len = getStrLength(string, offset);\n                var data = string.substr(offset + 4 + 4, len);\n                offset += 4 + 4 + len;\n                chunks[id] = chunks[id] || [];\n\n                if (id === 'RIFF' || id === 'LIST') {\n                    chunks[id].push(parseRIFF(data));\n                } else {\n                    chunks[id].push(data);\n                }\n            }\n            return chunks;\n        }\n\n        function doubleToString(num) {\n            return [].slice.call(\n                new Uint8Array((new Float64Array([num])).buffer), 0).map(function(e) {\n                return String.fromCharCode(e);\n            }).reverse().join('');\n        }\n\n        var webm = new ArrayToWebM(frames.map(function(frame) {\n            var webp = parseWebP(parseRIFF(atob(frame.image.slice(23))));\n            webp.duration = frame.duration;\n            return webp;\n        }));\n\n        postMessage(webm);\n    }\n\n    /**\n     * Encodes frames in WebM container. It uses WebWorkinvoke to invoke 'ArrayToWebM' method.\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\n     * @method\n     * @memberof Whammy\n     * @example\n     * recorder = new Whammy().Video(0.8, 100);\n     * recorder.compile(function(blob) {\n     *    // blob.size - blob.type\n     * });\n     */\n    WhammyVideo.prototype.compile = function(callback) {\n        var webWorker = processInWebWorker(whammyInWebWorker);\n\n        webWorker.onmessage = function(event) {\n            if (event.data.error) {\n                console.error(event.data.error);\n                return;\n            }\n            callback(event.data);\n        };\n\n        webWorker.postMessage(this.frames);\n    };\n\n    return {\n        /**\n         * A more abstract-ish API.\n         * @method\n         * @memberof Whammy\n         * @example\n         * recorder = new Whammy().Video(0.8, 100);\n         * @param {?number} speed - 0.8\n         * @param {?number} quality - 100\n         */\n        Video: WhammyVideo\n    };\n})();\n\nif (typeof MediaStreamRecorder !== 'undefined') {\n    MediaStreamRecorder.Whammy = Whammy;\n}\n\n// Last time updated at Nov 18, 2014, 08:32:23\n\n// Latest file can be found here: https://cdn.webrtc-experiment.com/ConcatenateBlobs.js\n\n// Muaz Khan    - www.MuazKhan.com\n// MIT License  - www.WebRTC-Experiment.com/licence\n// Source Code  - https://github.com/muaz-khan/ConcatenateBlobs\n// Demo         - https://www.WebRTC-Experiment.com/ConcatenateBlobs/\n\n// ___________________\n// ConcatenateBlobs.js\n\n// Simply pass array of blobs.\n// This javascript library will concatenate all blobs in single \"Blob\" object.\n\n(function() {\n    window.ConcatenateBlobs = function(blobs, type, callback) {\n        var buffers = [];\n\n        var index = 0;\n\n        function readAsArrayBuffer() {\n            if (!blobs[index]) {\n                return concatenateBuffers();\n            }\n            var reader = new FileReader();\n            reader.onload = function(event) {\n                buffers.push(event.target.result);\n                index++;\n                readAsArrayBuffer();\n            };\n            reader.readAsArrayBuffer(blobs[index]);\n        }\n\n        readAsArrayBuffer();\n\n        function concatenateBuffers() {\n            var byteLength = 0;\n            buffers.forEach(function(buffer) {\n                byteLength += buffer.byteLength;\n            });\n\n            var tmp = new Uint16Array(byteLength);\n            var lastOffset = 0;\n            buffers.forEach(function(buffer) {\n                // BYTES_PER_ELEMENT == 2 for Uint16Array\n                var reusableByteLength = buffer.byteLength;\n                if (reusableByteLength % 2 != 0) {\n                    buffer = buffer.slice(0, reusableByteLength - 1)\n                }\n                tmp.set(new Uint16Array(buffer), lastOffset);\n                lastOffset += reusableByteLength;\n            });\n\n            var blob = new Blob([tmp.buffer], {\n                type: type\n            });\n\n            callback(blob);\n        }\n    };\n})();\n\n// https://github.com/streamproc/MediaStreamRecorder/issues/42\nif (typeof module !== 'undefined' /* && !!module.exports*/ ) {\n    module.exports = MediaStreamRecorder;\n}\n\nif (typeof define === 'function' && define.amd) {\n    define('MediaStreamRecorder', [], function() {\n        return MediaStreamRecorder;\n    });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.1.3.4@msr/MediaStreamRecorder.js\n// module id = 666\n// module chunks = 1","\n/* styles */\nrequire(\"!!../../node_modules/.2.1.0@extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/.11.3.4@vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-369f38b4\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/.11.3.4@vue-loader/lib/selector?type=styles&index=0!./MicPopup.vue\")\n\nvar Component = require(\"!../../node_modules/.11.3.4@vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/.11.3.4@vue-loader/lib/selector?type=script&index=0!./MicPopup.vue\"),\n  /* template */\n  require(\"!!../../node_modules/.11.3.4@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-369f38b4\\\"}!../../node_modules/.11.3.4@vue-loader/lib/selector?type=template&index=0!./MicPopup.vue\"),\n  /* scopeId */\n  \"data-v-369f38b4\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/MicPopup.vue\n// module id = 667\n// module chunks = 1","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', [_c('div', {\n    staticClass: \"search-bg\"\n  }), _vm._v(\" \"), _c('i-row', [_c('i-col', {\n    attrs: {\n      \"span\": \"18\",\n      \"offset\": \"3\"\n    }\n  }, [_c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.keywords),\n      expression: \"keywords\"\n    }],\n    staticClass: \"min-card search-input\",\n    attrs: {\n      \"type\": \"text\",\n      \"placeholder\": \"今天想听点什么...\"\n    },\n    domProps: {\n      \"value\": (_vm.keywords)\n    },\n    on: {\n      \"keyup\": function($event) {\n        if (!('button' in $event) && _vm._k($event.keyCode, \"enter\", 13)) { return null; }\n        _vm.search($event)\n      },\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.keywords = $event.target.value\n      }\n    }\n  }), _vm._v(\" \"), _c('i-icon', {\n    staticClass: \"search-mic\",\n    attrs: {\n      \"type\": \"mic-a\"\n    },\n    nativeOn: {\n      \"click\": function($event) {\n        _vm.micPopup = !_vm.micPopup\n      }\n    }\n  }), _vm._v(\" \"), _c('i-icon', {\n    staticClass: \"search-icon\",\n    attrs: {\n      \"type\": \"search\"\n    },\n    nativeOn: {\n      \"click\": function($event) {\n        _vm.search($event)\n      }\n    }\n  }), _vm._v(\" \"), _c('transition', {\n    attrs: {\n      \"enter-active-class\": \"animated slideInUp\",\n      \"leave-active-class\": \"animated slideOutDown\"\n    }\n  }, [(_vm.micPopup) ? _c('mic-popup', {\n    on: {\n      \"close\": _vm.closeMic\n    }\n  }) : _vm._e()], 1)], 1)], 1), _vm._v(\" \"), _c('br'), _c('br'), _c('br'), _vm._v(\" \"), _c('i-row', [_c('i-col', {\n    attrs: {\n      \"span\": \"24\"\n    }\n  }, [_c('div', {\n    staticClass: \"min-card card text-center\",\n    staticStyle: {\n      \"line-height\": \"60px\",\n      \"height\": \"60px\"\n    }\n  }, [_vm._l((_vm.type), function(item, index) {\n    return (item.color) ? _c('tag', {\n      key: index,\n      staticStyle: {\n        \"margin\": \"0 1rem\"\n      },\n      attrs: {\n        \"color\": item.color,\n        \"type\": \"dot\"\n      },\n      nativeOn: {\n        \"click\": function($event) {\n          _vm.searchDetil(index)\n        }\n      }\n    }, [_vm._v(\"\\n          \" + _vm._s(item.str) + _vm._s(index == _vm.activeType && _vm.resultShow ? '(' + _vm.result.count + ')个结果' : '') + \"\\n        \")]) : _vm._e()\n  }), _vm._v(\" \"), _vm._l((_vm.type), function(item, index) {\n    return (index == 4) ? _c('tag', {\n      key: index,\n      staticStyle: {\n        \"margin\": \"0 1rem\"\n      },\n      attrs: {\n        \"type\": \"dot\"\n      },\n      nativeOn: {\n        \"click\": function($event) {\n          _vm.searchDetil(index)\n        }\n      }\n    }, [_vm._v(\"\\n          \" + _vm._s(item.str) + _vm._s(index == _vm.activeType && _vm.resultShow ? '(' + _vm.result.count + ')个结果' : '') + \"\\n        \")]) : _vm._e()\n  })], 2)])], 1), _vm._v(\" \"), _c('br'), _c('br'), _vm._v(\" \"), _c('div', {\n    staticClass: \"card\",\n    staticStyle: {\n      \"min-height\": \"400px\",\n      \"padding\": \"50px\"\n    }\n  }, [(_vm.type[_vm.activeType].code === 1 && _vm.resultShow) ? _c('div', [_vm._l((_vm.result.data), function(item, index) {\n    return _c('div', {\n      staticClass: \"song-result-content text-center\",\n      class: {\n        'active': index % 2 == 0\n      }\n    }, [(index == 0) ? _c('i-row', {\n      staticStyle: {\n        \"background\": \"#fff\"\n      }\n    }, [_c('i-col', {\n      attrs: {\n        \"span\": \"24\"\n      }\n    }, [_c('i-row', [_c('i-col', {\n      attrs: {\n        \"span\": \"2\"\n      }\n    }, [_vm._v(\"\\n                 \\n              \")]), _vm._v(\" \"), _c('i-col', {\n      attrs: {\n        \"span\": \"4\"\n      }\n    }, [_vm._v(\"\\n                歌手名\\n              \")]), _vm._v(\" \"), _c('i-col', {\n      attrs: {\n        \"span\": \"10\"\n      }\n    }, [_vm._v(\"\\n                歌曲名\\n              \")]), _vm._v(\" \"), _c('i-col', {\n      attrs: {\n        \"span\": \"8\"\n      }\n    }, [_vm._v(\"\\n                所属专辑\\n              \")])], 1), _vm._v(\" \"), _c('div', {\n      staticClass: \"dir\",\n      staticStyle: {\n        \"margin-bottom\": \"0\"\n      }\n    })], 1)], 1) : _vm._e(), _vm._v(\" \"), _c('i-row', [_c('i-col', {\n      attrs: {\n        \"span\": \"2\"\n      }\n    }, [_c('i-icon', {\n      staticStyle: {\n        \"cursor\": \"pointer\"\n      },\n      attrs: {\n        \"type\": \"play\"\n      },\n      nativeOn: {\n        \"click\": function($event) {\n          _vm.wyPlayMusic(item)\n        }\n      }\n    })], 1), _vm._v(\" \"), _c('i-col', {\n      attrs: {\n        \"span\": \"4\"\n      }\n    }, [_vm._v(\"\\n            \" + _vm._s(item.artists[0].name) + \"\\n            \")]), _vm._v(\" \"), _c('i-col', {\n      attrs: {\n        \"span\": \"10\"\n      }\n    }, [_vm._v(\"\\n            \" + _vm._s(item.name) + \"\\n            \")]), _vm._v(\" \"), _c('i-col', {\n      attrs: {\n        \"span\": \"8\"\n      }\n    }, [_vm._v(\"\\n            \" + _vm._s(item.album.name) + \"\\n            \")])], 1)], 1)\n  }), _vm._v(\" \"), _c('br'), _c('br')], 2) : _vm._e(), _vm._v(\" \"), (_vm.type[_vm.activeType].code === 10 && _vm.resultShow) ? _c('div', [_c('i-row', [_c('i-col', {\n    attrs: {\n      \"span\": \"22\",\n      \"offset\": \"1\"\n    }\n  }, _vm._l((_vm.result.data), function(item, row) {\n    return _c('i-row', {\n      key: row,\n      staticClass: \"text-center\",\n      attrs: {\n        \"gutter\": 64\n      }\n    }, _vm._l((_vm.result.data), function(item, col) {\n      return (row * 4 <= col && col < (row + 1) * 4) ? _c('i-col', {\n        key: col,\n        attrs: {\n          \"span\": \"6\"\n        }\n      }, [_c('div', {\n        staticStyle: {\n          \"height\": \"150px\",\n          \"margin-bottom\": \".5rem\"\n        }\n      }, [_c('img', {\n        staticClass: \"card card-hover\",\n        staticStyle: {\n          \"height\": \"150px\",\n          \"width\": \"100%\"\n        },\n        attrs: {\n          \"src\": item.picUrl\n        },\n        on: {\n          \"click\": function($event) {\n            _vm.$store.commit('router', {\n              path: '/album',\n              id: item.id\n            })\n          }\n        }\n      })]), _vm._v(\" \"), _c('div', {\n        staticStyle: {\n          \"font-size\": \"13px\"\n        }\n      }, [_vm._v(_vm._s(item.name))]), _vm._v(\" \"), _c('div', {\n        staticStyle: {\n          \"font-size\": \"12px\",\n          \"color\": \"#bbb\"\n        }\n      }, [_vm._v(_vm._s(item.artist.name) + \" - \" + _vm._s(_vm.formatTime(item.publishTime)))]), _vm._v(\" \"), _c('br')]) : _vm._e()\n    }))\n  }))], 1), _vm._v(\" \"), _c('br'), _c('br')], 1) : _vm._e(), _vm._v(\" \"), (_vm.type[_vm.activeType].code === 100 && _vm.resultShow) ? _c('div', [_c('i-row', [_c('i-col', {\n    attrs: {\n      \"span\": \"22\",\n      \"offset\": \"1\"\n    }\n  }, _vm._l((_vm.result.data), function(rowItem, row) {\n    return _c('i-row', {\n      key: row,\n      staticClass: \"album-result-content text-center\",\n      attrs: {\n        \"gutter\": 64\n      }\n    }, _vm._l((_vm.result.data), function(item, col) {\n      return (row * 4 <= col && col < (row + 1) * 4) ? _c('i-col', {\n        key: col,\n        attrs: {\n          \"span\": \"6\"\n        }\n      }, [_c('div', {\n        staticClass: \"cursor\",\n        staticStyle: {\n          \"height\": \"150px\"\n        }\n      }, [_c('img', {\n        staticClass: \"card card-hover\",\n        staticStyle: {\n          \"height\": \"150px\",\n          \"width\": \"100%\"\n        },\n        attrs: {\n          \"src\": item.img1v1Url\n        },\n        on: {\n          \"click\": function($event) {\n            _vm.$store.commit('router', {\n              path: '/artist',\n              id: item.id\n            })\n          }\n        }\n      })]), _vm._v(\" \"), _c('div', [_vm._v(_vm._s(item.name))])]) : _vm._e()\n    }))\n  }))], 1), _vm._v(\" \"), _c('br'), _c('br')], 1) : _vm._e(), _vm._v(\" \"), (_vm.type[_vm.activeType].code === 1000 && _vm.resultShow) ? _c('div', [_c('i-row', [_c('i-col', {\n    attrs: {\n      \"span\": \"22\",\n      \"offset\": \"1\"\n    }\n  }, _vm._l((_vm.result.data), function(item, row) {\n    return _c('i-row', {\n      key: row,\n      staticClass: \"text-center\",\n      attrs: {\n        \"gutter\": 64\n      }\n    }, _vm._l((_vm.result.data), function(item, col) {\n      return (row * 4 <= col && col < (row + 1) * 4) ? _c('i-col', {\n        key: col,\n        attrs: {\n          \"span\": \"6\"\n        }\n      }, [_c('div', {\n        staticStyle: {\n          \"height\": \"150px\",\n          \"margin-bottom\": \".5rem\"\n        }\n      }, [_c('img', {\n        staticClass: \"card card-hover\",\n        staticStyle: {\n          \"height\": \"150px\",\n          \"width\": \"100%\"\n        },\n        attrs: {\n          \"src\": item.coverImgUrl\n        },\n        on: {\n          \"click\": function($event) {\n            _vm.$store.commit('router', {\n              path: '/playlist',\n              id: item.id\n            })\n          }\n        }\n      })]), _vm._v(\" \"), _c('div', {\n        staticStyle: {\n          \"font-size\": \"13px\"\n        }\n      }, [_vm._v(_vm._s(item.name))]), _vm._v(\" \"), _c('div', {\n        staticStyle: {\n          \"font-size\": \"12px\",\n          \"color\": \"#bbb\"\n        }\n      }, [_vm._v(\"\\n                \" + _vm._s(item.trackCount) + \"首 - \" + _vm._s(item.playCount) + \"次播放\\n              \")]), _vm._v(\" \"), _c('br')]) : _vm._e()\n    }))\n  }))], 1), _vm._v(\" \"), _c('br'), _c('br')], 1) : _vm._e(), _vm._v(\" \"), (_vm.type[_vm.activeType].code === 1004 && _vm.resultShow) ? _c('div', [_vm._l((_vm.result.data), function(item, row) {\n    return _c('i-row', {\n      key: row,\n      staticClass: \"text-center\",\n      attrs: {\n        \"gutter\": 64\n      }\n    }, _vm._l((_vm.result.data), function(item, col) {\n      return (row * 4 <= col && col < (row + 1) * 4) ? _c('i-col', {\n        key: col,\n        attrs: {\n          \"span\": \"6\"\n        }\n      }, [_c('div', {\n        staticStyle: {\n          \"height\": \"100px\",\n          \"margin-bottom\": \".5rem\"\n        }\n      }, [_c('img', {\n        staticClass: \"card card-hover\",\n        staticStyle: {\n          \"height\": \"100px\",\n          \"width\": \"100%\"\n        },\n        attrs: {\n          \"src\": item.cover\n        },\n        on: {\n          \"click\": function($event) {\n            _vm.$store.commit('router', {\n              id: item.id,\n              path: '/playMv'\n            })\n          }\n        }\n      })]), _vm._v(\" \"), _c('div', {\n        staticStyle: {\n          \"font-size\": \"13px\"\n        }\n      }, [_vm._v(_vm._s(item.name))]), _vm._v(\" \"), _c('div', {\n        staticStyle: {\n          \"font-size\": \"12px\",\n          \"color\": \"#bbb\"\n        }\n      }, [_vm._v(\"\\n            \" + _vm._s(item.artistName) + \" - \" + _vm._s(_vm.formatTimeMi(item.duration / 1000)) + \"\\n          \")]), _vm._v(\" \"), _c('br')]) : _vm._e()\n    }))\n  }), _vm._v(\" \"), _c('br'), _c('br')], 2) : _vm._e(), _vm._v(\" \"), (_vm.resultShow) ? _c('mu-pagination', {\n    staticStyle: {\n      \"justify-content\": \"center\"\n    },\n    attrs: {\n      \"total\": _vm.result.count,\n      \"current\": _vm.currPage,\n      \"defaultPageSize\": _vm.pageSize\n    },\n    on: {\n      \"pageChange\": _vm.pageChange\n    }\n  }) : _vm._e()], 1), _vm._v(\" \"), _c('div', {\n    staticStyle: {\n      \"height\": \"80px\"\n    }\n  })], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.11.3.4@vue-loader/lib/template-compiler?{\"id\":\"data-v-0e58c7f7\"}!./~/.11.3.4@vue-loader/lib/selector.js?type=template&index=0!./src/components/Search.vue\n// module id = 673\n// module chunks = 1","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"mic-popup card text-center\"\n  }, [_c('i-circle', {\n    attrs: {\n      \"percent\": _vm.micPercent,\n      \"size\": 250,\n      \"stroke-color\": \"#41464b\",\n      \"stroke-width\": 2,\n      \"trail-width\": 1\n    }\n  }, [_c('i-icon', {\n    staticClass: \"search-mic-big\",\n    attrs: {\n      \"type\": \"mic-a\"\n    }\n  }), _vm._v(\" \"), _c('br'), _c('br'), _vm._v(\" \"), _c('button', {\n    staticClass: \"c-btn card\",\n    on: {\n      \"click\": _vm.startMic\n    }\n  }, [_vm._v(_vm._s(_vm.micText))]), _vm._v(\" \"), _c('transition', {\n    attrs: {\n      \"enter-active-class\": \"animated slideInUp\",\n      \"leave-active-class\": \"animated slideOutDown\"\n    }\n  }, [(_vm.resultShow) ? _c('div', {\n    staticClass: \"result-div text-center card\"\n  }, [_c('img', {\n    staticClass: \"cursor result-img card3\",\n    attrs: {\n      \"src\": _vm.result.album.picUrl\n    },\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        _vm.playMusic(_vm.result)\n      }\n    }\n  }), _vm._v(\" \"), _c('div', {\n    staticClass: \"dir\"\n  }), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('div', {\n    staticClass: \"cursor\",\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        _vm.playMusic(_vm.result)\n      }\n    }\n  }, [_vm._v(\"\\n          \" + _vm._s(_vm.result.name) + \"\\n        \")]), _vm._v(\" \"), _c('div', {\n    staticStyle: {\n      \"font-size\": \"14px\",\n      \"margin\": \".7rem 0\"\n    }\n  }, [_vm._v(\"\\n          \" + _vm._s(_vm.result.artist.name) + \"\\n        \")]), _vm._v(\" \"), _c('div', {\n    staticStyle: {\n      \"font-size\": \"12px\"\n    }\n  }, [_vm._v(\"\\n          \" + _vm._s(_vm.result.album.name) + \"\\n        \")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"cursor\",\n    staticStyle: {\n      \"font-size\": \"10px\",\n      \"margin-top\": \"1rem\"\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.resultShow = false;\n        _vm.micText = '开始识别'\n      }\n    }\n  }, [_c('svg', {\n    staticClass: \"icon\",\n    staticStyle: {\n      \"width\": \"1em\",\n      \"height\": \"1em\",\n      \"vertical-align\": \"middle\",\n      \"fill\": \"currentColor\",\n      \"overflow\": \"hidden\"\n    },\n    attrs: {\n      \"t\": \"1494570290786\",\n      \"viewBox\": \"0 0 1024 1024\",\n      \"version\": \"1.1\",\n      \"xmlns\": \"http://www.w3.org/2000/svg\",\n      \"p-id\": \"3039\"\n    }\n  }, [_c('path', {\n    attrs: {\n      \"d\": \"M566.594 512.533l288.992-288.994c12.998-12.993 11.492-35.558-3.361-50.407-14.846-14.846-37.405-16.353-50.406-3.358l-288.991 288.994-288.99-288.994c-12.998-12.995-35.559-11.489-50.407 3.358-14.851 14.849-16.359 37.414-3.36 50.407l288.992 288.994-288.987 288.99c-12.995 12.99-11.496 35.56 3.355 50.407 14.842 14.846 37.416 16.349 50.407 3.36l288.99-288.992 288.993 288.992c12.988 12.989 35.564 11.486 50.406-3.36 14.852-14.847 16.35-37.416 3.355-50.408l-288.988-288.99z\",\n      \"p-id\": \"3040\"\n    }\n  })])])]) : _vm._e()])], 1), _vm._v(\" \"), _c('br'), _c('br'), _vm._v(\" \"), _c('div', {\n    staticClass: \"cursor\",\n    staticStyle: {\n      \"font-size\": \"14px\"\n    },\n    on: {\n      \"click\": _vm.close\n    }\n  }, [_c('svg', {\n    staticClass: \"icon\",\n    staticStyle: {\n      \"width\": \"1em\",\n      \"height\": \"1em\",\n      \"vertical-align\": \"middle\",\n      \"fill\": \"currentColor\",\n      \"overflow\": \"hidden\"\n    },\n    attrs: {\n      \"t\": \"1494570290786\",\n      \"viewBox\": \"0 0 1024 1024\",\n      \"version\": \"1.1\",\n      \"xmlns\": \"http://www.w3.org/2000/svg\",\n      \"p-id\": \"3039\"\n    }\n  }, [_c('path', {\n    attrs: {\n      \"d\": \"M566.594 512.533l288.992-288.994c12.998-12.993 11.492-35.558-3.361-50.407-14.846-14.846-37.405-16.353-50.406-3.358l-288.991 288.994-288.99-288.994c-12.998-12.995-35.559-11.489-50.407 3.358-14.851 14.849-16.359 37.414-3.36 50.407l288.992 288.994-288.987 288.99c-12.995 12.99-11.496 35.56 3.355 50.407 14.842 14.846 37.416 16.349 50.407 3.36l288.99-288.992 288.993 288.992c12.988 12.989 35.564 11.486 50.406-3.36 14.852-14.847 16.35-37.416 3.355-50.408l-288.988-288.99z\",\n      \"p-id\": \"3040\"\n    }\n  })])])], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.11.3.4@vue-loader/lib/template-compiler?{\"id\":\"data-v-369f38b4\"}!./~/.11.3.4@vue-loader/lib/selector.js?type=template&index=0!./src/components/MicPopup.vue\n// module id = 678\n// module chunks = 1","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/.0.28.1@css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/.11.3.4@vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-0e58c7f7\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/.11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./Search.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/.2.0.5@vue-style-loader/lib/addStylesClient.js\")(\"30c59cd4\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.1.0@extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/.2.0.5@vue-style-loader!./~/.0.28.1@css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/.11.3.4@vue-loader/lib/style-compiler?{\"id\":\"data-v-0e58c7f7\",\"scoped\":true,\"hasInlineConfig\":false}!./~/.11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./src/components/Search.vue\n// module id = 688\n// module chunks = 1","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/.0.28.1@css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/.11.3.4@vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-369f38b4\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/.11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./MicPopup.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/.2.0.5@vue-style-loader/lib/addStylesClient.js\")(\"507fb7af\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.1.0@extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/.2.0.5@vue-style-loader!./~/.0.28.1@css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/.11.3.4@vue-loader/lib/style-compiler?{\"id\":\"data-v-369f38b4\",\"scoped\":true,\"hasInlineConfig\":false}!./~/.11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./src/components/MicPopup.vue\n// module id = 692\n// module chunks = 1","<style scoped>\n  .mic-popup {\n    position: absolute;\n    padding-top: 80px;\n    height: 400px;\n    width: 100%;\n    background: #fff;\n    top: 110%;\n    z-index: 1\n  }\n\n  .search-mic-big {\n    font-size: 150px\n  }\n\n  .result-div {\n    position: absolute;\n    top: -33%;\n    left: -10%;\n    height: 320px;\n    width: 320px;\n    border-radius: 50%;\n    background: #fff;\n    font-size: 16px;\n    padding: 50px;\n    z-index: 1\n  }\n\n  .result-img {\n    width: 120px;\n    height: 120px;\n    border-radius: 50%\n  }\n\n</style>\n<template>\n  <div class=\"mic-popup card text-center\">\n    <i-circle :percent=\"micPercent\" :size=\"250\" stroke-color=\"#41464b\" :stroke-width=\"2\" :trail-width=\"1\">\n      <i-icon type=\"mic-a\" class=\"search-mic-big\"></i-icon>\n      <br/><br/>\n      <button class=\"c-btn card\" @click=\"startMic\">{{micText}}</button>\n      <transition enter-active-class=\"animated slideInUp\" leave-active-class=\"animated slideOutDown\">\n        <div v-if=\"resultShow\" class=\"result-div text-center card\">\n          <img @click.stop=\"playMusic(result)\" :src=\"result.album.picUrl\" class=\"cursor result-img card3\">\n          <div class=\"dir\"></div>\n          <br/>\n          <div class=\"cursor\" @click.stop=\"playMusic(result)\">\n            {{result.name}}\n          </div>\n          <div style=\"font-size:14px;margin:.7rem 0\">\n            {{result.artist.name}}\n          </div>\n          <div style=\"font-size:12px\">\n            {{result.album.name}}\n          </div>\n          <div @click=\"resultShow=false;micText='开始识别'\" class=\"cursor\" style=\"font-size:10px;margin-top:1rem\">\n            <svg t=\"1494570290786\" class=\"icon\" style=\"width: 1em; height: 1em;vertical-align: middle;fill: currentColor;overflow: hidden;\"\n              viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"3039\">\n              <path d=\"M566.594 512.533l288.992-288.994c12.998-12.993 11.492-35.558-3.361-50.407-14.846-14.846-37.405-16.353-50.406-3.358l-288.991 288.994-288.99-288.994c-12.998-12.995-35.559-11.489-50.407 3.358-14.851 14.849-16.359 37.414-3.36 50.407l288.992 288.994-288.987 288.99c-12.995 12.99-11.496 35.56 3.355 50.407 14.842 14.846 37.416 16.349 50.407 3.36l288.99-288.992 288.993 288.992c12.988 12.989 35.564 11.486 50.406-3.36 14.852-14.847 16.35-37.416 3.355-50.408l-288.988-288.99z\"\n                p-id=\"3040\"></path>\n            </svg>\n          </div>\n        </div>\n      </transition>\n\n    </i-circle>\n    <br/><br/>\n    <div @click=\"close\" class=\"cursor\" style=\"font-size:14px\">\n      <svg t=\"1494570290786\" class=\"icon\" style=\"width: 1em; height: 1em;vertical-align: middle;fill: currentColor;overflow: hidden;\"\n        viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"3039\">\n        <path d=\"M566.594 512.533l288.992-288.994c12.998-12.993 11.492-35.558-3.361-50.407-14.846-14.846-37.405-16.353-50.406-3.358l-288.991 288.994-288.99-288.994c-12.998-12.995-35.559-11.489-50.407 3.358-14.851 14.849-16.359 37.414-3.36 50.407l288.992 288.994-288.987 288.99c-12.995 12.99-11.496 35.56 3.355 50.407 14.842 14.846 37.416 16.349 50.407 3.36l288.99-288.992 288.993 288.992c12.988 12.989 35.564 11.486 50.406-3.36 14.852-14.847 16.35-37.416 3.355-50.408l-288.988-288.99z\"\n          p-id=\"3040\"></path>\n      </svg>\n    </div>\n    <!--<button class=\"c-btn card\" id=\"saveMic\">保存录音</button>-->\n  </div>\n</template>\n<script>\n  let MediaStreamRecorder = require('msr')\n  import {\n    Message\n  } from 'iview'\n  import api from '../axios'\n  export default {\n    data() {\n      return {\n        micToggle: false,\n        micPercent: 0,\n        micText: '开始识别',\n        resultShow: false,\n        result: {}\n      }\n    },\n    methods: {\n      close(){\n        this.$emit('close', false)\n      },\n      startMic() {\n        navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia\n        if (navigator.getUserMedia) {\n\n          let _this = this\n\n          function captureUserMedia(mediaConstraints, successCallback, errorCallback) {\n            navigator.mediaDevices.getUserMedia(mediaConstraints).then(successCallback).catch(errorCallback);\n          }\n          let mediaConstraints = {\n            audio: true\n          };\n\n          function uploadToPythonServer(blob) {\n            var file = new File([blob], 'msr-' + (new Date).toISOString().replace(/:|\\./g, '-') + '.wav', {\n              type: 'audio/wav'\n            });\n            var formData = new FormData();\n            formData.append('audioMic', file)\n            api.audioRec(formData).then((data) => {\n              if (data.code == 200) {\n                console.log(data)\n                _this.result = data.result\n                _this.resultShow = true\n              }else{\n                _this.micText = '开始识别'\n              }\n            })\n            // makeXMLHttpRequest('http://localhost:5000/api/audioRec', formData, function () {\n            //   var downloadURL = 'http://localhost:5000/api/audioRec' + file.name;\n            //   console.log('File uploaded to this path:', downloadURL);\n            // });\n          }\n\n          function makeXMLHttpRequest(url, data, callback) {\n            var request = new XMLHttpRequest();\n            request.onreadystatechange = function () {\n              if (request.readyState == 4 && request.status == 200) {\n                callback();\n              }\n            };\n            request.open('POST', url);\n            request.send(data);\n          }\n          captureUserMedia(mediaConstraints, onMediaSuccess, onMediaError);\n          let mediaRecorder\n          document.querySelector('#saveMic').onclick = function () {\n            mediaRecorder.save()\n          }\n\n          function onMediaSuccess(stream) {\n            // let audio = document.getElementById('audio');\n            // audio.src = URL.createObjectURL(stream)\n            // audio.play()\n            mediaRecorder = new MediaStreamRecorder(stream)\n            mediaRecorder.mimeType = 'audio/wav';\n            let count = 0\n            mediaRecorder.ondataavailable = function (blob) {\n              count++\n              if (count == 1) {\n                console.log('正在录音', blob)\n                uploadToPythonServer(blob)\n              }\n            };\n            mediaRecorder.start(10000)\n\n            if (!_this.micToggle) {\n              _this.micToggle = true\n              _this.micText = '正在识别'\n              let micSetInterval = setInterval(() => {\n                if (_this.micToggle) {\n                  _this.micPercent++\n                }\n              }, 100)\n              setTimeout(() => {\n                _this.micToggle = false\n                _this.micText = '识别中...'\n                window.clearInterval(micSetInterval)\n                mediaRecorder.stop()\n              }, 10100)\n            }\n          }\n\n          function onMediaError(e) {\n            console.error('media error', e);\n          }\n        } else {\n          Message.error('您的浏览器不支持录音功能,请使用最新版用谷歌浏览器')\n        }\n      },\n      playMusic(item) {\n        this.$store.commit('playMusic', {\n          url: 'http://localhost:5000' + item.url,\n          artist: item.artist,\n          album: item.album,\n          music: item\n        })\n      },\n      test() {\n        alert(1)\n      }\n    },\n    destroyed() {\n      console.log(1111)\n    }\n  }\n\n</script>\n\n\n\n// WEBPACK FOOTER //\n// MicPopup.vue?7510970c","<style scoped>\n  .search-bg {\n    position: absolute;\n    background: #f0f0f0;\n    top: 0;\n    height: calc(150px + 9rem);\n    z-index: -1;\n    width: 100%;\n    left: 0\n  }\n\n  .search-input {\n    background: #fff;\n    width: 100%;\n    border: none;\n    outline: none;\n    height: 50px;\n    font-size: 20px;\n    padding: 0 50px;\n  }\n\n  .search-icon {\n    color: #bababa;\n    font-size: 24px;\n    position: absolute;\n    top: 13px;\n    right: 20px;\n    cursor: pointer;\n    z-index: 1\n  }\n\n  .search-mic {\n    color: #bababa;\n    font-size: 24px;\n    position: absolute;\n    top: 13px;\n    left: 20px;\n    cursor: pointer;\n    z-index: 1\n  }\n\n  .song-result-content {\n    line-height: 40px\n  }\n\n  .song-result-content.active {\n    background: #f0f0f0\n  }\n\n  .album-result-content {\n    line-height: 50px\n  }\n\n  .album-result-content.active {\n    background: #f0f0f0\n  }\n\n</style>\n<template lang=\"\">\n  <div>\n    <div class=\"search-bg\">\n    </div>\n    <i-row>\n      <i-col span=\"18\" offset=\"3\">\n        <input @keyup.enter=\"search\" type=\"text\" v-model=\"keywords\" placeholder=\"今天想听点什么...\" class=\"min-card search-input\" />\n        <i-icon @click.native=\"micPopup=!micPopup\" type=\"mic-a\" class=\"search-mic\"></i-icon>\n        <i-icon @click.native=\"search\" type=\"search\" class=\"search-icon\"></i-icon>\n        <transition enter-active-class=\"animated slideInUp\" leave-active-class=\"animated slideOutDown\">\n          <mic-popup v-if=\"micPopup\" @close=\"closeMic\"></mic-popup>\n        </transition>\n      </i-col>\n    </i-row>\n    <br/><br/><br/>\n    <!--<audio controls src=\"http://127.0.0.1:5000/mp3/hongzhuang.mp3\"></audio>-->\n    <i-row>\n      <i-col span=\"24\">\n        <div class=\"min-card card text-center\" style=\"line-height:60px;height:60px\">\n          <tag v-if=\"item.color\" @click.native=\"searchDetil(index)\" :key=\"index\" v-for=\"(item,index) in type\" :color=\"item.color\" type=\"dot\"\n            style=\"margin:0 1rem\">\n            {{item.str}}{{index==activeType && resultShow? '('+result.count+')个结果':''}}\n          </tag>\n          <tag v-if=\"index==4\" @click.native=\"searchDetil(index)\" v-for=\"(item,index) in type\" :key=\"index\" type=\"dot\" style=\"margin:0 1rem\">\n            {{item.str}}{{index==activeType && resultShow? '('+result.count+')个结果':''}}\n          </tag>\n        </div>\n      </i-col>\n    </i-row>\n    <br/><br/>\n    <div class=\"card\" style=\"min-height:400px;padding:50px\">\n      <div v-if=\"type[activeType].code===1&&resultShow\">\n        <div class=\"song-result-content text-center\" :class=\"{'active':index%2==0}\" v-for=\"(item,index) in result.data\">\n          <i-row v-if=\"index==0\" style=\"background:#fff\">\n            <i-col span=\"24\">\n              <i-row>\n                <i-col span=\"2\">\n                  &nbsp;\n                </i-col>\n                <i-col span=\"4\">\n                  歌手名\n                </i-col>\n                <i-col span=\"10\">\n                  歌曲名\n                </i-col>\n                <i-col span=\"8\">\n                  所属专辑\n                </i-col>\n              </i-row>\n              <div class=\"dir\" style=\"margin-bottom:0\"></div>\n            </i-col>\n          </i-row>\n          <i-row>\n            <i-col span=\"2\">\n              <i-icon @click.native=\"wyPlayMusic(item)\" style=\"cursor:pointer\" type=\"play\"></i-icon>\n            </i-col>\n            <i-col span=\"4\">\n              <!--<div class=\"ellipsis\">-->\n              {{item.artists[0].name}}\n              <!--</div>-->\n            </i-col>\n            <i-col span=\"10\">\n              <!--<div class=\"ellipsis\">-->\n              {{item.name}}\n              <!--</div>-->\n            </i-col>\n            <i-col span=\"8\">\n              <!--<div class=\"ellipsis\">-->\n              {{item.album.name}}\n              <!--</div>-->\n            </i-col>\n          </i-row>\n        </div>\n        <br><br>\n      </div>\n      <div v-if=\"type[activeType].code===10&&resultShow\">\n        <i-row>\n          <i-col span=\"22\" offset=\"1\">\n            <i-row class=\"text-center\" :gutter=\"64\" :key=\"row\" v-for=\"(item,row) in result.data\">\n              <i-col span=\"6\" v-if=\"row*4<=col && col<(row+1)*4\" :key=\"col\" v-for=\"(item,col) in result.data\">\n                <div style=\"height:150px;margin-bottom:.5rem\">\n                  <img @click=\"$store.commit('router',{path:'/album',id:item.id})\" :src=\"item.picUrl\" style=\"height:150px;width:100%\" class=\"card card-hover\">\n                </div>\n                <div style=\"font-size:13px\">{{item.name}}</div>\n                <div style=\"font-size:12px;color:#bbb\">{{item.artist.name}} - {{formatTime(item.publishTime)}}</div>\n                <br>\n              </i-col>\n            </i-row>\n          </i-col>\n        </i-row>\n        <br><br>\n      </div>\n      <div v-if=\"type[activeType].code===100&&resultShow\">\n        <i-row>\n          <i-col span=\"22\" offset=\"1\">\n            <i-row :gutter=\"64\" class=\"album-result-content text-center\" :key=\"row\" v-for=\"(rowItem,row) in result.data\">\n              <i-col span=\"6\" v-if=\"row*4<=col && col<(row+1)*4\" :key=\"col\" v-for=\"(item,col) in result.data\">\n                <div class=\"cursor\" style=\"height:150px\">\n                  <img @click=\"$store.commit('router',{path:'/artist',id:item.id})\" :src=\"item.img1v1Url\" style=\"height:150px;width:100%\" class=\"card card-hover\">\n                </div>\n                <div>{{item.name}}</div>\n              </i-col>\n            </i-row>\n          </i-col>\n        </i-row>\n        <br><br>\n      </div>\n      <div v-if=\"type[activeType].code===1000&&resultShow\">\n        <i-row>\n          <i-col span=\"22\" offset=\"1\">\n            <i-row class=\"text-center\" :gutter=\"64\" :key=\"row\" v-for=\"(item,row) in result.data\">\n              <i-col span=\"6\" v-if=\"row*4<=col && col<(row+1)*4\" :key=\"col\" v-for=\"(item,col) in result.data\">\n                <div style=\"height:150px;margin-bottom:.5rem\">\n                  <img @click=\"$store.commit('router',{path:'/playlist',id:item.id})\" :src=\"item.coverImgUrl\" style=\"height:150px;width:100%\"\n                    class=\"card card-hover\">\n                </div>\n                <div style=\"font-size:13px\">{{item.name}}</div>\n                <div style=\"font-size:12px;color:#bbb\">\n                  {{item.trackCount}}首 - {{item.playCount}}次播放\n                </div>\n                <br>\n              </i-col>\n            </i-row>\n          </i-col>\n        </i-row>\n        <br><br>\n      </div>\n      <div v-if=\"type[activeType].code===1004&&resultShow\">\n        <i-row class=\"text-center\" :gutter=\"64\" :key=\"row\" v-for=\"(item,row) in result.data\">\n          <i-col span=\"6\" v-if=\"row*4<=col && col<(row+1)*4\" :key=\"col\" v-for=\"(item,col) in result.data\">\n            <div style=\"height:100px;margin-bottom:.5rem\">\n              <img @click=\"$store.commit('router',{id:item.id,path:'/playMv'})\" :src=\"item.cover\" style=\"height:100px;width:100%\" class=\"card card-hover\">\n            </div>\n            <div style=\"font-size:13px\">{{item.name}}</div>\n            <div style=\"font-size:12px;color:#bbb\">\n              {{item.artistName}} - {{formatTimeMi(item.duration/1000)}}\n            </div>\n            <br>\n          </i-col>\n        </i-row>\n        <br><br>\n      </div>\n      <mu-pagination v-if=\"resultShow\" style=\"justify-content: center\" @pageChange=\"pageChange\" :total=\"result.count\" :current=\"currPage\"\n        :defaultPageSize=\"pageSize\">\n      </mu-pagination>\n    </div>\n    <div style=\"height:80px\"></div>\n  </div>\n</template>\n\n<script>\n  import api from '../axios'\n  import wyApi from '../wyApi'\n  import MicPopup from './MicPopup'\n  import moment from 'moment'\n  moment.locale('zh-cn')\n  export default {\n    components: {\n      MicPopup\n    },\n    data() {\n      return {\n        micPopup: false,\n        micToggle: false,\n        micPercent: 0,\n        micText: '开始识别',\n        keywords: '',\n        activeType: 0,\n        type: [{\n          code: 1,\n          val: 'song',\n          str: '歌曲',\n          color: 'blue'\n        }, {\n          code: 10,\n          val: 'album',\n          str: '专辑',\n          color: 'green'\n        }, {\n          code: 100,\n          val: 'artist',\n          str: '歌手',\n          color: 'red'\n        }, {\n          code: 1000,\n          val: 'playlist',\n          str: '歌单',\n          color: 'yellow'\n        }, {\n          code: 1004,\n          val: 'mv',\n          str: 'MV',\n        }],\n        currPage: 1,\n        resultShow: false,\n        result: {\n          count: 10,\n          data: []\n        },\n        pageSize: 10\n      }\n    },\n    watch: {\n\n    },\n    methods: {\n      closeMic(val) {\n        this.micPopup = false\n      },\n      pageChange(val) {\n        this.currPage = val\n        console.log(val)\n        this.search()\n      },\n      search() {\n        // 1: 单曲\n        // 10: 专辑\n        // 100: 歌手\n        // 1000: 歌单\n        //1004: mv\n        this.resultShow = false\n        let keywords = this.keywords\n        let type = this.type[this.activeType]\n        if (type.code == 10) {\n          this.pageSize = 12\n        }\n        if (type.code == 100) {\n          this.pageSize = 12\n        }\n        if (type.code == 1004) {\n          this.pageSize = 12\n        }\n        let offset = (this.currPage - 1) * this.pageSize\n        wyApi.search(keywords, type.code, offset, this.pageSize).then((data) => {\n          if (data.code === 200) {\n            this.result['count'] = data.result[type.val + 'Count']\n            this.result['data'] = data.result[type.val + 's']\n            // console.log(this.result)\n            this.resultShow = true\n          }\n        })\n      },\n      searchDetil(index) {\n        this.activeType = index\n        this.currPage = 1\n        this.search()\n      },\n      wyPlayMusic(item) {\n        let musicData = {\n          url: item.mp3Url,\n          artist: {\n            name: item.artists[0].name\n          },\n          album: {\n            name: item.album.name,\n            picUrl: item.album.picUrl\n          },\n          music: {\n            name: item.name,\n            wyID: item.id,\n            url: item.mp3Url\n          }\n        }\n        this.$store.commit('playMusic', musicData)\n      },\n      formatTime(val) {\n        return moment(val).format('YYYY 年')\n      },\n      formatTimeMi(time) {\n        let minute = parseInt(time / 60)\n        if (minute < 10) {\n          minute = '0' + minute\n        }\n        let second = (time - minute * 60).toFixed(0)\n        if (second < 10) {\n          second = '0' + second\n        }\n        return minute + ':' + second\n      },\n      fixedPlayLeft(val) {\n        this.playLeft = val\n      },\n    },\n    mounted() {}\n  }\n\n</script>\n\n\n\n// WEBPACK FOOTER //\n// Search.vue?5227639c"],"sourceRoot":""}